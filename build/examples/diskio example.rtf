{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 \
s.boot; \cf3 // start the server\
\cf2 \
(\
\cf4 SynthDef\cf2 (\cf5 "bubbles"\cf2 , \{\
	\cf4 var\cf2  f, zout;\
	f = \cf4 LFSaw\cf2 .kr(0.4, 0, 24, \cf4 LFSaw\cf2 .kr([8,7.23], 0, 3, 80)).midicps; \cf3 // glissando function\
\cf2 	zout = \cf4 CombN\cf2 .ar(\cf4 SinOsc\cf2 .ar(f, 0, 0.04), 0.2, 0.2, 4); \cf3 // echoing sine wave\
\cf2 	\cf4 Out\cf2 .ar(0, zout.postln);\
\}).writeDefFile;\
s.sendMsg(\cf5 "/d_load"\cf2 , \cf5 "synthdefs/bubbles.scsyndef"\cf2 );\
)\
\
\
(\
\cf4 SynthDef\cf2 (\cf5 "diskout"\cf2 , \{\
	\cf4 DiskOut\cf2 .ar(0, \cf4 In\cf2 .ar(0,2));\
	\cf3 //Out.ar(0, In.ar(0,2));\
\cf2 \}).writeDefFile;\
s.sendMsg(\cf5 "/d_load"\cf2 , \cf5 "synthdefs/diskout.scsyndef"\cf2 );\
)\
\
\cf3 // start something to record\
\cf2 s.sendMsg(\cf5 "/s_new"\cf2 , \cf5 "bubbles"\cf2 , 2003, 1, 0);\
\
\cf3 // allocate a disk i/o buffer\
\cf2 s.sendMsg(\cf5 "/b_alloc"\cf2 , 0, 65536, 2);\
\
\cf3 // create an output file for this buffer, leave it open\
\cf2 s.sendMsg(\cf5 "/b_write"\cf2 , 0, \cf5 "diskouttest2.aiff"\cf2 , \cf5 "aiff"\cf2 , \cf5 "int16"\cf2 , 0, 0, 1);\
\
\cf3 // create the diskout node\
\cf2 s.sendMsg(\cf5 "/s_new"\cf2 , \cf5 "diskout"\cf2 , 2004, 3, 2003);\
\
s.sendMsg(\cf5 "/n_free"\cf2 , 2004); \cf3 // stop recording\
\cf2 s.sendMsg(\cf5 "/n_free"\cf2 , 2003); \cf3 // stop the bubbles\
\cf2 \
s.sendMsg(\cf5 "/b_close"\cf2 , 0); \cf3 // close the file.\
\cf2 s.sendMsg(\cf5 "/quit"\cf2 ); \cf3 // quit the server\
\cf2 \
\
\cf3 ////////////////////////////////////////////////////\
\cf2 \
\
s.boot; \cf3 // start the server\
\cf2 \
(\
\cf4 SynthDef\cf2 (\cf5 "diskin"\cf2 , \{\
	\cf4 Out\cf2 .ar(0, \cf4 DiskIn\cf2 .ar(2, 0));\
\}).writeDefFile;\
s.sendMsg(\cf5 "/d_load"\cf2 , \cf5 "synthdefs/diskin.scsyndef"\cf2 );\
)\
\
\
\cf3 // allocate a disk i/o buffer\
\cf2 s.sendMsg(\cf5 "/b_alloc"\cf2 , 0, 65536, 2);\
\
\cf3 // open an input file for this buffer, leave it open\
\cf2 s.sendMsg(\cf5 "/b_read"\cf2 , 0, \cf5 "diskouttest2.aiff"\cf2 , 0, 0, 0, 1);\
\
\cf3 // create a diskin node\
\cf2 s.sendMsg(\cf5 "/s_new"\cf2 , \cf5 "diskin"\cf2 , 2004, 1, 0);\
\
s.sendMsg(\cf5 "/n_free"\cf2 , 2004); \cf3 // stop reading\
\cf2 \
s.sendMsg(\cf5 "/b_zero"\cf2 , 0); \cf3 // clear buffer\
\cf2 \
\cf3 // again\
\cf2 s.sendMsg(\cf5 "/s_new"\cf2 , \cf5 "diskin"\cf2 , 2004, 1, 0);\
\
s.sendMsg(\cf5 "/n_free"\cf2 , 2004); \cf3 // stop reading\
\cf2 \
s.sendMsg(\cf5 "/b_close"\cf2 , 0); \cf3 // close the file.\
\cf2 \
s.sendMsg(\cf5 "/quit"\cf2 ); \cf3 // quit the server\
\cf2 \
}