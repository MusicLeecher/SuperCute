{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
\red191\green0\blue0;}
\vieww9000\viewh9000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
s = \cf2 Server\cf0 .local;\
s.boot;\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf3 "trem"\cf0 , \{ \cf2 arg\cf0  freq=800, rate=8, amp=0.1; \
	\cf2 var\cf0  osc;\
	osc = \cf2 LFTri\cf0 .ar(freq, 0, \cf2 SinOsc\cf0 .kr( rate + [0,0.1],0,amp).max(0));\
	\cf2 Out\cf0 .ar(0, osc.postln) \
\}).load(s);\
)\
\
(\
\cf2 SynthDef\cf0 (\cf3 "trem1"\cf0 , \{ \cf2 arg\cf0  freq=800, amp=0.1; \
	\cf2 var\cf0  osc, rate;\
	rate = \cf2 Line\cf0 .ar(4,12,8);\
	osc = \cf2 SinOsc\cf0 .ar(freq, 0, \cf2 SinOsc\cf0 .ar( rate + [0,0.1,0.2,0.3],0,amp).max(0));\
	\cf2 Out\cf0 .ar(0, \cf2 Mix\cf0 (osc)) \
\}).load(s);\
)\
\
\
(\
\cf2 var\cf0  w, f, d, values, server, id, isOn = \cf2 false\cf0 ;\
\
values = \cf2 IdentityDictionary\cf0 .new;\
\
f = \{ \cf2 arg\cf0  name, spec = \cf4 \\lin\cf0 , guispec;\
	\cf2 var\cf0  height = 20, v, s, n;\
	guispec = guispec ? spec;\
	spec = spec.asSpec;\
	guispec = guispec.asSpec;\
\
	v = \cf2 SCStaticText\cf0 (w, \cf2 Rect\cf0 (0, 0, 72, height));\
	v.font = \cf2 Font\cf0 (\cf3 "Helvetica"\cf0 , 12);\
	v.stringColor = \cf2 Color\cf0 .black;\
	v.align = \cf4 \\right\cf0 ;\
	\
	s = \cf2 SCSlider\cf0 (w, \cf2 Rect\cf0 (0, 0, 182, height));\
	s.resize = 2;\
	s.action = \{ \
		\cf2 var\cf0  val, guival, step;\
		val = spec.map(s.value);\
		values.put(name, val);\
		if (isOn, \{ server.sendMsg(\cf3 "/n_set"\cf0 , id, name, val); \});\
		guival = guispec.map(s.value);\
		step = pow(10, floor(min(0, guival.abs.log10 - 2)));\
		v.string = guival.round(step).asString ++ guispec.units;\
	\};\
	s.value = spec.unmap(spec.default);\
	s.action.value;\
	\
	n = \cf2 SCStaticText\cf0 (w, \cf2 Rect\cf0 (0, 0, 72, height));	n.string = name;\
	n.stringColor = \cf2 Color\cf0 .black;\
	n.font = \cf2 Font\cf0 (\cf3 "Helvetica"\cf0 , 12);\
	n.resize = 3;\
	\
	w.view.decorator.nextLine;\
\};\
\
\
id = 2001;\
server = \cf2 Server\cf0 .local;	\
w = \cf2 SCWindow\cf0 (\cf3 "trem"\cf0 , \cf2 Rect\cf0 (128, 64, 360, 160));\
w.view.decorator = d = \cf2 FlowLayout\cf0 (w.view.bounds);\
\
w.onClose = \{ if (isOn, \{ server.sendMsg(\cf3 "/n_free"\cf0 , 2001) \}) \};\
\
b = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20, 50, 80, 24));\
\
b.states = [[\cf3 "Start Sound"\cf0 , \cf2 Color\cf0 .black, \cf2 Color\cf0 .green],[\cf3 "Stop Sound"\cf0 , \cf2 Color\cf0 .white, \cf2 Color\cf0 .red]];\
d.nextLine;\
b.action = \{ \cf2 arg\cf0  view; \
	\cf2 var\cf0  msg;\
	if (view.value == 1, \{\
		isOn = \cf2 true\cf0 ;\
		msg = [\cf3 "/s_new"\cf0 , \cf3 "trem"\cf0 , 2001, 1, 0];\
		values.keysValuesDo(\{ \cf2 arg\cf0  key, value; msg = msg.addAll([key, value]); \});\
		server.performList(\cf4 \\sendMsg\cf0 , msg.postln); \
	\},\{\
		isOn = \cf2 false\cf0 ;\
		server.sendMsg(\cf3 "/n_free"\cf0 , 2001); \
	\});\
\};\
\
f.value(\cf4 \\freq\cf0 , \cf4 \\freq\cf0 );\
f.value(\cf4 \\rate\cf0 , \cf4 \\lofreq\cf0 );\
f.value(\cf4 \\pan\cf0 , \cf4 \\pan\cf0 );\
f.value(\cf4 \\amp\cf0 , \cf4 \\amp\cf0 , \cf4 \\db\cf0 );\
w.front;\
\
)\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 /////////////////////////////////////////////////////////////////////\cf0 \
\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf3 "tish"\cf0 , \{\
	\cf2 var\cf0  x;\
	x = \{\cf2 WhiteNoise\cf0 .ar\}.dup * \cf2 Decay2\cf0 .kr(\cf2 Impulse\cf0 .kr(\cf2 ExpRand\cf0 (0.5,3)), 0.01,0.1,0.1);\
	x = \cf2 CombN\cf0 .ar(x, 0.08, 0.08, 2);\
	\cf2 Out\cf0 .ar(0, x.postln);\
\}).load(s);\
\
\
\cf2 SynthDef\cf0 (\cf3 "moto-rev"\cf0 , \{\
	\cf2 var\cf0  x;\
	x = \cf2 RLPF\cf0 .ar(\cf2 LFPulse\cf0 .ar(\cf2 SinOsc\cf0 .kr(0.2, 0, 10, 21), [0,0.1], 0.1), 100, 0.1).clip2(0.4);\
	\cf2 Out\cf0 .ar(0, x);\
\}).load(s);\
)\
\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1001, 1, 0);\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1002, 1, 0);\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1003, 1, 0);\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1004, 1, 0);\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1005, 1, 0);\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1006, 1, 0);\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "tish"\cf0 , 1007, 1, 0);\
s.sendMsg(\cf3 "/n_free"\cf0 , 1001, 1002, 1003, 1004, 1005, 1006, 1007);\
\
s.sendMsg(\cf3 "/s_new"\cf0 , \cf3 "moto-rev"\cf0 , 1001, 1, 0);\
s.sendMsg(\cf3 "/n_free"\cf0 , 1001);\
\
(\
	\cf2 var\cf0  w, b1, b2, b3, name, a, s;\
	name = \cf3 "moto-rev"\cf0 ;\
	s = \cf2 Server\cf0 .local;\
	w = \cf2 SCWindow\cf0 (name.asString, \cf2 Rect\cf0 (128, 64, 260, 80));\
	w.view.decorator = \cf2 FlowLayout\cf0 (w.view.bounds);\
	\
	b1 = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (0,0, 80, 24));\
	b1.states = [[\cf3 "Load"\cf0 , \cf2 Color\cf0 .black, \cf2 Color\cf0 .green]];\
	b1.action = \{ \cf2 arg\cf0  view; \
		s.sendMsg(\cf3 "/d_load"\cf0 , \cf3 "engine/synthdefs/"\cf0 ++name++\cf3 ".scsyndef"\cf0 );\
	\};\
	b1.enabled = s.serverRunning;\
	\
	b2 = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (0,0, 80, 24));\
	b2.states = [\
		[\cf3 "Play"\cf0 , \cf2 Color\cf0 .black, \cf2 Color\cf0 .green],\
		[\cf3 "Stop"\cf0 , \cf2 Color\cf0 .white, \cf2 Color\cf0 .red],\
	];\
	b2.action = \{ \cf2 arg\cf0  view; \
		if (b2.value == 1, \{\
			s.sendMsg(\cf3 "/s_new"\cf0 , name, 1001, 1, 0);\
		\},\{\
			s.sendMsg(\cf3 "/n_free"\cf0 , 1001);\
		\});\
	\};\
	b2.enabled = s.serverRunning;\
\
	a = \cf2 SimpleController\cf0 (s);\
	f = \{ \cf2 arg\cf0  server; \
		b1.enabled = server.serverRunning;\
		b2.enabled = server.serverRunning;\
	\};\
	a.put(\cf4 \\serverRunning\cf0 , f);\
	w.onClose = \{ \
		a.remove;\
	\};\
	w.front;\
\
)\
}