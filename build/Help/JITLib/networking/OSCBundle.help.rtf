{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 OSCBundle	
\f1\b0\fs18 		
\f0\b\fs24 network
\f1\b0\fs18  
\f0\b\fs24 bundle object
\f2\b0 \
\
\
superclass: Object\
\
\
\

\f0\b *add(msg)
\f2\b0 			add a message to the bundle\
\

\f0\b *addAll(array)	
\f2\b0 		add an array of messages to the bundle\
\

\f0\b *addPrepare(msg)
\f2\b0 		add a preparation message, which is sent\
					before the bundle is sent.\
\
\
\

\f0\b send(server, latency)
\f2\b0 	send the bundle to a server.  If preparation messages are given,\
					they are sent, the process waits for their reception abd then sends the\
					bundle.\
\

\f0\b schedSend(server, clock)
\f2\b0  like send, but the sending is synced to a given clock (TempoClock) to the next beat.\
\
\
\

\f1\fs18 \cf2 // example\cf3 \
\
	a = \cf4 OSCBundle\cf3 .new;\
	x = \cf4 SynthDef\cf3 (\cf5 "test"\cf3 , \{\'ca\cf4 OffsetOut\cf3 .ar(0, BPF.ar(\cf4 Impulse\cf3 .ar(4) * 10, Rand(4000, 1000), 0.1)) \});\
	a.addPrepare(\cf5 "/d_recv"\cf3 , x.asBytes);\
	a.add([\cf5 "/s_new"\cf3 , \cf5 "test"\cf3 , -1]);\
	\
	a.send(s);\
\
	s.freeAll;	\cf0 \
\
	a.schedSend(s, TempoClock.new);\
	a.schedSend(s, TempoClock.new);		\
	a.schedSend(s, TempoClock.new);\
	\
	s.freeAll;\
		\
	}