{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Tdef	
\f1\b0\fs18 			 
\f0\b\fs24 task reference definition
\f1\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 superclass: StreamPlayerReference\
\
\
keeps a reference to a task that can be replaced while playing, just like EventStreamPlayer.\
It plays on when the old stream ended and a new stream is set and schedules the changes to the beat.\
\
Tdef(key) returns the instance, Tdef(key, pat) stores the pattern and returns the instance, like Pdef and Ndef.\
\
\
\
	
\f0\b *new(key, func,  clock)
\f2\b0 \
			store the function in a global dictionary under key.\
			if there is already a Tdef there, replace its Routine\
			with the new one created from the function.\
	\
	
\f0\b *remove(key)
\f2\b0 \
			remove a task from the global dictionary\
	\
	
\f0\b *removeAll
\f2\b0 \
			remove all tasks\
			\
	
\f0\b *all
\f2\b0 \
			dict that stores all Tdefs\
			\
	
\f0\b quant_(beats)
\f2\b0 \
			set the quantisation time for beat accurate scheduling \
			\
	
\f0\b isPlaying
\f2\b0  \
			returns if the stream is playing. on cmd-period all streams are stopped.\
			if a Pdef is playing and its stream ends, it will schedule the stream for playing \
			as soon as a new one is assigned to it.\
	
\f1\fs18 \
	
\f0\b\fs24 pause / unpause / reset\
			
\f2\b0 perform player method 
\f1\fs18 \
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // examples\cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Tdef\cf0 (\cf4 \\x\cf0 ).play; \cf2 // create an empty Tdef and play it.\cf0 \
\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ loop(\{ \cf5 "ggggggggggggggggg9999ggg999ggg999gg"\cf0 .scramble.postln; 0.5.wait; \}) \});\
\
\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ loop(\{ \cf5 "---------////----------------------"\cf0 .scramble.postln; 0.25.wait; \}) \});\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ loop(\{ \cf3 thisThread\cf0 .seconds.postln; 1.wait; \}) \});\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ loop(\{ \cf3 thisThread\cf0 .seconds.postln; 1.01.wait; \}) \});\
\
\cf3 TempoClock\cf0 .default.tempo = 2;\
\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ \cf5 "the end"\cf0 .postln \});\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ \cf5 "one more"\cf0 .postln \});\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ loop(\{ \cf5 "some more"\cf0 .scramble.postln; 0.25.wait; \}) \});\
\
\cf3 TempoClock\cf0 .default.tempo = 1;\
\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 ).stop;\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 ).play;\
\
\cf3 Tdef\cf0 .remove(\cf4 \\x\cf0 );\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // sound example\cf0 \
\
(\
\cf2 // load a synthdef\cf0 \
s.boot;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf5 "pdef_grainlet"\cf0 , \
	\{ \cf3 arg\cf0  out=0, freq=440, dur=0.05;\
		\cf3 var\cf0  env;\
		env = \cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 .perc(0.01, dur, 0.3), doneAction:2);\
		\cf3 Out\cf0 .ar(out, \cf3 SinOsc\cf0 .ar(freq, 0, env))\
	\}).load(s);\
)\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 ).play;\
\
(\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ \
	loop(\{\
		s.sendMsg(\cf5 "/s_new"\cf0 , \cf5 "pdef_grainlet"\cf0 , -1,0,0, \cf4 \\freq\cf0 , rrand(600, 640));\
		0.1.wait;\
	\})\
\})\
)\
\
(\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ \
	\cf3 var\cf0  x;\
	x = \cf3 Pseries\cf0 (300, 20, 100).loop.asStream;\
	loop(\{\
		s.sendMsg(\cf5 "/s_new"\cf0 , \cf5 "pdef_grainlet"\cf0 , -1,0,0, \cf4 \\freq\cf0 , x.next);\
		0.05.wait;\
	\})\
\})\
)\
\
(\
\cf3 Tdef\cf0 (\cf4 \\x\cf0 , \{ \
	\cf3 var\cf0  x;\
	x = \cf3 Plazy\cf0 (\{ Pseries(300 + 300.rand, 10 + 30.rand, 10 + 30.rand) \}).loop.asStream;\
	loop(\{\
		s.sendMsg(\cf5 "/s_new"\cf0 , \cf5 "pdef_grainlet"\cf0 , -1,0,0, \cf4 \\freq\cf0 , x.next);\
		0.05.wait;\
	\})\
\})\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 // metronome\cf7 \
\cf8 Tdef\cf7 (\cf9 \\y\cf7 , \{ loop(\{ s.sendMsg(\cf10 "/s_new"\cf7 , \cf10 "pdef_grainlet"\cf7 , -1,0,0, \cf9 \\freq\cf7 , 1500); 1.wait; \}) \}).play;\
\
\cf6 // play ending stream once\cf7 \
(\
\cf8 Tdef\cf7 (\cf9 \\x\cf7 , \{ \
	\cf8 var\cf7  x, dt;\
	dt = [0.1, 0.125, 0.05].choose;\
	x = \cf8 Plazy\cf7 (\{ \cf8 Pseries\cf7 (1300 + 300.rand, 110 + 130.rand, 16) \}).asStream;\
	x.do(\{ \cf8 arg\cf7  item;\
		s.sendMsg(\cf10 "/s_new"\cf7 , \cf10 "pdef_grainlet"\cf7 , -1,0,0, \cf9 \\freq\cf7 , item);\
		dt.wait;\
	\})\
\})\
)\cf0 \
\
... and so on ...\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Tdef\cf0 (\cf4 \\x\cf0 ).stop;\
\cf3 Tdef\cf0 .remove(\cf4 \\x\cf0 );\
\cf3 Tdef\cf0 .remove(\cf4 \\y\cf0 );\
}