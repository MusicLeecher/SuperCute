{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Order
\f1\b0\fs24 		
\f0\b an order of elements with an integer index
\f1\b0 \
\
superclass: SequenceableCollection\
\

\f0\b keeps elements in an order.
\f1\b0  \
\
	put and at are slower than IdentityDictionary/PriorityQueue, do is faster.\
\
\
inherits all methods from superclass.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 the following messages change the content of the collection without returning a new one.\
apart from this they work like collect/reject/select\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \

\f0\b collectInPlace(func) \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 selectInPlace(func)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 rejectInPlace(func)\
\
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf3 //example\cf2 \
\
a = \cf4 Order\cf2 .new;\
\
a[0] = \cf5 \\z\cf2 ;\
a[0] = \cf5 \\y\cf2 ;\
a[5] = \cf5 \\five\cf2 ;\
a[4] = \cf5 \\four\cf2 ;\
\
a.collectInPlace(\{ \cf4 arg\cf2  item, i; 700 + i \});\
a[0] = \cf5 \\z\cf2 ;\
a[5] = \cf5 \\five\cf2 ;\
a[4] = \cf5 \\four\cf2 ;\
\
a.indices;\
a.selectInPlace(\{ \cf4 arg\cf2  item; item.asString[0] === $f \});\
a.indices;\
\
a[9] = 100;\
a.rejectInPlace(\{ \cf4 arg\cf2  item; item.isNumber.not \});\
a.indices;\
\
\
}