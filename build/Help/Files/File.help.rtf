{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fmodern\fcharset77 Courier;
\f3\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green0\blue191;\red96\green96\blue96;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 File
\f1\b0\fs24 \
\

\f0\b Superclass: 
\f1\b0 UnixFILE
\f0\b \

\f1\b0 \
A class for reading and writing files.  Not sound files.\
\
see also the superclass for further docs.\
\

\f0\b 	*new(pathname, mode)\
	
\f1\b0 \
		Create a File instance and open the file. If the open fails, isOpen will return false.\
	\
	
\f0\b pathname\
	
\f1\b0 \
		a String containing the path name of the file to open.\
	\
	
\f0\b mode
\f1\b0 \
		a String indicating one of the following modes:\
	\
	
\f2 	"r" - read only text\
		"w" - read and write text\
		"a" - read and append text\
		"rb" - read only binary\
		"wb" - read and write binary\
		"ab" - read and append binary\
		\
		"r+" - read only text\
		"w+" - read and write text\
		"a+" - read and append text\
		"rb+" - read only binary\
		"wb+" - read and write binary\
		"ab+" - read and append binary\
	
\f1 \
	
\f0\b open
\f1\b0 \
	\
		Open the file. Files are automatically opened upon creation, so this call is only necessary \
		if you are closing and opening the same file object repeatedly.\
	\
		NOTE:  it is possible when saving files with a standard file dialog to elect to "hide the extension" \
		and save it as RTF.  When opening the file you must specify the real filename:  "filename.rtf", \
		even though you can't see in file load dialogs or in the Finder.\
	\
	
\f0\b \
	close
\f1\b0 \
		Close the file.\
\
\

\f0\b 	*exists(pathName)\
	
\f1\b0 	answers if a file exists at that path.\
	\
	 \
	
\f0\b *delete(pathName)
\f1\b0 \
		deletes the file at that path.\
		use only for good, never for evil.\
	\
	 \
	
\f0\b *openDialog(prompt,sucessFunc,cancelFunc)\
	
\f1\b0 \
		\
	
\f0\b *saveDialog("hello",\{\},\{\})\
	
\f1\b0 	not yet implemented\
	\
	\
	
\f0\b *getcwd\
	
\f1\b0 	POSIX standard 'get current working directory'.\
	
\f3\fs18 \
	\cf2 	\cf3 // example;\cf2 \
		\cf4 File\cf2 .getcwd\cf0 \
	\
	
\f0\b\fs24 *use(function)
\f1\b0 \
		open the file, evaluate the function with the file and close it.\
	
\f3\fs18 	\
	
\f1\fs24 \
\

\f0\b Examples:
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf3 // write some string to a file:\cf2 \
(\
\cf4 var\cf2  f, g;\
f = \cf4 File\cf2 (\cf5 "test"\cf2 ,\cf5 "w"\cf2 );\
f.write(\cf5 "Does this work?\\n is this thing on ?\\n"\cf2 );\
f.close;\
)\
\
\cf3 // read it again:\cf2 \
(\
g = \cf4 File\cf2 (\cf5 "test"\cf2 ,\cf5 "r"\cf2 );\
g.readAllString.postln;\
g.close;\
)\
\
\cf3 // try the above with File.use:\cf2 \
\
\cf4 File\cf2 .use(\cf5 "test"\cf2 , \cf5 "w"\cf2 , \{ \cf4 |f|\cf2  f.write(\cf5 "Doesn't this work?\\n is this thing really on ?\\n"\cf2 ); \})\
\cf4 File\cf2 .use(\cf5 "test"\cf2 , \cf5 "r"\cf2 , \{ \cf4 |f|\cf2  f.readAllString.postln \})\
\
\
\cf3 // more file writing/reading examples:\cf2 \
(\
\cf4 var\cf2  h, k;\
h = \cf4 File\cf2 (\cf5 "test2"\cf2 , \cf5 "wb"\cf2 );\
h.inspect;\
h.write( \cf4 FloatArray\cf2 [1.1, 2.2, 3.3, pi, 3.sqrt] );\
h.close;\
\
k = \cf4 File\cf2 (\cf5 "test2"\cf2 , \cf5 "rb"\cf2 );\
(k.length div: 4).do(\{ k.getFloat.postln; \});\
k.close;\
)\
\cf0 \
\
(\
\cf6 var\cf0  f, g;\
f = \cf6 File\cf0 (\cf7 "test3"\cf0 ,\cf7 "w"\cf0 );\
100.do(\{ f.putChar([$a, $b, $c, $d, $e, $\\n].choose); \});\
f.close;\
\
g = \cf6 File\cf0 (\cf7 "test3"\cf0 ,\cf7 "r"\cf0 );\
g.readAllString.postln;\
g.close;\
\
g = File("test3","r");\
g.getLine(1024).postln;\
"*".postln;\
g.getLine(1024).postln;\
"**".postln;\
g.getLine(1024).postln;\
"***".postln;\
g.getLine(1024).postln;\
"****".postln;\
g.close;\
\
)\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf8 //var f, g;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 f = \cf6 File\cf0 (\cf7 "test3"\cf0 ,\cf7 "wb"\cf0 );\
f.inspect;\
100.do(\{ f.putFloat(1.0.rand); \});\
\
f.inspect;\
f.close;\
\
g = \cf6 File\cf0 (\cf7 "test3"\cf0 ,\cf7 "rb"\cf0 );\
100.do(\{\
	g.getFloat.postln;\
\});\
g.inspect;\
g.close;\
\
)\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf8 //var f, g;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 f = \cf6 File\cf0 (\cf7 "test3"\cf0 ,\cf7 "r"\cf0 );\
f.inspect;\
\
f.getLine(1024).postln;\
\
f.close;\
\
\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 \
\
}