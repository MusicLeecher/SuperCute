{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green0\blue0;
\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Pfsm\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 superclass: ListPatterns\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
finite state machine: every state links to possible 
\f0\b next states (indices)
\f1\b0 .\
starting from one of the 
\f0\b entry states 
\f1\b0 one of these links is randomly\
chosen used to get the next state. When an end state is reached, the stream ends.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Pfsm(list,repeats)
\f1\b0 \
\

\f0\b list
\f1\b0 :\
	[\
		 [ entry states ],\
	 	item, [ next states ],\
	 	item, [ next states ],\
		 ...\
	 	end item or nil \
	 ]\
 \
 \
 next states: nil  is terminal\
 \
 \
 
\f2\fs18 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf3 "help-sinegrain"\cf0 , \
	\{ \cf2 arg\cf0  out=0, freq=440, dur=0.05;\
		\cf2 var\cf0  env;\
		env = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.01, dur, 0.2), doneAction:2);\
		\cf2 Out\cf0 .ar(out, \cf2 SinOsc\cf0 .ar(freq, 0, env))\
	\}).load(s);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 \
(\
a = \cf5 Pfsm\cf4 ([\
		#[0,1],\
		67, #[0, 0, 3],\
		72, #[2],\
		73, #[0, 2],\
		\cf5 Pseq\cf4 ([74, 75, 76, 77]), #[2, 3, 3],\
		\cf5 nil\cf4 \
		], \cf5 inf\cf4 ).asStream;\
\cf5 Routine\cf4 (\{\
	loop(\{\
	\cf5 Synth\cf4 (\cf6 "help-sinegrain"\cf4 , [\cf7 \\freq\cf4 , a.next.midicps]);\
	0.1.wait;\
	\})\
\}).play;\
)\
\cf0 \
}