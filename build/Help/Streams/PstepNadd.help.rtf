{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PstepNadd	
\f1\b0\fs18 		
\f0\b\fs24  pattern that returns combinatoric sums
\f2\b0 \
\
superclass: PstepNfunc\
\
\
combines an arbitrary number of patterns by summing (depth first traversal) until the longest\
stream has ended. Meanwhile the other streams are recreated from the patterns.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 see also: Pstep3add\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
\
	
\f0\b\fs24 *new(pattern1, pattern2, ... patternN);\
	\
	\

\f1\b0\fs18 \cf2 //examples\cf3 \
\
\
\cf2 // comparing PstepNadd and Pstep3add (test)\cf3 \
(\
x = \cf4 PstepNadd\cf3 (\cf4 Pseq\cf3 ([1, 2, 3]), \cf4 Pseq\cf3 ([10, 20, 30, 40]), \cf4 Pseq\cf3 ([100, 200, 300])).asStream;\
y = \cf4 Pstep3add\cf3 (\cf4 Pseq\cf3 ([1, 2, 3]), \cf4 Pseq\cf3 ([10, 20, 30, 40]), \cf4 Pseq\cf3 ([100, 200, 300])).asStream;\
\
50.do(\{ [x.next, y.next].postln \});\
)\
\
\cf2 // pattern return stream until the longest stream ended \cf3 \
(\
x = \cf4 PstepNadd\cf3 (\
		\cf4 Plazy\cf3 (\{ \cf5 "pattern1.asStream"\cf3 .postln; \cf4 Pseq\cf3 ([1, 2, 3], 2) \}), \
		\cf4 Plazy\cf3 (\{ \cf5 "pattern2.asStream"\cf3 .postln; \cf4 Pshuf\cf3 ([10, 20, 30, 40]) \}), \
		\cf4 Plazy\cf3 (\{ \cf5 "pattern3.asStream"\cf3 .postln; \cf4 Pseq\cf3 ([100, 200, 300]) \}),\
		\cf4 Plazy\cf3 (\{  \cf4 Prand\cf3 ([0.03, 0.08]) \})\
	).asStream;\
50.do(\{ x.next.postln \});\
)\
\
\cf2 // note that if the last pattern loops it will stick to that one:\cf3 \
x = \cf4 PstepNadd\cf3 (\cf4 Pseq\cf3 ([1, 2, 3]), \cf4 Pseq\cf3 ([10, 20, 30, 40]), \cf4 Pseq\cf3 ([100, 200, 300], \cf4 inf\cf3 )).asStream;\
50.do(\{ x.next.postln \});\
\
\
\cf2 // sound example\cf3 \
(\
\cf4 Pbind\cf3 (\
	\cf6 \\octave\cf3 , 4,\
	\cf6 \\degree\cf3 , \cf4 PstepNadd\cf3 (\
				\cf4 Pseq\cf3 ([1, 2, 3]), \
				\cf4 Pseq\cf3 ([0, -2, [1, 3], -5]), \
				\cf4 Pshuf\cf3 ([1, 0, 3, 0], 2), \
				\cf4 Pseq\cf3 ([1, -1], 5)\
			),\
	\cf6 \\dur\cf3 , \cf4 PstepNadd\cf3 (\
				\cf4 Pseq\cf3 ([1, 0, 0, 1], 2),\
				\cf4 Pshuf\cf3 ([1, 1, 2, 1], 2)\
		).loop * (1/8),\
	\cf6 \\legato\cf3 , \cf4 Pn\cf3 (\cf4 Pshuf\cf3 ([0.2, 0.2, 0.2, 0.5, 0.5, 1.6, 1.4], 4), \cf4 inf\cf3 ),\
	\cf6 \\scale\cf3 , #[0, 1, 3, 4, 5, 7, 8]\
).play;\
)\
\
\
\
\
\
\
}