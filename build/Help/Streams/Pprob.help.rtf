{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Pprob				
\fs26 random values with arbitrary probability distribution
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 superclass: Patterns\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
creates an integral table on instantiation (cpu intensive) which is then used by the streams\
to generate random values efficiently. The probability distribution is a list of values,\
which is resampled internally if it is smaller than 64 and not given explicitly.\
This method uses a linear interpolation indexing, so that there is a certain variation.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Pprob(distribution, lo, hi, length, tableSize)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // a consistency test\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a = \cf3 Pprob\cf0 ([0,0,0,0,1,1,1,1,3,3,6,6,9].scramble);\
\cf3 var\cf0  b = a.asStream;\
b.nextN(800).sort.plot(\cf4 "sorted distribution"\cf0 );\
b.nextN(800).sort.plot(\cf4 "sorted distribution, again"\cf0 );\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // comparison: emulate a linrand\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a, b;\
a = \cf3 Pprob\cf0 ([1, 0]);\
x = \cf3 Pfunc\cf0 (\{ 1.0.linrand \});\
\
b = a.asStream;\
y = x.asStream;\
\
b.nextN(800).mean.postln;\
y.nextN(800).mean.postln;\
\
b.nextN(800).sort.plot(\cf4 "this is Pprob"\cf0 );\
y.nextN(800).sort.plot(\cf4 "this is linrand"\cf0 );\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // compare efficiency\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 bench \{ \cf6 Pprob\cf5 ([0, 1]) \} \cf7 // this is fairly expensive\cf5 \
bench \{ 600.do \{ \cf6 Pseq\cf5 ([0, 1]) \} \}\cf0 \
\
x = \cf3 Pprob\cf0 ([0, 1]).asStream;\
y = \cf3 Pseq\cf0 ([0, 1], inf).asStream;\
\
\cf5 bench \{ 100.do \{\'cax.next \} \}; \cf7 // this very efficient\cf5 \
bench \{ 100.do \{\'cay.next \} \};\cf0 \
}