{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 FileReader\

\fs24 \
reads space-delimited text files into 2D arrays line by line.\
\
Use TabFileReader for tab delimited files, \
and CSVFileReader for comma-separated files.\
\
*read(path, skipEmptyLines, skipBlanks, func, delimiter)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // write a test file:\cf0 \
f = \cf3 File\cf0 (\cf4 "FileReaderTest.sc"\cf0 , \cf4 "w"\cf0 );\
f.write(\
\cf4 "Some space delimited items in line 1\
\
and then some more with several blanks     in line 3\
"\cf0 \
);\
f.close; \
)\
	\cf2 // open file, read and put strings into array, close file. \cf0 \
x = \cf3 FileReader\cf0 .read(\cf4 "FileReaderTest.sc"\cf0 ).postcs;\
\
	\cf2 // can skip empty lines: \cf0 \
x = \cf3 FileReader\cf0 .read(\cf4 "FileReaderTest.sc"\cf0 , \cf3 true\cf0 ).postcs;\
\
	\cf2 // can skip blank entries caused by multiple spaces : \cf0 \
x = \cf3 FileReader\cf0 .read(\cf4 "FileReaderTest.sc"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ).postcs;\
	\
	\cf2 // do file open/close by hand if you prefer:\cf0 \
f = \cf3 File\cf0 (\cf4 "FileReaderTest.sc"\cf0 , \cf4 "r"\cf0 ); f.isOpen;\
t = \cf3 FileReader\cf0 (f, \cf3 true\cf0 , \cf3 true\cf0 );	\
t.read;\
f.close;\
\
	// take letter "a" as delimiter: \
x = \cf3 FileReader\cf0 .read(\cf4 "FileReaderTest.sc"\cf0 , \cf3 true\cf0 , \cf3 true, delimiter: $a\cf0 ).postcs;\
\
(\
\cf2 // write a test file with numbers:\cf0 \
f = \cf3 File\cf0 (\cf4 "FileReadTestNum.sc"\cf0 , \cf4 "w"\cf0 );\
\
(1..10).do \{ \cf3 |n|\cf0  f.write(n.asString ++ \cf4 " "\cf0 ); \};\
f.close; \
)\
\
x = \cf3 FileReader\cf0 .read(\cf4 "FileReadTestNum.sc"\cf0 ).postcs;\
x.collect(\cf3 _\cf0 .collect(\cf3 _\cf0 .interpret));	\cf2 // convert to numbers.\cf0 \
\
			\cf2 // or do it immediately:\cf0 \
x = \cf3 FileReader\cf0 .readInterpret(\cf4 "FileReadTestNum.sc"\cf0 ).postcs;\
\
(\
\cf2 // write a test file with several lines of numbers:\cf0 \
f = \cf3 File\cf0 (\cf4 "FileReadTestNum.sc"\cf0 , \cf4 "w"\cf0 );\
\
(1..100).do \{ \cf3 |n|\cf0  \
	f.write(n.asString ++ if (n % 10 != 0, \cf4 " "\cf0 , \cf3 Char\cf0 .nl)); \};\
f.close; \
)\
\
\
x = \cf3 FileReader\cf0 .readInterpret(\cf4 "FileReadTestNum.sc"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ).postln;\
\
}