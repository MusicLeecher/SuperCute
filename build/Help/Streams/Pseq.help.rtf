{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Pseq
\f1\b0\fs24  \
\
\
is a Pattern that cycles over a list of values. The repeats variable gives\
the number of times to repeat the entire list. \
\

\f2 (\
\cf2 var\cf0  a, b;\
a = \cf2 Pseq\cf0 .new(#[1, 2, 3], 2);	\cf3 // repeat twice\
\cf0 b = a.asStream;\
7.do(\{ b.next.postln; \});\
)\

\f1 \
Pseq also has an offset argument which gives a starting offset into the list.\
\

\f2 (\
\cf2 var\cf0  a, b;\
a = \cf2 Pseq\cf0 .new(#[1, 2, 3, 4], 3, 2); \cf3 // repeat 3, offset 2\
\cf0 b = a.asStream;\
13.do(\{ b.next.postln; \});\
)\
\

\f1 You can pass a function for the repeats variable that gets evaluated when the stream is created.\
\

\f2 (\
\cf2 var\cf0  a, b;\
a = \cf2 Pseq\cf0 .new(#[1, 2], \{ rrand(1, 3) \});	\cf3 // repeat 1,2, or 3 times\
\cf0 b = a.asStream;\
7.do(\{ b.next.postln; \});\
)\
\

\f1 If you specify the value 
\f0\b inf
\f1\b0  for the repeats variable, then it will repeat indefinitely.\
\

\f2 (\
\cf2 var\cf0  a, b;\
a = \cf2 Pseq\cf0 .new(#[1, 2, 3], \cf2 inf\cf0 );	\cf3 // infinite repeat\
\cf0 b = a.asStream;\
10.do(\{ b.next.postln; \});\
)\
\

\f1 Pseq used as a sequence of pitches:\

\f2 \

\fs18 \cf4 //(\
//var a;\
//a = Pseq(#[60, 61, 63, 65, 67, 63], inf);\
//\{\
//	SinOsc.ar(Sequencer.kr( a.asStream, Impulse.kr(6)).midicps, 0, 0.1);\
//\}.play;\
//)}