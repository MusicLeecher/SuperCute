{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs36 \cf0 Pbrown
\f1\b0\fs24 		
\f0\b  brownian motion pattern
\f1\b0 \
\
superclass: Pattern\
\
\

\f0\b Pbrown(lo, hi, step, length)
\f1\b0 \
		\
		
\f0\b lo, hi	
\f1\b0 		lower and upper boundary of values\
		
\f0\b step
\f1\b0 			maximum change per step (distribution is exprand2)\
		
\f0\b length
\f1\b0 		number of values produced\
		\

\f2\fs18 		\
\
\cf2 // example\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a;\
a = \cf3 Pbrown\cf0 (0.0, 1.0, 0.2, \cf3 inf\cf0 );\
a.asStream.nextN(1000).plot;\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // sound example\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "help-sinegrain"\cf0 , \
	\{ \cf3 arg\cf0  out=0, freq=440, sustain=0.05;\
		\cf3 var\cf0  env;\
		env = \cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 .perc(0.01, sustain, 0.2), doneAction:2);\
		\cf3 Out\cf0 .ar(out, \cf3 SinOsc\cf0 .ar(freq, 0, env))\
	\}).send(s);\
)\
\
\
(\
\cf3 var\cf0  a;\
a = \cf3 Pbrown\cf0 (0.0, 1.0, 0.1, \cf3 inf\cf0 ).asStream;\
\{\
	loop \{\
		\cf3 Synth\cf0 (\cf4 "help-sinegrain"\cf0 , [\cf5 \\freq\cf0 , a.next * 600 + 300]);\
		0.02.wait;\
	\}\
\}.fork;\
)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 // parallel browninan motions\cf7 \
(\
\cf8 var\cf7  a, x, f;\
a = \cf8 Pbrown\cf7 (0.0, 1.0, 0.1, \cf8 inf\cf7 );\
\
f = \{ \cf8 |pattern, dt=0.02, min=300, max=900|\cf7 \
	\{\
		\cf8 var\cf7  x = pattern.asStream;\
		loop \{\
			\cf8 Synth\cf7 .grain(\cf9 "help-sinegrain"\cf7 , [\cf10 \\freq\cf7 , x.next.linexp(0, 1, min, max), \cf10 \\sustain\cf7 , dt]);\
			dt.wait;\
		\}\
	\}.fork;\
\}.flop;\
\
\cf6 // 3 parallel motions\cf7 \
f.(a, [0.02, 0.08, 0.16]);\
)\cf0 \
\
\
\
\
}