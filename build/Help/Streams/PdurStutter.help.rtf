{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PdurStutter
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 PdurStutter(stutterPattern,floatPattern)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
a filter pattern designed for a stream of float durations.\
subdivides each duration by each stutter and yields that value stutter times.\
a stutter of 0 will skip the duration value, a stutter of 1 yields the duration value\
unaffected.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 (\
a = \cf2 PdurStutter\cf0 (\
	Pseq(#[1,1,1,1,1,2,2,2,2,2,0,1,3,4,0],inf),\
	Pseq(#[0.5, 1, 2, 0.25,0.25],inf)\
);\
x = a.asStream;\
100.do(\{ x.next.postln; \});\
)\
\
\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf3 "help-sinegrain"\cf0 , \
	\{ \cf2 arg\cf0  out=0, freq=440, sustain=0.05;\
		\cf2 var\cf0  env;\
		env = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.01, sustain, 0.2), doneAction:2);\
		\cf2 Out\cf0 .ar(out, \cf2 SinOsc\cf0 .ar(freq, 0, env))\
	\}).send(s);\
)\
(\
\
a = \cf2 PdurStutter\cf0 (\
	Pseq(#[1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4],inf),\
	Pseq(#[0.5, 1, 2, 0.25,0.25],inf)\
);\
x = a.asStream;\
\cf2 Routine\cf0 (\{\
	loop(\{\
			\cf2 Synth.grain\cf0 (\cf3 "help-sinegrain"\cf0 , [\cf4 \\freq\cf0 , 440]);\
			x.next.wait;\
	\})\
\}).play(TempoClock.default);\
)\
\
\
(\
\
a = \cf2 PdurStutter\cf0 (\
	Pseq(#[1,1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,0,4,4],inf),\
	Pseq(#[0.5, 1, 2, 0.25,0.25],inf)\
);\
x = a.asStream;\
\cf2 Routine\cf0 (\{\
	loop(\{\
			\cf2 Synth.grain\cf0 (\cf3 "help-sinegrain"\cf0 , [\cf4 \\freq\cf0 , 440]);\
			x.next.wait;\
	\})\
\}).play(TempoClock.default);\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 Frequencies like being divided too.
\f2\fs18 \
(\
a = \cf2 PdurStutter\cf0 (\
	Pseq(#[1,1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,0,4,4],inf),\
	Pseq((80 + [ 0, 2, 3, 5, 7, 9, 10 ]).midicps ,inf)\
);\
x = a.asStream;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 Routine\cf0 (\{\
	loop(\{\
			\cf2 Synth.grain\cf0 (\cf3 "help-sinegrain"\cf0 , [\cf4 \\freq\cf0 , x.next.postln]);\
			0.25.wait\
	\})\
\}).play(TempoClock.default);\
)\
\
\
\
\
-felix}