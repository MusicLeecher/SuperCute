{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Poll	   		
\fs24 print the current output value of a UGen
\fs36 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 Poll.ar(trig, in, label, trigid)\
Poll.kr(trig, in, label, trigid)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs28 \cf0 Usage
\fs24 \
\
	trig		
\f1\b0 a non-positive to positive transition telling Poll to return a value
\f0\b \
	in		
\f1\b0 the signal you want to poll
\f0\b \
	label		
\f1\b0 a string or symbol to be printed with the polled value
\f0\b \
	trigid	
\f1\b0 if greater then 0, a 
\f0\b '/tr' message
\f1\b0  is sent back to the client (similar to 
\f0\b SendTrig
\f1\b0 )
\f0\b \
\
\
Poll returns its in signal (and is therefore transparent). \
\
WARNING: Printing values from the Server in intensive for the CPU. Poll should be used for debugging purposes.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf2 \
\cf3 // examples:\cf2 \
\
s.boot;\
\
\{ \cf4 Poll\cf2 .kr(\cf4 Impulse\cf2 .kr(10), \cf4 Line\cf2 .kr(0, 1, 1), \cf5 \\test\cf2 ) \}.play(s);\
\
\cf3 // multichannel expansion:\cf2 \
\
\{ \cf4 Poll\cf2 .kr(\cf4 Impulse\cf2 .kr([10, 5]), \cf4 Line\cf2 .kr(0, [1, 5], [1, 2]), [\cf5 \\test\cf2 , \cf5 \\test2\cf2 ]) \}.play(s);\
\
\
\
\cf3 // using the poll message:\cf2 \
\
\{ \cf4 SinOsc\cf2 .ar(375, 0, 1).poll(\cf4 Impulse\cf2 .ar(20), \cf5 \\test2\cf2 ) \}.play(s);\
\
\cf3 // if no arguments are given, the poll is done every 0.1 sec.\cf2 \
\{  \cf4 Line\cf2 .kr(0, 1, 1).poll \}.play(s);\
\
\
\cf3 // send a '/tr' message back to the client\cf2 \
\
o = \cf4 OSCresponderNode\cf2 (s.addr, \cf5 '/tr'\cf2 , \{\cf4 arg\cf2  time, resp, msg;\
	msg.postln;\
	\}).add\
\
\{\cf4 Poll\cf2 .ar(\cf4 Impulse\cf2 .ar(5), \cf4 Line\cf2 .ar(0, 1, 1), \cf5 \\test2\cf2 , 1234)\}.play(s);\
\{\cf4 SinOsc\cf2 .ar(220, 0, 1).poll(\cf4 Impulse\cf2 .ar(15), \cf6 "test"\cf2 , 1234)\}.play(s);\
	\
o.remove;\
s.quit;}