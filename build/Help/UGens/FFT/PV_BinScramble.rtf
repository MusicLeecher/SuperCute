{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red191\green0\blue0;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PV_BinScramble				scramble bins\

\f1\b0\fs24 \

\f0\b PV_BinScramble.ar(buffer,  wipe,  width,  trig)\

\f1\b0 \
Randomizes the order of the bins.\
The trigger will select a new random ordering.\

\f0\b buffer
\f1\b0  - fft buffer.\

\f0\b wipe
\f1\b0  - scrambles more bins as wipe moves from zero to one.\

\f0\b width
\f1\b0  - a value from zero to one, indicating the maximum randomized distance of a bin from its\
original location in the spectrum.\

\f0\b trig
\f1\b0  - a trigger selects a new random ordering.\
\
See also 
\f0\b [\ul FFT Overview\ulnone ]
\f1\b0 .\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 s.boot;\
(\
b = \cf2 Buffer\cf0 .alloc(s,2048,1);\
c = \cf2 Buffer\cf0 .read(s,\cf3 "sounds/a11wlk01.wav"\cf0 );\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\cf4 //trig with MouseY\cf0 \
\cf2 SynthDef\cf0 (\cf3 "help-binScramble"\cf0 , \{ \cf2 arg\cf0  out=0, bufnum=0, soundBufnum=2;\
	\cf2 var\cf0  in, chain;\
	in = \cf2 PlayBuf\cf0 .ar(1, soundBufnum, \cf2 BufRateScale\cf0 .kr(soundBufnum), loop: 1);\
	chain = \cf2 FFT\cf0 (bufnum, in);\
	chain = \cf2 PV_BinScramble\cf0 (chain, \cf2 MouseX\cf0 .kr , 0.1, \cf2 MouseY\cf0 .kr > 0.5 ); \
	\cf2 Out\cf0 .ar(out, 0.5 * \cf2 IFFT\cf0 (chain).dup);\
\}).play(s,[\cf5 \\out\cf0 , 0, \cf5 \\bufnum\cf0 , b.bufnum, \cf5 \\soundBufnum\cf0 , c.bufnum]);\
)}