{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PV_Mul	 		
\fs28 complex multiply
\fs36 \

\f1\b0\fs24 \

\f0\b PV_Mul.ar(bufferA,  bufferB)\

\f1\b0 \
Complex Multiplication: (RealA * RealB) - (ImagA * ImagB), (ImagA * RealB) + (RealA * ImagB)\

\f0\b bufferA
\f1\b0  - fft buffer A.\

\f0\b bufferB
\f1\b0  - fft buffer B.\
\

\f2\fs18 s = Server.internal.boot;\
(\
b = \cf2 Buffer\cf0 .alloc(s,2048,1);\
c = \cf2 Buffer\cf0 .alloc(s,2048,1);\
)\
\
\cf3 (\
\cf4 SynthDef\cf3 (\cf5 "help-mul"\cf3 , \{ \cf4 arg\cf3  out=0, bufnumA=0, bufnumB=1;\
	\cf4 var\cf3  inA, chainA, inB, chainB, chain ;\
	inA = \cf4 SinOsc\cf3 .ar(500, 0, 0.5);\
	inB =  \cf4 SinOsc\cf3 .ar(\cf4 Line\cf3 .kr(100, 400, 5), 0, 0.5);\
	chainA = \cf4 FFT\cf3 (bufnumA, inA);\
	chainB = \cf4 FFT\cf3 (bufnumB, inB);\
	chain = \cf4 PV_Mul\cf3 (chainA, chainB); \
	\cf4 Out\cf3 .ar(out,  0.5 * \cf4 IFFT\cf3 (chain).dup);\
\}).play(s,[\cf6 \\out\cf3 , 0, \cf6 \\bufnumA\cf3 , b.bufnum, \cf6 \\bufnumB\cf3 , c.bufnum]);\
s.scope;\
)\
\
(\
\cf4 SynthDef\cf3 (\cf5 "help-mul2"\cf3 , \{ \cf4 arg\cf3  out=0, bufnumA=0, bufnumB=1;\
	\cf4 var\cf3  inA, chainA, inB, chainB, chain ;\
	inA = \cf4 SinOsc\cf3 .ar(500, 0, 0.5) * \cf4 Line\cf3 .kr;\
	inB = \cf4 LFNoise1\cf3 .ar(20);\
	chainA = \cf4 FFT\cf3 (bufnumA, inA);\
	chainB = \cf4 FFT\cf3 (bufnumB, inB);\
	chain = \cf4 PV_Mul\cf3 (chainA, chainB); \
	\cf4 Out\cf3 .ar(out,  0.5 * \cf4 IFFT\cf3 (chain).dup);\
\}).play(s,[\cf6 \\out\cf3 , 0, \cf6 \\bufnumA\cf3 , b.bufnum, \cf6 \\bufnumB\cf3 , c.bufnum]);\
s.scope;\
)\
}