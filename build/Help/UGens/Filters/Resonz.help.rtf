{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Oblique;
\f3\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 \
Resonz			resonant filter
\f1\b0\fs24 \
\

\f0\b Resonz.ar(in, freq, rq, mul, add)\

\f1\b0 \
A two pole resonant filter with zeroes at z = +/- 1. Based on K. Steiglitz,  "A Note on Constant-Gain \
Digital Resonators," 
\f2\i Computer Music Journal
\f1\i0 , vol 18, no. 4, pp. 8-10, Winter 1994.\

\f0\b in
\f1\b0  - input signal to be processed\

\f0\b freq
\f1\b0  - resonant frequency in Hertz\

\f0\b rq
\f1\b0  - bandwidth ratio (reciprocal of Q). rq = bandwidth / centerFreq\
The reciprocal of Q is used rather than Q because it saves a divide operation inside the unit generator.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf2 \{ \cf3 Resonz\cf2 .ar(\cf3 WhiteNoise\cf2 .ar(0.5), 2000, 0.1) \}.play\
\
\cf4 // modulate frequency\cf2 \
\{ \cf3 Resonz\cf2 .ar(\cf3 WhiteNoise\cf2 .ar(0.5), \cf3 XLine\cf2 .kr(1000,8000,10), 0.05) \}.play\
\
\cf4 // modulate bandwidth\cf2 \
\{ \cf3 Resonz\cf2 .ar(\cf3 WhiteNoise\cf2 .ar(0.5), 2000, \cf3 XLine\cf2 .kr(1, 0.001, 8)) \}.play\
\
\cf4 // modulate bandwidth opposite direction\cf2 \
\{ \cf3 Resonz\cf2 .ar(\cf3 WhiteNoise\cf2 .ar(0.5), 2000, \cf3 XLine\cf2 .kr(0.001, 1, 8)) \}.play\
\
}