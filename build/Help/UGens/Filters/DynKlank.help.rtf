{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red191\green0\blue0;
\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;\red96\green96\blue96;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 DynKlank			bank of resonators\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 \
DynKlank.ar(specificationsArrayRef, input, freqscale, freqoffset, decayscale)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
DynKlank is a bank of frequency resonators which can be used to simulate the resonant modes of an object. Each mode is given a ring time, which is the time for the mode to decay by 60 dB.\
\
Unlike Klank, the frequencies in DynKlank can be changed after it has been started.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 specificationsArrayRef
\f1\b0  - a Ref to an Array of three Arrays :\
	
\f0\b frequencies
\f1\b0  - an Array of filter frequencies.\
	
\f0\b amplitudes
\f1\b0  - an Array of filter amplitudes, or nil. If nil, then amplitudes default to 1.0\
	
\f0\b ring
\f1\b0  
\f0\b times
\f1\b0  - an Array of 60 dB decay times for the filters.\
All subarrays, if not nil, should have the same length.\

\f0\b input
\f1\b0  - the excitation input to the resonant filter bank.\

\f0\b freqscale
\f1\b0  - a scale factor multiplied by all frequencies at initialization time.\

\f0\b freqoffset
\f1\b0  - an offset added to all frequencies at initialization time.\

\f0\b decayscale
\f1\b0  - a scale factor multiplied by all ring times at initialization time.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
s.boot;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \{ \cf2 DynKlank\cf0 .ar(`[[800, 1071, 1153, 1723], \cf2 nil\cf0 , [1, 1, 1, 1]], \cf2 Impulse\cf0 .ar(2, 0, 0.1)) \}.play;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\{ \cf2 DynKlank\cf0 .ar(`[[800, 1071, 1353, 1723], \cf2 nil\cf0 , [1, 1, 1, 1]], \cf2 Dust\cf0 .ar(8, 0.1)) \}.play;\
\
\{ \cf2 DynKlank\cf0 .ar(`[[800, 1071, 1353, 1723], \cf2 nil\cf0 , [1, 1, 1, 1]], \cf2 PinkNoise\cf0 .ar(0.007)) \}.play;\
\
\{ \cf2 DynKlank\cf0 .ar(`[[200, 671, 1153, 1723], \cf2 nil\cf0 , [1, 1, 1, 1]], \cf2 PinkNoise\cf0 .ar([0.007,0.007])) \}.play;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 (\
\cf4 // change freqs and ringtimes with mouse\cf3 \
\{	\cf5 var\cf3  freqs, ringtimes;\
	freqs = [800, 1071, 1153, 1723] * \cf5 MouseX\cf3 .kr(0.5, 2, 1);\
	ringtimes = [1, 1, 1, 1] * \cf5 MouseY\cf3 .kr(0.1, 10, 1);\
	\cf5 DynKlank\cf3 .ar(`[freqs, \cf5 nil\cf3 , ringtimes ], \cf5 Impulse\cf3 .ar(2, 0, 0.1))\
\}.play;\
)\cf0 \
\
\cf3 (\
\cf4 // set them from outside later:\cf3 \
\pard\pardeftab720\ql\qnatural
\cf5 SynthDef\cf3 (\cf6 "help-DynKlank"\cf3 , \{\
	\cf5 var\cf3  freqs, ringtimes, signal;\
	freqs = \cf5 Control\cf3 .names([\cf7 \\freqs\cf3 ]).kr([800, 1071, 1153, 1723]);\
	ringtimes = \cf5 Control\cf3 .names([\cf7 \\ringtimes\cf3 ]).kr([1, 1, 1, 1]);\
	signal = \cf5 DynKlank\cf3 .ar(`[freqs, \cf5 nil\cf3 , ringtimes ], \cf5 Impulse\cf3 .ar(2, 0, 0.1));\
	\cf5 Out\cf3 .ar(0, signal);\
\}).load(s);\
)\cf0 \
a = \cf2 Synth\cf0 (\cf8 "help-DynKlank"\cf0 );\
\
a.setn(\cf9 \\freqs\cf0 , \cf2 Array\cf0 .rand(4, 500, 2000));\
a.setn(\cf9 \\ringtimes\cf0 , \cf2 Array\cf0 .rand(4, 0.2, 4));\
\
}