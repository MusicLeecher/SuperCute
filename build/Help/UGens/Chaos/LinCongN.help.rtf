{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 LinCongN		linear congruential chaotic generator\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 LinCongN.ar(freq, a, c, m, xi, mul, add)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
	
\f0\b freq
\f1\b0  - iteration frequency in Hertz\
	
\f0\b a
\f1\b0  - multiplier amount\
	
\f0\b c
\f1\b0  - increment amount\
	
\f0\b m
\f1\b0  - modulus amount\
	
\f0\b xi
\f1\b0  - initial value of x\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 A non-interpolating sound generator based on the difference equation:\
	\
	x
\fs20 \sub n+1
\fs24 \nosupersub  = (ax
\fs20 \sub n
\fs24 \nosupersub  + c) % m
\f2\fs18 \
	\

\f1\fs24 The output signal is automatically scaled to a range of [-1, 1].
\f2\fs18 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // default initial params\cf0 \
\{ \cf3 LinCongN\cf0 .ar(\cf3 MouseX\cf0 .kr(20, \cf3 SampleRate\cf0 .ir)) * 0.2 \}.play(s);\
\
\cf2 // randomly modulate params\cf0 \
(\
\{ \cf3 LinCongN\cf0 .ar(\
	\cf3 LFNoise2\cf0 .kr(1, 1e4, 1e4), \
	\cf3 LFNoise2\cf0 .kr(0.1, 0.5, 1.4), \
	\cf3 LFNoise2\cf0 .kr(0.1, 0.1, 0.1),\
	\cf3 LFNoise2\cf0 .kr(0.1)\
) * 0.2 \}.play(s);\
)\
\
\cf2 // as frequency control...\cf0 \
(\
\{ \
\cf3 SinOsc\cf0 .ar(\
	\cf3 LinCongN\cf0 .ar(\
		40, \
		\cf3 LFNoise2\cf0 .kr(0.1, 0.1, 1), \
		\cf3 LFNoise2\cf0 .kr(0.1, 0.1, 0.1),\
		\cf3 LFNoise2\cf0 .kr(0.1),\
		0, 500, 600\
	)	\
) * 0.4 \}.play(s);\
)}