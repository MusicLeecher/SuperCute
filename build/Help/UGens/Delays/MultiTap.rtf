{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf0 \

\f1\b\fs36 MultiTap				
\fs28 multiple tap delay
\fs36 \
\

\fs24 MultiTap.ar(timesArray, levelsArray, in, mul, add, bufnum)\

\f2\b0 \
This is a wrapper  which creates a multiple tap delay line using 
\f1\b RecordBuf
\f2\b0  and 
\f1\b PlayBuf
\f2\b0 .\

\f1\b timesArray 
\f2\b0 - a Ref to an Array of delay times in seconds.\

\f1\b levelsArray
\f2\b0  - a Ref to an Array of amplitudes.\

\f1\b in
\f2\b0  - the input signal.\

\f1\b bufnum
\f2\b0  - the number of the buffer to use for the delay. This must be at least as long as the longest tap time.
\f0 \

\

\fs18 \cf2 s.boot;\
b = \cf3 Buffer\cf2 .alloc(s, s.sampleRate);\
(\
\{\
	\cf3 MultiTap\cf2 .ar(`[0.1, 0.2, 0.3, 0.4], `[0.1, 0.2, 0.4, 0.8], \
		\cf3 Decay\cf2 .ar(\cf3 Dust\cf2 .ar(2), 0.1, \cf3 PinkNoise\cf2 .ar), bufnum: b.bufnum)\
\}.play\
)
\fs24 \cf0 \
\
}