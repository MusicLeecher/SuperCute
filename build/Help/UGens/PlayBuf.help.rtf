{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green0\blue0;
\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PlayBuf		sample playback oscillator\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \

\f2\fs24 Plays back a sample resident in memory.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 PlayBuf.ar(numChannels,bufnum,rate,trigger,startPos,loop)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
	
\f0\b numChannels
\f2\b0  - number of channels that the buffer will be.\
			this must be a fixed integer. The architechture of the SynthDef\
			cannot change after it is compiled.\
	
\f0\b bufnum
\f2\b0  - the index of the buffer to use\
	
\f0\b rate
\f2\b0    - 1.0 is normal, 2.0 is one octave up, 0.5 is one octave down\
			-1.0 is backwards normal rate ... etc.\
	
\f0\b startPos
\f2\b0  - 0..1 float \
	
\f0\b loop
\f2\b0        - 1 means true, 0 means false.  this is modulate-able.\

\f1\fs18 \
\
( // read a whole sound into memory\
s = \cf2 Server\cf0 .local;\
b = \cf2 Buffer\cf0 .read(s,\cf3 "sounds/a11wlk01.wav"\cf0 );\
)\
\
\
SynthDef("help-PlayBuf",\{ arg out=0,bufnum=0;\
	Out.ar(0,\
		\cf2 PlayBuf\cf0 .ar(1,bufnum)\
	)\
\}).play(s,[0,b.bufnum]);\
\

\f2\fs24 Note again that the number of channels must be fixed for the SynthDef, it cannot vary depending on which buffer you use.\

\f1\fs18 \
\cf4 \
\cf5 // loop is true\
\cf6 SynthDef\cf4 (\cf7 "help-PlayBuf"\cf4 ,\{ \cf6 arg\cf4  out=0,bufnum=0;\
	\cf6 Out\cf4 .ar(0,\
		\cf6 PlayBuf\cf4 .ar(1,bufnum,loop: 1.0)\
	)\
\}).play(s,[0,b.bufnum]);\
\
\
\
\cf5 // trigger one shot on each pulse\
\cf6 SynthDef\cf4 (\cf7 "help-PlayBuf"\cf4 ,\{ \cf6 arg\cf4  out=0,bufnum=0;\
	\cf6 var\cf4  trig;\
	trig = \cf6 Impulse\cf4 .kr(1.0);\
	\cf6 Out\cf4 .ar(0,\
		\cf6 PlayBuf\cf4 .ar(1,b.bufnum,trigger:trig,loop:0.0)\
	)\
\}).play(s,[0,b.bufnum]);\
\
\
\cf5 // accelerating pitch\
\cf6 SynthDef\cf4 (\cf7 "help-PlayBuf"\cf4 ,\{ \cf6 arg\cf4  out=0,bufnum=0;\
	\cf6 var\cf4  rate;\
	rate = \cf6 XLine\cf4 .kr(0.1,100,60);\
	\cf6 Out\cf4 .ar(0,\
		\cf6 PlayBuf\cf4 .ar(1,bufnum,rate,1.0,0.0, 1.0)\
	)\
\}).play(s,[0,b.bufnum]);\
\
\
\
\cf5 // sine wave control of playback rate. negative rate plays backwards\
\cf6 SynthDef\cf4 (\cf7 "help-PlayBuf"\cf4 ,\{ \cf6 arg\cf4  out=0,bufnum=0;\
	\cf6 var\cf4  rate;\
	rate = \cf6 FSinOsc\cf4 .kr(\cf6 XLine\cf4 .kr(0.2,8,30), 2, 0.1);\
	\cf6 Out\cf4 .ar(0,\
		\cf6 PlayBuf\cf4 .ar(1,bufnum,rate,0.0, 1.0)\
	)\
\}).play(s,[0,b.bufnum]);\
\
\
\
\cf5 // zig zag around sound using offset\
/*  doesn't appear to work like that anymore ?\
SynthDef("help-PlayBuf",\{ arg out=0,bufnum=0;\
	var offset;\
	offset = LFNoise2.kr(Rand(2,20));\
	Out.ar(0,\
		PlayBuf.ar(1,bufnum,0.0,offset, 1.0)\
	)\
\}).play(s,[0,b.bufnum]);\
\
Note that rate is 0.0, but the offset is changing.\
*/\cf4 \
\
\
}