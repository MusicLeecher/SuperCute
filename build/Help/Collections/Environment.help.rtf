{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green112\blue0;\red0\green0\blue191;\red191\green0\blue0;
\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Environment
\f1\b0\fs24 \
\

\f0\b superclass: IdentityDictionary
\f1\b0 \
\
An Environment is an IdentityDictionary mapping Symbols to values. There is always one current Environment which is stored in the currentEnvironment class variable of class Object.\
\
Symbol and value pairs may be put into the current Environment as follows:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 currentEnvironment.put(\cf2 \\myvariable\cf0 , 999);
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
and retrieved from the current Environment as follows:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 currentEnvironment.at(\cf2 \\myvariable\cf0 ).postln;
\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 The compiler provides a shorthand for the two constructs above .\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 ~myvariable = 888;
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
is equivalent to:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 currentEnvironment.put(\\\cf2 myvariable\cf0 , 888);
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
and:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 ~myvariable.postln;
\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 is equivalent to:\
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 currentEnvironment.at(\\\cf2 myvariable\cf0 ).postln;
\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Making an Environment\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
Environment has a class method 
\f0\b make
\f1\b0  which can be used to create an Environment and fill it with values. What 
\f0\b make
\f1\b0  does is temporarily replace the current Environment with a new one, call your function where you fill the Environment with values, then it replaces the previous current Environment and returns you the new one.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a;\
a = \cf3 Environment\cf0 .make(\{\
	~a = 100;\
	~b = 200;\
	~c = 300;\
\});\
a.postln;\
)
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Using an Environment\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
The instance method 
\f0\b use
\f1\b0  lets you temporarily replace the current Environment with one you have made. The 
\f0\b use
\f1\b0  method returns the result of your function instead of the Environment like 
\f0\b make
\f1\b0  does.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a;\
a = \cf3 Environment\cf0 .make(\{\
	~a = 10;\
	~b = 200;\
	~c = 3000;\
\});\
a.use(\{\
	~a + ~b + ~c\
\}).postln;\
)
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
There is also a 
\f0\b use
\f1\b0  class method for when you want to make and use the result from an Environment directly.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a;\
a = \cf3 Environment\cf0 .use(\{\
	~a = 10;\
	~b = 200;\
	~c = 3000;\
	~a + ~b + ~c\
\}).postln;\
)
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Calling Functions with arguments from the current Environment\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
It is possible to call a Function and have it look up any unspecified argument values from the current Environment. This is done with the 
\f0\b valueEnvir
\f1\b0  and 
\f0\b valueArrayEnvir
\f1\b0  methods. These methods will, for any unspecified argument value, look in the current Environment for a symbol with the same name as the argument. If the argument is not found then whatever the function defines as the default value for that argument is used.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  f;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 // define a function\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 f = \{ \cf3 arg\cf0  x, y, z; [x, y, z].postln; \};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Environment\cf0 .use(\{\
	~x = 7;\
	~y = 8;\
	~z = 9;\
	\
	f.valueEnvir(1, 2, 3);	\cf4 // all values supplied\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	f.valueEnvir(1, 2);	\cf4 // z is looked up in the current Environment\
\cf0 	f.valueEnvir(1);		\cf4 // y and z are looked up in the current Environment \
\cf0 	f.valueEnvir;			\cf4 // all arguments are looked up in the current Environment\
\cf0 	f.valueEnvir(z: 1);	\cf4 // x and y are looked up in the current Environment\
\cf0 \});\
)
\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 Now here is how this can be used with an instrument function. Environments allow you to define instruments without having to worry about argument ordering conflicts. Even though the three functions below have the freq, amp and pan args declared in different orders it does not matter, because valueEnvir looks them up in the\
environment. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf5 s.boot;\
\
(\
\cf6 var\cf5  a, b, c, orc;\
\
a = \{ \cf6 arg\cf5  freq, amp, pan;\
	\cf6 Pan2\cf5 .ar(\cf6 SinOsc\cf5 .ar(freq), pan, amp);\
\};\
b =  \{ \cf6 arg\cf5  amp, pan, freq;\
	\cf6 Pan2\cf5 .ar(\cf6 RLPF\cf5 .ar(\cf6 Saw\cf5 .ar(freq), freq * 6, 0.1), pan, amp);\
\};\
c =  \{ \cf6 arg\cf5  pan, freq, amp;\
	\cf6 Pan2\cf5 .ar(\cf6 Resonz\cf5 .ar(\cf6 GrayNoise\cf5 .ar, freq * 2, 0.1), pan, amp * 2);\
\};\
orc = [a, b, c];\
\cf7 // 'reverb'\cf5 \
\{ \cf6 var\cf5  in; in = \cf6 In\cf5 .ar(0, 2); \cf6 CombN\cf5 .ar(in, 0.2, 0.2, 3, 1, in); \}.play(addAction: \cf8 \\addToTail\cf5 );\
\
\{ loop(\{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	
\f2\fs18 \cf6 Environment\cf5 .use(\{\
\cf0 	
\f2\fs18 \cf5 		\cf7 // set values in the environment\cf5 \
\cf0 		
\f2\fs18 \cf5 ~freq = exprand(80, 600);\
\cf0 		
\f2\fs18 \cf5 ~amp = 0.1;\
\cf0 		
\f2\fs18 \cf5 ~pan = 1.0.rand2;\
\cf0 		
\f2\fs18 \cf5 \
\cf0 		
\f2\fs18 \cf5 	\cf7 // call a randomly chosen instrument function \cf5 \
\cf0 		
\f2\fs18 \cf5 	\cf7 // with values from the environment\cf5 \
\cf0 		
\f2\fs18 \cf5 \
\cf0 		
\f2\fs18 \cf5  x = \{ orc.choose.valueEnvir; \}.play(fadeTime: 0.2, addAction: \cf8 \\addToHead\cf5 ); \
\cf0 		
\f2\fs18 \cf5  0.2.wait; \
\cf0 		
\f2\fs18 \cf5  x.release(0.2); \
\cf0 	
\f2\fs18 \cf5 \});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 \}) \}.fork;\
	\
)
\fs24 \cf0 \
}