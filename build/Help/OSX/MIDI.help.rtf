{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 MIDI
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 MIDIClient\
MIDIEndpoint\
MIDIIn\
MIDIOut\
superclass: Object\

\f1\b0 \
See the 
\f0\b [UsingMIDI]
\f1\b0  helpfile for practical considerations and techniques for using MIDI in SC.\
\
MIDIClient is a static class that starts up the MIDI service:\
It initializes with a number of virtual inports and outports.\
The default is 1. and usually not more a needed.\
The information about the hardware is stored in MIDIClient.sources and MIDIClient.destinations as MIDIEndpoints.\
\
MIDIIn represents a connection between a inport and a source of the MIDIClient.\
There are three possibilities to connect them:\
To do something with the incoming MIDI data set the actions.\
\
example:\
(\
MIDIClient.init;\
//There are three possibilities to connect for example to the first device:\

\f0\b //
\f1\b0 MIDIIn.connect(0, MIDIClient.sources.at(0));\

\f0\b //
\f1\b0 MIDIIn.connect(0, MIDIClient.sources.at(0).uid);\
MIDIIn.connect(0, 0);
\f0\b \

\f1\b0 //set the action:\
MIDIIn.control = \{arg src, chan, num, val;\
			val.postln;\
			\};\
)\
\
MIDIOut\
\
example:\
(\
MIDIClient.init;\
m = MIDIOut(0, MIDIClient.destinations.at(0).uid);\
m.noteOn(0, 60, 60);\
) \
\
\
)\
}