{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Ref			a reference to a value
\f1\b0\fs24 \

\f0\b superclass: AbstractFunction
\f1\b0 \
\
A Ref  instance is an object with a single slot named 'value' that serves as a holder of \
an object. Ref.new(object) one way to create a Ref, but there is a syntactic shortcut. \
The backquote ` is a unary operator that is equivalent to calling Ref.new(something).\
\
example:   \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 x = \cf2 Ref\cf0 .new(\cf2 nil\cf0 );\
z = obj.method(x);		\cf3 // method puts something in reference\
\cf0 x.value.doSomething;	\cf3 // retrieve value and use it
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 Ref is also used as a quoting device to protect against multi channel expansion in certain UGens that require Arrays.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 \ul Class methods:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \ulnone \

\f0\b new(anObject)\

\f1\b0 \
create a Ref of an object.\
\

\f0\b `anObject\

\f1\b0 \
create a Ref of an object.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 \ul Instance methods:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \ulnone \

\f0\b value
\f1\b0 \
\
Answer the value.\
\

\f0\b value_(aValue)\

\f1\b0 \
set the value.\
\

\f0\b get
\f1\b0 \
\
Answer the value.\
\

\f0\b set(aValue)\

\f1\b0 \
set the value.\
\

\f0\b dereference
\f1\b0 \
\
Answer the value. This message is also defined in class Object where it just returns the receiver.  Therefore 
\f2 anything.dereference
\f1  will remove a Ref if there is one. This is slightly different than the value message, because value will also cause functions to evaluate themselves whereas dereference will not.\
\

\f0\b asRef
\f1\b0 \
\
Answers the receiver. In class Object this message is defined to create a Ref of the object.\
\
}