{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 SC2DTabletSlider
\f1\b0\fs18 \
\

\f0\b\fs24 superclass: SC2DSlider\
\
a 2D slider with support for extended wacom data\

\f1\b0\fs18 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  window;\
\cf2 var\cf0  slider;\
\
window = \cf2 SCWindow\cf0 (\cf3 "SC2DSlider"\cf0 , \cf2 Rect\cf0 (100,100, 140 ,140));\
window.front;\
\
	slider = \cf2 SC2DTabletSlider\cf0 (window, \cf2 Rect\cf0 (20, 20,80, 80))\
			.x_(0.5).y_(1);\
	slider.mouseDownAction = \{ \cf2 arg\cf0  view,x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount;\
		["down",view,x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount].postln;\
	\};	\
	slider.action = \{ \cf2 arg\cf0  view,x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount;\
		[view,x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount].postln;\
	\};\
	slider.mouseUpAction = \{ \cf2 arg\cf0  view,x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount;\
		["up",view,x,y,pressure,tiltx,tilty,deviceID, buttonNumber,clickCount].postln;\
	\};\
	slider.setProperty(\\clipInBounds,0)\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 <>x 0..1 value\
<>y 0..1 value\

\f2\b0 \
\

\f0\b action
\f2\b0 \

\f0\b mouseDownAction
\f2\b0 \

\f0\b mouseUpAction
\f2\b0 \
\
all actions are passed the following wacom tablet values:\
	
\f0\b view
\f2\b0  - the view\
	
\f0\b x
\f2\b0  - 0..1 value\
	
\f0\b y
\f2\b0  - 0..1 value
\f0\b \
	pressure - 
\f2\b0 0..1
\f0\b \
	tiltX - 
\f2\b0 0..1 where available
\f0\b \
	tiltY - 
\f2\b0 0..1 where available
\f0\b \
	deviceID - 
\f2\b0 will be used to look up if the tip or the eraser is used
\f0\b \
	buttonNumber - 
\f2\b0 0 left, 1 right, 2 middle wheel click
\f0\b \
	clickCount - 
\f2\b0 double click, triple click ...\
		most relevant for the mouseDown, but still valid for the dragged and mouseUp
\f1\fs18 \

\f2\fs24 	
\f0\b absoluteZ
\f2\b0  - the wheel on the side of some mice\
	
\f0\b rotation
\f2\b0  - in degrees, only on the 4d mice \

\f1\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 \ul Properties
\f1\b0\fs18 \ulnone \
	
\f0\b\fs24 clipInBounds
\f1\b0\fs18  
\f2\fs24 - 0 or 1\
		by default the x/y values are clipped to 0..1\
		by setting this to 0, the values will exceed this as you drag from \
		inside the view to outside.  This is useful in that you can have a small view \
		in which to start your movement and then go all over as long as you don't lift the pen.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \

\f2\fs24 drag and drop returns and accepts Points.\
hold command key to initiate a drag.\
\
\

\f1\fs18 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef("help-SC2DTabletSlider",\cf0 \{ \cf2 arg\cf0  freq=440,int1=5,int2 = -5,\
			ffreqInterval=0,rq=0.4,gate=0.0;\
	\cf2 var\cf0  p,c,d,f;\
	c=\cf2 LFNoise1\cf0 .kr(0.1,0.45,0.55);\
	d=\cf2 LFNoise1\cf0 .kr(0.1,0.45,0.55);\
	f=\cf2 LFNoise1\cf0 .kr(0.1,2);\
	p=\cf2 Pulse\cf0 .ar([ freq  * int1.midiratio + f , freq, freq * int2.midiratio - f],\
			[c,d,c],0.2);\
	Out.ar(0,\
		\cf2 RLPF\cf0 .ar(\cf2 Mix\cf0 .ar(p),freq * ffreqInterval.midiratio,rq)\
			* \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr, gate, \cf2 gate\cf0 )\
	)\
\},[0.1,0.1,0.1,0.1,0.1,nil]).send(s);\
)\
\
(\
	\cf2 var\cf0  w, v,freq,int,synth;\
	synth = Synth("\cf2 help-SC2DTabletSlider");\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	w = SCWindow.new.front;\
\
	freq = \cf2 ControlSpec\cf0 (100,3000,\cf4 \\exp\cf0 );\
	int = ControlSpec(-48,48,\cf4 \\linear\cf0 ,1);\
	\
	v = \cf2 SCTabletView\cf0 (w,\cf2 Rect\cf0 (10,10,200,200));\
	v.background = \cf2 Color\cf0 .white;\
	v.action = \{ \cf2 arg\cf0  view,x,y,pressure,tiltx,tilty;\
		synth.set(	\
				\\int1, int.map(x),\
				\\int2, int.map(y),\
				\\ffreqInterval, int.map(pressure),\
				\\gate, pressure.postln\
			);\
	\};\
	\
	v.mouseDownAction = \{ \cf2 arg\cf0  view,x,y,pressure;\
		synth.set( \
				\\freq , rrand(30,80).midicps,\
				\\gate, pressure.postln\
			)\
	\};\
	v.mouseUpAction = \{ \cf2 arg\cf0  view,x,y,pressure;\
		synth.set( \\gate, 0.postln )\
	\};\

\f2\fs24 )\
}