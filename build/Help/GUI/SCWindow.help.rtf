{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green0\blue191;\red0\green0\blue0;\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 SCWindow			
\fs30 user interface window
\f1\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 	\
	\
	*new(name, bounds, resizable, border);\
	\
	\
	bounds
\f2\b0 : a Rect(\
				distance from left,\
				distance from bottom,\
				width,\
				height\
			)\
	
\f0\b *closeAll
\f2\b0  			closes all windows\
	
\f0\b *allWindows
\f2\b0 		a list of all windows\
	\
	
\f0\b fullScreen
\f2\b0  		fullscreeen mode, no way to close it then. so don't forget the button\
	
\f0\b endFullScreen
\f2\b0 		end the fullscreen mode\
	\
	
\f0\b userCanClose_
\f2\b0  	if set to false, window is uncloseable\
	
\f0\b close
\f2\b0 			close the window\
	
\f0\b front
\f1\b0\fs18 				
\f2\fs24 display the window, bring it to the front.\
				\
	
\f0\b refresh
\f2\b0 			sometimes this has to becalled so the views are updated\
	
\f0\b alpha_
\f2\b0 			tranparency channel value (0...1)\
	
\f0\b bounds_
\f2\b0 			set the bounds to a Rect\
	\
	
\f0\b onClose_
\f2\b0 			can be set to a function
\f0\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //examples\cf0 \
\
\
\cf2 //how to add views\cf0 \
(\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  w;\
w = S\cf3 CWindow\cf0 (\cf4 "my name is... panel"\cf0 , \cf3 Rect\cf0 (128, 64, 340, 360));\
\
32.do(\{ \cf3 arg\cf0  i;\
	b = \cf3 SCButton\cf0 (w, \cf3 Rect\cf0 (rrand(20,300),rrand(20,300), 75, 24));\
	b.states = [[\cf4 "Start "\cf0 ++i, \cf3 Color\cf0 .black, \cf3 Color\cf0 .rand],\
		[\cf4 "Stop "\cf0 ++i, \cf3 Color\cf0 .white, \cf3 Color\cf0 .red]];\
\});\
\
w.front; \
\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 view
\f1\b0\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 	every window has an SCTopView instance, which contains all the other views.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 	\
\cf3 (\
\
var\cf0  w;\
w = \cf3 SCWindow\cf0 (\cf4 "my name is... panel"\cf0 , \cf3 Rect\cf0 (128, 64, 340, 360));\
\
w.view.decorator = \cf3 FlowLayout\cf0 (w.view.bounds);\
w.view.background = \cf3 Color\cf0 (0.6,0.8,0.8);\
w.front;\
\
32.do(\{ \cf3 arg\cf0  i;\
	b = \cf3 SCButton\cf0 (w, \cf3 Rect\cf0 (rrand(20,300),rrand(20,300), 75, 24));\
	b.states = [[\cf4 "Start "\cf0 ++i, \cf3 Color\cf0 .black, \cf3 Color\cf0 .rand],\
		[\cf4 "Stop "\cf0 ++i, \cf3 Color\cf0 .white, \cf3 Color\cf0 .red]];\
\});\
\
w.front; \
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 bounds_(aRect)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 	set the bounds of the window\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 (\
\
x = \cf3 SCWindow\cf0 .new;\
x.front;\
\
x.bounds_(\cf3 Rect\cf0 (10,10,100,30));\
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 Note that the setting of the bounds doesn't happen until the application finishes its current application event cycle. Thus, if you check the bounds in the same chunk of code, the SCWindow will not yet have it updated.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
	\cf2 // execute this all at once\
\cf0 	w = \cf3 SCWindow\cf0 .new(\cf4 "test"\cf0 );\
	w.front;\
	w.bounds = \cf3 Rect\cf0 (50, 50, 50, 50);\
	w.bounds.postln;\
	\{ w.bounds.postln; \cf3 nil\cf0  \}.defer(0.1); \cf2 // next application event cycle\
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 setInnerExtent(width,height)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 Changes the size of the window while keeping the top left corner fixed.  This is the usual desired behavior, but quick draw and Rect have flipped coordinate systems.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 userCanClose_(boolean)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
Set this to true to prevent command-w from closing the window.  window.close will still close it, and it will still close on recompiling the library.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 border argument
\f2\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
	\cf5 SCWindow\cf6 .new(border:\cf5 false\cf6 ).front; \cf7 //can't be closed, as it has no buttons, also cmd-w not.\cf6 \
	\cf5 SCWindow\cf6 .closeAll;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf6 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 onClose\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
	get the current onClose function.
\f1\fs18 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 onClose_\
	
\f2\b0 set a function that will be evaluated when the window is closed.
\f0\b \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf2 //close the window and the synth plays\cf0 \
(\
	x = \cf3 SCWindow\cf0 .new.front;\
	x.alpha = 0.8;\
	x.onClose_(\{ \cf3 Synth\cf0 .new(\cf8 \\default\cf0 ) \});\
)\
\
\cf2 				\cf0 \
\
\
}