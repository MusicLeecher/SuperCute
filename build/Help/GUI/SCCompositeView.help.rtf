{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 SCCompositeView
\f1\b0\fs18 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 A view that contains other views.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 \
\

\f0\b grouping by background color\

\f1\b0\fs18 (\
w = \cf2 SCWindow\cf0 .new;\
\
c = \cf2 SCCompositeView\cf0 (w,\cf2 Rect\cf0 (0,0,300,300));\
\
a = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (0,0,100,100));	\
b = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (100,100,100,100));\
\
c.background = \cf2 Gradient(Color\cf0 .rand,Color.rand);\
\
w.front;\
)\

\f2\fs24 \
Coordinates are the same as that for the window, not relative to the origin of the composite view (as in other gui frameworks).\

\f1\fs18 (\
w = \cf2 SCWindow\cf0 .new;\
\
c = \cf2 SCCompositeView\cf0 (w,\cf2 Rect\cf0 (50,0,300,300));\
\
a = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (0,0,100,100));	\
b = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (100,100,100,100));\
\
c.background = \cf2 Gradient(Color\cf0 .rand,Color.rand);\
\
w.front;\
)\

\f2\fs24 \
\

\f0\b keydown bubbling\

\f2\b0 \
Note that the keyDown action is assigned to the composite view. If c and d do not have keyDown actions themselves, the event is passed to b, the parent.\

\f1\fs18 (\
w = \cf2 SCWindow\cf0 .new;\
\
c = \cf2 SCCompositeView\cf0 (w,\cf2 Rect\cf0 (0,0,500,500));\
\
a = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (0,0,100,100));	\
b = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (100,100,100,100));\
\
w.front;\
\
c.keyDownAction = \{\
	\cf3 "keydown bubbled up to me"\cf0 .postln;\
\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 //d is on window w,  not on composite view c\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 d = \cf2 SC2DSlider\cf0 (w,\cf2 Rect\cf0 (200,200,100,100));\
)\

\f2\fs24 click on the different views and hit keys on the keyboard.\
\

\f1\fs18 \
\

\f0\b\fs24 decorators
\f2\b0 \
	a 'decorator' object can be set to handle layout management.  all views added to the composite view will now be placed by the decorator.\

\f1\fs18 \
(\
a = \cf2 SCWindow\cf0 .new;\
\
b = \cf2 SCCompositeView\cf0 (a,\cf2 Rect\cf0 (0,0,500,500));\
b.decorator = \cf2 FlowLayout\cf0 (b.bounds);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 // adding views to b automatically use the decorator\
// no need to use parent.decorator.place\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 c = \cf2 SC2DSlider\cf0 (b,\cf2 Rect\cf0 (0,0,100,100));	\cf4 // size matters\
\cf0 d = \cf2 SC2DSlider\cf0 (b,\cf2 Rect\cf0 (0,0,100,100)); \cf4 // origin doesn't\
\cf0 \
a.front;\
)\cf2 \
\
\

\f0\b\fs24 \cf0 hiding / swapping\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf2 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 (\
a = \cf2 SCWindow\cf0 .new;\
q = 3;\
\
e = \cf2 SCButton\cf0 (a,\cf2 Rect\cf0 (0,0,160,20));\
\
e.states = \cf2 Array\cf0 .fill(q,\{ \cf2 arg\cf0  i;\
	[i.asString,\cf2 Color\cf0 .black,\cf2 Color\cf0 .white]\
\});\
\
e.action = \{ \cf2 arg\cf0  butt;\
	p.visible = \cf2 false\cf0 ;\
	p = c.at(butt.value);\
	p.visible = \cf2 true\cf0 ;\
\};\
\
c = \cf2 Array\cf0 .fill(q,\{ \cf2 arg\cf0  i;\
	b = \cf2 SCCompositeView\cf0 (a,\cf2 Rect\cf0 (0,25,300,300));\
	b.decorator = \cf2 FlowLayout\cf0 (b.bounds);\
	c = \cf2 SC2DSlider\cf0 (b,\cf2 Rect\cf0 (0,0,100,100));\
	c.x = 1.0.rand;\
	d = \cf2 SC2DSlider\cf0 (b,\cf2 Rect\cf0 (0,0,100,100));\
	d.y = 1.0.rand;\
	b.visible = \cf2 false\cf0 ;\
	b\
\});\
\
p = c.at(0); \cf4 // previous\
\cf0 p.visible = \cf2 true\cf0 ; \cf4 // show first one\
\cf0 \
a.front;\
\
)\
\

\f0\b\fs24 removing
\f1\b0\fs18 \
(\
	w = \cf2 SCWindow\cf0 .new;\
	c = \cf2 SCCompositeView\cf0 (w,\cf2 Rect\cf0 (0,0,300,300));\
	a = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (0,0,100,100));	\
	b = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (100,100,100,100));\
	c.background = \cf2 Gradient(Color\cf0 .rand,Color.rand);\
	w.front;\
)\
\
\
a.remove;\
c.refresh;\
\
\

\f0\b\fs24 resize contraints\

\f2\b0 resize the window to see how the contents behave\

\f1\fs18 (\
w = \cf2 SCWindow\cf0 .new;\
\
c = \cf2 SCCompositeView\cf0 (w,\cf2 Rect\cf0 (0,0,300,300));\
c.background = \cf2 Gradient(Color\cf0 .rand,Color.rand);\
\
c.resize = 5; // elastic\
\
a = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (0,0,100,100));	\
a.resize = 1; // fixed\
\
b = \cf2 SC2DSlider\cf0 (c,\cf2 Rect\cf0 (100,100,100,100));\
b.resize = 2; // x elastic\
b.setProperty(\\minWidth,30); // up to a point\
b.setProperty(\\maxWidth,200);\
w.front;\
\
)\
(bug: composite view should get limited by it's contents' limitations)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
}