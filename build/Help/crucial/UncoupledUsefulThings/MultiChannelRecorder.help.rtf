{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs36 \cf0 MultiChanRecorder
\f1\b0\fs18 \cf0 \
\

\f0\b\fs24 \cf0 MultiChanRecorder(busses)\

\f2\b0 \
Will record multiple busses into separate files.\
Optionally can mix them back onto the main output for monitoring.\

\f1\fs18 \cf0 \
\
\cf2 b = [\
	\cf3 Bus\cf2 (\cf4 \\audio\cf2 ,2,2),\
	\cf3 Bus\cf2 (\cf4 \\audio\cf2 ,4,2),\
	\cf3 Bus\cf2 (\cf4 \\audio\cf2 ,6,2)\
	];\
	\
m = \cf3 MultiChanRecorder\cf2 (b);\
\
\cf5 // each file is named: basePath + _chanNum\cf2 \
\cf5 // if basePath is nil : "recordings/SC_" ++ Date.localtime.stamp\cf2 \
m.prepareForRecord(basePath);\
\
\cf5 // mix the busses onto the main outs if desired\cf2 \
m.monitor;\
\
m.record;\
\cf5 // record may also specify a start time :\cf2 \
\cf5 // m.record(atTime)\cf2 \
\cf5 // see atTime help\cf2 \
\
m.stop;\cf0 \
\
\

\f0\b\fs24 \cf0 <>limiter\

\f1\b0\fs18 \cf0 \

\f2\fs24 \cf0 By default it uses a Limiter on each channel.  Set limit to false to defeat this.\

\f0\b \
<>recHeaderFormat \
<>recSampleFormat\

\f1\b0\fs18 \cf0 \
}