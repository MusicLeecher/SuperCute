{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
\f3\fmodern\fcharset77 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs50 \cf0 Instr    		
\fs32 a named function
\f1\b0\fs18 \

\f2\fs24 \
Instr is a way of storing sound functions such that they can be easily reused.\
It is flexible for many different situations and styles of coding.\
\
\

\f0\b Instrument(name,function,inputSpecs,outSpec);
\f2\b0 \
\

\f0\b name
\f2\b0  - a symbol or list of symbols, specifying the Instr's address in the global library\
	( the Instr is actually stored in Library at [ Instr, \\then,\\your,\\address ] )\
	\

\f0\b function
\f2\b0  - the Instr's ugenFunc\
	\
	THERE IS NO NEED TO USE Out.ar\
	\
\

\f0\b inputSpecs
\f2\b0 \
	Specify what kind of input is required, and the working range of values.
\f0\b \
\
	see [Spec] and  [ControlSpec]\
	
\f2\b0 \
	if no spec is supplied, Instr will use the function's argument name to\
	lookup a spec in Spec.specs.  if nothing is not found, it will default to a \
	ControlSpec with a range of 
\f3\fs28 0 .. 1
\f1\fs18 \
	\
(\
	\cf2 Instr\cf0 ([\cf3 \\minimoog\cf0 ,\cf3 \\one\cf0 ],\{ \cf2 arg\cf0  freq=440,int1=5,int2 = -5,\
							width1=0.1,width2=0.1,width3=0.1,\
							ffreqInterval=0,rq=0.4;\
		\cf2 var\cf0  p;\
		p=\cf2 Pulse\cf0 .ar([ freq  * int1.midiratio, freq, freq * int2.midiratio],\
				[ width1,width2,width3],0.3);\
		\cf2 RLPF\cf0 .ar(\cf2 Mix\cf0 .ar(p),freq * ffreqInterval.midiratio,rq)\
	\},#[ \
		\cf4 // different ways to specify the spec...\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 		\cf2 nil\cf0 , \cf4 // nil, so use function's arg name (\\freq) \
\cf0 			\cf4 // to look up in Spec.specs\
\cf0 		[-48,48,\cf3 \\linear\cf0 ,1], \cf4 // as(Spec,[-48,48,\\linear,1]) \
							//   =>   ControlSpec.new(-48,48,\\linear,1)\
\cf0 		[-48,48,\cf3 \\linear\cf0 ,1],\
		\cf3 \\unipolar\cf0 , 		\cf4 // try Spec.specs.at(\\unipolar)\
\cf0 		\cf2 nil\cf0 ,				\cf4 // try the argname width2, that fails,\
						//  so the default is ControlSpec(0,1,\\linear)\
\cf0 		\cf3 \\unipolar\cf0 ,\
		[-48,48,\cf3 \\linear
\fs20 \cf0 ,1]\
	]);\
)\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 	the default/init value for the Spec is taken from the function
\f0\b  
\f2\b0 defaults
\f0\b .\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs28 \cf0 	\
\
storing in the Library\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs24 \cf0 \
 When an Instr is instantiated, it stores itself in the global l
\f1\fs18 ibrary.  \
\
( \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 Instr\cf0 .new([\cf3 \\minimoog\cf0 ,\cf3 \\one\cf0 ],\{ \cf2 arg\cf0  freq=440,int1=5,int2 = -5,\
						width1=0.1,width2=0.1,width3=0.1,\
						ffreqInterval=0,rq=0.4;\
	\cf2 var\cf0  p;\
	\
	p=\cf2 Pulse\cf0 .ar([ freq  * int1.midiratio, freq, freq * int2.midiratio],\
			[ width1,width2,width3],0.3);\
			\
	\cf2 RLPF\cf0 .ar(\cf2 Mix\cf0 .ar(p),freq * ffreqInterval.midiratio,rq)\
			\
\},#[ \cf4 // specs\
\cf0 	\cf3 \\freq\cf0 ,\
	[-48,48,\cf3 \\linear\cf0 ,1],\
	[-48,48,\cf3 \\linear\cf0 ,1],\
	\cf3 \\unipolar\cf0 ,\
	\cf3 \\unipolar\cf0 ,\
	\cf3 \\unipolar\cf0 ,\
	[-48,48,\cf3 \\linear\cf0 ,1]\
]);\
\
)
\f0\b\fs28 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 The Instr can now be accessed at any time:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs28 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 	Instr.at([\\minimoog,\\one]).gui\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 playing from the Library\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf4 /**\
(//It is then accessible by its name as\
\
	// using the default args of the Instr\
	Instr.at([\\minimoog,\\one]).play\
\
)\
(//or\
	\{\
		// supplying some args via the instance .ar method\
		Instr.at([\\minimoog,\\one])\
			.ar( LFNoise1.kr(0.1,300,700) ); // args\
	\}.play\
)\
(//or\
	\{\
		// supplying some args via the class .ar method\
		Instr.ar(\
			[\\minimoog,\\one],// name\
			[ LFNoise1.kr(0.1,300,700) ] // args\
			);  \
	\}.play\
)\
( // or in patterns...\
	// (we need an envelope to play inside a pattern)\
	Instr([\\minimoog,\\two],\{ arg freq=440,int1=5,int2 = -5,width1=0.1,width2=0.1,width3=0.1,\
			ffreqInterval=0,rq=0.4;\
		var p;\
		\
		p=Pulse.ar([ freq  * int1.midiratio, freq, freq * int2.midiratio],\
				[ width1,width2,width3],0.3);\
				\
		RLPF.ar(Mix.ar(p),freq * ffreqInterval.midiratio,rq)\
			* EnvGen.kr(Env.asr)\
	\
	\});\
\
	Pbind(\
		\\ugenFunc,Instr.at([\\minimoog,\\two]),\
		\\note,Prand([10,20,30],inf)\
	).play(channels: 2)\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf4 **/\cf0 \
\
\
Auto loading the instr from the "Instr/" directory\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 If an Instr is not found in the library, it will attempt to load a super collider code\
file by the name of the first name of the Instr:\
\
	eg. if 
\f1\fs18 Instr.at([\\minimoog,\\one])
\f2\fs24  \
		returns 
\f1\fs18 nil
\f2\fs24 ,\
	\
	it tries to load the file Instr/minimoog\
	\
you can change the directory by setting  the classvar:\
\
	Instr.instrDirectory = "Music/Instrs/";\
\
	see Crucial-initClass for common configuration settings\
\
So you can just write pages and pages of Instr and leave them in the\
Instr/ directory.\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 .gui\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs24 \cf0 \
The gui for Instr is a simple display of the arguments a
\f1\fs18 nd specs.\
\
\
	\cf4 // default gui display for Instr\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	\cf2 Instr\cf0 .at([\cf3 \\minimoog\cf0 ,\cf3 \\one\cf0 ]).gui\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 .test\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs24 \cf0  .test will create a Patch on the Instr.\
 this is the best way to test your Instr while you are designing it:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
(\
	\cf2 Instr\cf0 ([\cf3 \\minimoog\cf0 ,\cf3 \\one\cf0 ],\{ \cf2 arg\cf0  freq=440,int1=5,int2 = -5,\
					width1=0.1,width2=0.1,width3=0.1,\
				ffreqInterval=0,rq=0.4;\
		\cf2 var\cf0  p;\
		\
		p=\cf2 Pulse\cf0 .ar([ freq  * int1.midiratio, freq, freq * int2.midiratio],\
				[ width1,width2,width3],0.3);\
				\
		\cf2 RLPF\cf0 .ar(\cf2 Mix\cf0 .ar(p),freq * ffreqInterval.midiratio,rq)\
				\
	\},#[\
		\cf2 nil\cf0 ,\
		[-48,48,\cf3 \\linear\cf0 ,1],\
		[-48,48,\cf3 \\linear\cf0 ,1],\
		\cf2 nil\cf0 ,\
		\cf2 nil\cf0 ,\
		\cf2 nil\cf0 ,\
		[-48,48,\cf3 \\linear\cf0 ,1]\
	])\
	.test;
\fs20 \
)\
\
\

\fs18 see [Patch]\
\
\
	\
	\
}