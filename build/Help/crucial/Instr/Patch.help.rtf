{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Patch
\f1\b0\fs18 \
\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // write Instr as in SC2, without Out.ar\
\
\cf3 Instr\cf0 (\cf4 \\bubbles\cf0 , \{ \cf3 arg\cf0  amp=1.0;\
	\cf3 var\cf0  f, zout;\
	f = \cf3 LFSaw\cf0 .kr(0.4, 0, 24, \cf3 LFSaw\cf0 .kr([8,7.23], 0, 3, 80)).midicps;\
	zout = \cf3 CombN\cf0 .ar(\cf3 SinOsc\cf0 .ar(f, 0, 0.04), 0.2, 0.2, 4);\
	zout * amp\
\});\
\
p = \cf3 Patch\cf0 (\cf4 \\bubbles\cf0 );\
\
// default server will be booted, def written and loaded\
p.play;\
\
p.stop;\
\
// command-. will also stop all sounds\
\
p.play;\
\
p.run(false);\
\
p.run(true);\
\
p.inspect;\
\
p.topGui;\
\
// close the window\
\
// open it again\
p.topGui;\
\
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 Fixed Arguments\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
Floats and other scalar values including Envelopes, are transparently dealt with by Patch.  The SynthDef that it produces does not have a separate control input for that argument.  It doesn't need one.  The value is fixed.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
( // fixing arguments\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Instr\cf0 ([\cf4 \\jmcExamples\cf0 ,\cf4 'moto-rev'\cf0 ],\{ \cf3 arg\cf0  lfo=0.2,ffreq=1000,rq=0.1;\
	\cf3 RLPF\cf0 .ar(\cf3 LFPulse\cf0 .ar(\cf3 SinOsc\cf0 .kr(lfo, 0, 10, 21), [0,0.1], 0.1), ffreq, rq).clip2(0.4);\
\});\
\
q = \cf3 Patch\cf0 ([\cf4 \\jmcExamples\cf0 ,\cf4 'moto-rev'\cf0 ],[\
	0.2\
]);\
\
q.topGui;\
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Patch inside Patch\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
( \cf2 // lets collect the cast...\
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Instr\cf0 (\cf4 \\bubbles\cf0 , \{ \cf3 arg\cf0  amp=1.0;\
	\cf3 var\cf0  f, zout;\
	f = \cf3 LFSaw\cf0 .kr(0.4, 0, 24, \cf3 LFSaw\cf0 .kr([8,7.23], 0, 3, 80)).midicps;\
	zout = \cf3 CombN\cf0 .ar(\cf3 SinOsc\cf0 .ar(f, 0, 0.04), 0.2, 0.2, 4);\
	zout * amp\
\},[\
	\cf4 \\amp\cf0 \
],\cf3 ArOutputSpec\cf4 (2)\cf0 ); // stereo out\
\
\
\cf3 Instr\cf0 (\cf4 \\rlpf\cf0 ,\{ \cf3 arg\cf0  audio=0,ffreq=500,rq=0.1;\
	\cf3 RLPF\cf0 .ar(audio, ffreq, rq)\
\},[\
	\cf2 // this will not multi channel expand !\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	\cf2 // must specify input and output specs with correct numChannels\
\cf0 	\cf2 // or this will assume to build a mono filter\
\cf0 	\cf4 \\stereo\cf0 ,\
	\cf4 \\ffreq\cf0 ,\
	\cf4 \\rq\cf0 \
], \cf3 ArOutputSpec\cf4 (2)\cf0  );\
\
\
// put bubbles into the filter\
p = \cf3 Patch\cf0 (\cf4 \\rlpf\cf0 ,[\
	q = \cf3 Patch\cf0 (\cf4 \\bubbles\cf0 )\
]);\
\
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
// watch the ugen count in the default server window\
// and also the error window results\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
p.play;\
\
\
\
// stops the parent and the child q\
p.stop;\
\
\
// allocates new everything\
p.play;\
\
// additional play returns the same output object,\
// does not start an additional process\
p.play;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // stop q, but the filter p is still reading from its old bus\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 q.stop;\
\
// should still have 5 ugens playing\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // sent the play message, q defaults to play out of the main outputs\
// not through the filter p\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 q.play;\
\
// stopping p now still stops q because it is still a child of p\
p.stop;\
\
// replaying the whole structures\
p.play;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // note the AudioPatchOut and the inputs: PatchIn classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 p.inspect;\
q.inspect;\
\
\
\
// and the gui all works\
\
p.topGui;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\
\
}