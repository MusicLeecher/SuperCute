{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 BeatClock
\f1\b0\fs24 \
\

\f0\b\fs28 superclass: Clock\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
A simple solution to playing Routines, where the value yielded is treated as the number of beats to wait.  BeatClock always uses the SystemClock for scheduling, and is subject to the same limitations with regard to Cocoa primitives.\
\
see [SystemClock] and [AppClock]\
\

\f0\b BeatClock.new(tempo)\

\f1\b0 	if no Tempo object is supplied, it will use the default global Tempo object.\
	\

\f0\b sched(beats,item)\
schedAbs(atBeat,item)\

\f1\b0 	\
OSCSched has more sophisticated functionality, but is currently intended only for scheduling osc messages.\
}