{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 MIDIResponder\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 register multiple functions to be evaluated when MIDI events occur.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs36 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 This does not check the MIDI channel, since I have very rarely found need for separate MIDI channels on the input.  It automatically initializes the MIDIClient with 1 standard device.  If you have more devices, simply initialize the MIDIClient yourself before using any MIDIResponders.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 \
\
CCResponder
\f2\b0\fs18 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 CCResponder.new(controlNumber,function)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 (\
a = 50;\
b = 51;\
c = \cf2 CCResponder\cf0 (a,\{ \cf2 arg\cf0  val; [a,val].postln  \});\
d = \cf2 CCResponder\cf0 (b,\{ \cf2 arg\cf0  val; [b,val].postln  \});\
)\
\
c.remove;\
d.remove;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 CCResponder supports multiple responders on the same cc number.\
\
CCResponder(1,\{ "tweedle dee".postln; \});\
CCResponder(1,\{ "tweedle dum".postln; );\
\
\
\
\
(\
a = 50;\
n = \cf2 NumberEditor\cf0 .new(0,[0,127]);\
c = \cf2 CCResponder\cf0 (a,\{ \cf2 arg\cf0  val; \
		\{n.value_(val).changed; \cf2 nil\cf0 \}.defer  \cf3 // can't call gui from this process\
\cf0 	\});\
n.topGui\
\
)\
c.remove;\
\
\
\
\
\
\
CCResponder.removeAll;\
(\
\cf2 var\cf0  freq,formfreq,gate,bwfreq;\
\
p = \cf2 Patch\cf0 (\{ \cf2 arg\cf0  freq=440,formfreq=100,gate=0.0,bwfreq=800;\
	\cf2 var\cf0  x;\
	x = \cf2 Formant\cf0 .ar(\
			\cf2 SinOsc\cf0 .kr(0.02, 0, 10, freq), \
			formfreq,\
			bwfreq\
			);\
	\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr, gate,\cf2 Latch\cf0 .kr(gate,gate)) * x;\
\},[\
	freq = \cf2 KrNumberEditor\cf0 (440,\cf4 \\freq\cf0 )\
]);\
\
c = \cf2 CCResponder\cf0 (50,\{ \cf2 arg\cf0  val; \
		freq.value_(val * 100 + 100 ).changed\
	\});\
\
p.play\
)\
\
See CCPlayer in [MIDIPlayer] help for better usage with Patch\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 NoteOnResponder\
NoteOffResponder\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 \
\cf2 NoteOnResponder\cf0 .new(\{ \cf2 arg\cf0  note,veloc;\
	[\cf5 "on"\cf0 ,note,veloc].postln;\
\});\
\
\
\cf2 NoteOffResponder\cf0 .new(\{ \cf2 arg\cf0  note,veloc;\
	[\cf5 "off"\cf0 ,note,veloc].postln;\
\});\
\
\
\
}