{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green112\blue0;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs38 \cf0 NumberEditor   			
\fs34 holds a float for editing
\f1\b0\fs30 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 Used for patch parameters, in patterns, anytime an editable number box is needed on screen.\
\
like all editors, \
	.value \
	.asCompileString \
	.next\
all return the float value, not the editor itself.
\f1\fs20 \
\
\

\f0\b\fs24 NumberEditor.new(value,spec)\

\f2\b0 	
\f0\b value
\f2\b0  -   initial value\
	
\f0\b spec
\f2\b0   -   ControlSpec or StaticSpec.  see [Spec]\
\

\f1\fs20 \
\
(
\fs18 \
n = \cf2 NumberEditor\cf0 (2.3,[0,10]);\
n.value = 5.6;\
n.asCompileString.postln;\
5.6\

\fs20 )\
\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //note that the .gui message returns a NumberEditorGui\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 n = \cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui;\
n.insp;\
)\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // so make sure you get the NumberEditor \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 n=\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 );\
n.gui;\
n.insp;\
)\
\
\
(
\fs18 \
	f=\cf2 MultiPageLayout\cf0 .new;\
	\
	n=\cf2 NumberEditor\cf0 (440.0,\cf5 \\freq\cf0 );\
	n.topGui(f);\
	\
	\cf2 ActionButton\cf0 (f,\cf6 "post value"\cf0 ,\{ n.value.postln \});\
	\cf3 // it compiles as its value\cf0 \
	\cf2 ActionButton\cf0 (f,\cf6 "post NumberEditor asCompileString"\cf0 ,\{ \
		n.asCompileString.postln \
	\});\
	f.resizeToFit.front;\

\fs20 )\
\
// programatically set it\
n.value = 100\
n.changed; // now the slider moves\
	// and sends to the server !\
\

\f0\b\fs28 IMPORTANT
\f1\b0\fs20 \

\f2\fs24 if a KrNumberEditor is connected to a Patch playing on a server, the message to the server happens when the KrNumberEditor gets the .changed message and sends .update to all its depedants.  This includes any NumberEditorGui and also any UpdatingScalarPatchOut, which is what actually sends the message to the server.
\f1\fs20 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 /*\
s.boot;\
(\
// works as a stream .. convienient for patterns\
	n=NumberEditor(440.0,\\freq);\
	n.gui;\
	\
	Pbind(\
		\\freq,n\
	).play\
)\
*/\cf0 \
\
\
// controlling the display\
(\
Sheet(\{ arg f;\
	f.startRow;\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui(f); // default\
\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).smallGui(f); // smallGui never has slider\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui(f,nil, false); //use gui,nil bounds, slider: false	\
\
	f.startRow;\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui(f,60@10,true); // slider 60 by 10\
	f.startRow;\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui(f, 200@40, true); // slider 200 by 40\
	f.startRow;\
\
\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).smallGui(f);\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).smallGui(f);\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).smallGui(f);\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).smallGui(f);\
\
	f.startRow;\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui(f,20@100,true);	// verticle, with slider\
	\cf2 NumberEditor\cf0 (440.0,\cf4 \\freq\cf0 ).gui(f,20@100,true);	// verticle, with slider\
\})\
)\
bug: verticle not working yet\
\
Putting them on a Sheet\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 w = Sheet(\{ arg h;\
	c = Array.fill(10,\{ arg i;\
		var n;\
		n = NumberEditor(0,\\amp);\
		h.startRow;\
		n.gui(h);\
		n\
	\});\
\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs20 \cf0 \
)\
\
Putting them on a MultiPageLayout\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 w = MultiPageLayout.new;\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = NumberEditor(0,\\amp);\
	w.startRow;\
	n.gui(w);\
	n\
\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs20 \cf0 w.front;\
)\
\
Putting them on normal windows
\fs18 \
(\
w = SCWindow.new;\
w.front;\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = NumberEditor(0,\\amp);\
	n.gui(w,Rect(10,25 * i, 150,13));\
	n\
\});\
\
)\
\
using a MultiPageLayout on a window\
(\
\
w = SCWindow.new;\
w.front;\
p = MultiPageLayout.on(w);\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = NumberEditor(0,\\amp);\
	n.gui(p);\
	p.startRow;\
	n\
\});\
\
)\
\
\
put them on a FlowView\
(\
\
w = SCWindow.new;\
w.front;\
p = FlowView(w,Rect(10,10,500,500));\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = NumberEditor(0,\\amp);\
	n.gui(p);\
	p.startRow;\
	n\
\});\
\
)\
\
\
\
\
\
\
\
// a nice glitch display\
//verticle not working yet\
(\
w = SCWindow.new;\
w.front;\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = NumberEditor(0,\\amp);\
	n.gui(w,Rect(10 + (15 * i),25, 13,150));\
	n\
\});\
\
)\
\
// in SCVLayout not working yet either\
(\
w = SCWindow.new;\
w.front;\
v = SCVLayoutView.new(w,w.view.bounds);\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = NumberEditor(0,\\amp);\
	n.gui(v,Rect(0,0,100,20));\
	n\
\});\
\
)\

\fs20 \
\
//works with sliders\
(
\fs18 \
w = SCWindow.new;\
w.front;\
v = SCVLayoutView.new(w,w.view.bounds);\
c = Array.fill(10,\{ arg i;\
	var n;\
	n = SCSlider(v,Rect(0,0,100,20));\
	n\
\});\
\

\fs20 )\
}