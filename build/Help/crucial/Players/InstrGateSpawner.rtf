{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b\fs36 \cf0 InstrGateSpawner
\f0\b0\fs24 \
\
superclass: InstrSpawner, Patch\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 instr
\f0\b0  - as per Patch and InstrSpawner\

\f1\b args
\f0\b0  - as per InstrSpawner\
	each streamed arg is passed the current beat.\
	this can be used to index into an array of scales (chord changes)\
	or an index of amplitudes (accents)\

\f1\b delta
\f0\b0  - a float, function or stream in beats\

\f1\b duration
\f0\b0  - a float, function or stream,\
	passed the delta time of the current event and the current beat\
	\
it stops when any arg or the delta or duration returns nil.\
the gate will be held open for the amount of the duration.\
the Synth is expected to end itself via EnvGen doneAction or similar.
\f2\fs18 \
\
(\
\
	\cf2 InstrGateSpawner\cf0 (\{ \cf2 arg\cf0  gate,freq,rq,width,fenv,fenvmod,envperc;\
		\cf2 RLPF\cf0 .ar(\
			\cf2 Pulse\cf0 .ar(\
				freq,\
				width\
			),\
			\cf2 EnvGen\cf0 .kr(fenv,gate,levelScale: fenvmod),\
			rq)\
	 		  * \cf2 EnvGen\cf0 .kr(envperc,gate, doneAction: 2)\
	\},[\
		0, \cf3 // gate is irrelevant, it will be supplied\cf0 \
		(Pwhite(-4,14,inf) + 30).midicps,\
		0.1,\
		\cf2 Patch\cf0 (\{ \cf2 LFTri\cf0 .kr(0.1,[0.0,0.5],0.5,0.5) \}),\
		\cf2 Env\cf0 .adsr(sustainLevel: 0.3),\
		6000,\
		\cf2 Env\cf0 .adsr(releaseTime: 0.1)\
	],\
		\cf2 Prand\cf0 ([Pseq([0.125,0.125,0.125],1),0.25,0.5,0.75,1.0],\cf2 inf\cf0 ), \cf3 // in beats\cf0 \
		\cf2 Pfunc\cf0 (\{ \cf2 arg\cf0  delta, beat; delta * 0.9 \}) \cf3 // legato of 0.9\cf0 \
	).gui\
)\
\
(\
	\cf2 InstrGateSpawner\cf0 (\{ \cf2 arg\cf0  gate,freq,rq,width,fenv,fenvmod,envperc;\
		\cf2 RLPF\cf0 .ar(\
			\cf2 Pulse\cf0 .ar(\
				freq,\
				width\
			),\
			\cf2 EnvGen\cf0 .kr(fenv,gate,levelScale: fenvmod),\
			rq)\
	 		  * \cf2 EnvGen\cf0 .kr(envperc,gate, doneAction: 2)\
	\},[\
		0, \cf3 // gate is irrelevant, it will be supplied\cf0 \
		Pfunc(\{  arg beat;\
			[1,3,5,7,9,11].choose.degreeToKey(Scale.scales.at(\\dorian) + 30 + [1,4,5,1].wrapAt(beat div: 16)).midicps \
		\}),\
		0.1,\
		\cf2 Patch\cf0 (\{ \cf2 LFTri\cf0 .kr(0.1,[0.0,0.5],0.5,0.5) \}),\
		\cf2 Env\cf0 .adsr(sustainLevel: 0.3),\
		6000,\
		\cf2 Env\cf0 .adsr(releaseTime: 0.1)\
	],\
		\cf2 Prand\cf0 ([Pseq([0.125,0.125,0.125],1),0.25,0.5,0.75,1.0],\cf2 inf\cf0 ), \cf3 // in beats\cf0 \
		\cf2 Pfunc\cf0 (\{ \cf2 arg\cf0  delta, beat; delta * 0.9 \}) \cf3 // legato of 0.9\cf0 \
	).gui\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf0 \
\
note that the patch is stereo because the width input is a stereo kr rate Patch.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 Compared to Pbind\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \
Pbind streams each item, whether it is going to change or not (a float will not change, an Env will not change).\
much more simple/efficient event handling, \
	not using an environment\
	streamed items are placed directly into the OSC message to be sent\
	only using the features that are needed for the ugenFunc\
		no lag, offsetChannel etc.\
		\
allows easy patching of players\
beat is passed into each stream item\
	this solves a common 'sync' problem with event stream's note-by-note streaming\
the usual flexibility of players with regards to patching, saving\
\
cons:\
	can't do Pseq([ Pbind, Pbind ] ) etc.\
		isn't a pattern, doesn't end with a nil, so can't sequence sections with it.\
		but it is possible to use CropPlayer and Pseq or PlayerSeqTrack.\
	can't use pattern filters\
	can't switch ugenFuncs dynamically\
	\
\
compare with the first example from Pbind help
\f2\fs18 \
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 InstrGateSpawner\cf0 (\{ \cf2 arg\cf0  freq = 360, gate = 1, pan, amp=0.1;\
	\cf2 var\cf0  out, eg, fc, osc, a, b, w;\
	fc = \cf2 LinExp\cf0 .kr(\cf2 LFNoise1\cf0 .kr(\cf2 Rand\cf0 (0.25,0.4)), -1,1,500,2000);\
	osc = \cf2 Mix\cf0 .fill(8, \{ \cf2 LFSaw\cf0 .ar(freq * [\cf2 Rand\cf0 (0.99,1.01),\cf2 Rand\cf0 (0.99,1.01)], 0, amp) \}).distort * 0.2;\
	eg = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .asr(1,1,1), gate, doneAction:2);\
	out = eg * \cf2 RLPF\cf0 .ar(osc, fc, 0.1);\
	#a, b = out;\
	\cf2 Mix\cf0 .ar(\cf2 PanAz\cf0 .ar(4, [a, b], [pan, pan+0.3]))\
\},[\
\
\cf2 	(Pwhite\cf0 (0,12).degreeToKey([0, 2, 4, 5, 7, 9, 11] + (5*12)) ).midicps\
],\
	0.2,\
	0.2\
).play\
\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf0 the server usage is identical as should be expected, but the client side is about half the cpu.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\
\
\
		ValueAndAsStream(\
			Patch([\\ampPatterns,\\accent], [ accentArray ])\
		)\
		\
		Instr([\\ampPatterns,\\accent],\
				\{ arg accentArray;\
					Pfunc(\{ arg beat; accentArray.at((beat % 4).asInteger) \})\
				\});\
				\
		\
	so when asked asStream it returns the pattern\
	which can respond each time with the amp\
	\
	this is a compile-string-saveable way to express the Pfunc\
	\
	\
	\
		\
		\
		\
	\
}