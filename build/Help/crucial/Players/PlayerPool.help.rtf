{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PlayerPool
\fs24 		switch between players
\f1\b0 \
\
superclass: PlayerSocket\
\
This is a PlayerSocket with a supplied pool of players that it can switch between.\

\f2\fs18 \
See PlayerSocket regarding Envelopes and .release\
\
\
(\cf2 \
	\cf3 Instr\cf2 ([\cf4 \\oscillOrc\cf2 ,	\cf4 \\pmosc\cf2 ],\{ \cf3 arg\cf2  freq=400, freq2=500,pmindex=0,phasemod=0.0,amp=1.0,gate=1.0;\
		\cf3 PMOsc\cf2 .ar(freq,freq2,pmindex,phasemod,amp)\
			* \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 .adsr,gate)\
	\});\
	\
	p = \cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ],\
	[\
		\cf3 KrNumberEditor\cf2 (240.06,\cf4 \\freq\cf2 ), \
		27.7707, \
	  	1.3, \
	 	0, \
	  	0.616317,\
	  	\cf3 KrNumberEditor\cf2 (1.0,\cf4 \\gate\cf2 )\
	 ]);\
	 \
	 q = \cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ],\
		[\
		\cf3 KrNumberEditor\cf2 (90,\cf4 \\freq\cf2 ), \
	  	27.7707, \
	  	\cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ],\
		[\
			\cf3 KrNumberEditor\cf2 (150.06,\cf4 \\freq\cf2 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]), \
	 	0, \
		\cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ],\
		[\
			\cf3 KrNumberEditor\cf2 (150.06,\cf4 \\freq\cf2 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]),\
		 \cf3 KrNumberEditor\cf2 (1.0,\cf4 \\gate\cf2 )\
	 ]);\
	 \
	 r =  \cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ], [\
		\cf3 KrNumberEditor\cf2 (40,\cf4 \\freq\cf2 ), \
	  	\cf3 nil\cf2 , \
	  	\cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ], [\
			\cf3 KrNumberEditor\cf2 (150.06,\cf4 \\freq\cf2 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]), \
	 	0, \
		\cf3 Patch\cf2 .new([ \cf4 'oscillOrc'\cf2 , \cf4 'pmosc'\cf2  ], [\
			\cf3 KrNumberEditor\cf2 (150.06,\cf4 \\freq\cf2 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]),\
		 \cf3 KrNumberEditor\cf2 (1.0,\cf4 \\gate\cf2 )\
	 ]);\
	 \
	 \cf3 PlayerPool\cf2 ([ p,q,r ],round:1.0).gui\
\cf0 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 Since we don't know how big the gui is going to be, it assumes to hog all the space.\
When you know, you can explictly gui it to that size:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
	\cf5 PlayerPool\cf0 ([p,q,r],round: 1.0).gui(\cf5 nil\cf0 , 500@300)\
	\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 Easiest to use with lists of paths to saved players. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 	\
	eg. \cf5 PlayerPool\cf0 ( paths )\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 If the patches had been loaded from disk, they would display their filenames in the select buttons.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 //PlayerPool([p,q,r],round:1.0).smallGui\cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Without gui\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 (\
o = \cf5 PlayerPool\cf0 ([p,q,r],\
			env: \cf5 Env\cf0 .asr(1.0,release: 8.0),\
			round: 0.0);\
\
o.play\
)\
\
\
o.choose;\
\
o.select(1);\
\
o.release;\
\
o.free;\
\
\
\
\
\
// getPaths is broken and only gets one path :()\
(\
	\cf5 CocoaDialog\cf0 .getPaths(\{ \cf5 arg\cf0  paths; \
		\cf5 PlayerPool\cf0 (\
			paths.collect(\{ \cf5 arg\cf0  path;\
				\cf5 SFP\cf0 (path)\
			\})\
		).gui\
	\})\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 Sending the PlayerPool through an effect patch
\f2\b0\fs18 \
\

\f1\fs24 the gate inputs on p, q, and r are left high. when the PlayerPool switches, it sends a release by dropping the gate, then calling .stop\
\
since PlayerPool is a subclass of PlayerSocket, it already envelopes the audio output of the players.\
this example shows:\
	1.  putting the entire thing through another Patch effect process\
	2. that all the \\gate args in a synth will be released when .release is called\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
still a bug with EnvelopedPlayer.\
\
first time a patch plays, its in the wrong group\
(\
	\cf5 Instr\cf0 ([\cf7 \\oscillOrc\cf0 ,	\cf7 \\pmosc\cf0 ],\{ \cf5 arg\cf0  freq=400, freq2=500,pmindex=0,phasemod=0.0,amp=1.0,gate=1.0;\
		\cf5 PMOsc\cf0 .ar(freq,freq2,pmindex,phasemod,amp) * \cf5 EnvGen\cf0 .kr(\cf5 Env\cf0 .adsr,gate: gate)\
	\});\
	\
	p = \cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ],\
	[\
		\cf5 KrNumberEditor\cf0 (240.06,\cf7 \\freq\cf0 ), \
		27.7707, \
	  	1.3, \
	 	0, \
	  	0.616317,\
	  	\cf5 KrNumberEditor\cf0 (1,\cf7 \\gate\cf0 )\
	 ]);\
	 \
	 q = \cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ],\
		[\
		\cf5 KrNumberEditor\cf0 (90,\cf7 \\freq\cf0 ), \
	  	27.7707, \
	  	\cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ],\
		[\
			\cf5 KrNumberEditor\cf0 (150.06,\cf7 \\freq\cf0 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317,\
		  	\cf5 KrNumberEditor\cf0 (1,\cf7 \\gate\cf0 )\
		 ]), \
	 	0, \
		\cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ],\
		[\
			\cf5 KrNumberEditor\cf0 (150.06,\cf7 \\freq\cf0 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317,\
		  	\cf5 KrNumberEditor\cf0 (1,\cf7 \\gate\cf0 )\
		 ]),\
		 \cf5 KrNumberEditor\cf0 (1,\cf7 \\gate\cf0 )\
	 ]);\
	 \
	 r =  \cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ], [\
			\cf5 KrNumberEditor\cf0 (40,\cf7 \\freq\cf0 ), \
		  	\cf5 nil\cf0 , \
		  	\cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ], [\
				\cf5 KrNumberEditor\cf0 (150.06,\cf7 \\freq\cf0 ), \
				27.7707, \
			  	1.3, \
			 	0, \
			  	0.616317,\
				 \cf5 BeatClockPlayer\cf0 (10)\
			 ]), \
		 	0, \
			\cf5 Patch\cf0 .new([ \cf7 'oscillOrc'\cf0 , \cf7 'pmosc'\cf0  ], [\
				\cf5 KrNumberEditor\cf0 (150.06,\cf7 \\freq\cf0 ), \
				27.7707, \
			  	1.3, \
			 	0, \
			  	0.616317,\
				 \cf5 BeatClockPlayer\cf0 (12)\
			 ]),\
			 \cf5 BeatClockPlayer\cf0 (16)\
	 ]);\
\
\cf5 Patch\cf0 (\{ \cf5 arg\cf0  audio,delayTime=0.3,feedback=0.2,buffer;\
	\cf5 PingPong\cf0 .ar(buffer.bufnumIr, [audio,audio],delayTime,feedback)\
\},[\
	\cf5 PlayerPool\cf0 ([p,q,r],\
			env: \cf5 Env\cf0 .adsr(1.0,releaseTime: 8.0),\
			round: 0.0),\
	0.3,\
	0.5,\
	\cf5 BufferProxy\cf0 .new(44100,2)\
]).gui\
\
)\
\
\
/* stress testing\
	players aren't designed to be played this fast.  for fast iterations,\
	use InstrGateSpawner etc.\
	but this test shows where the weakness is.\
	(releases are overlapping next starts)\
	being worked on.\
*/\
(\
var a,pool;\
\
\cf5 Instr\cf0 ([\cf7 \\klankperc\cf0 ,\cf7 \\k2a\cf0 ],\{ \cf5 arg\cf0  trig=0.0,sfreqScale=1.0,sfreqOffset=0.0,stimeScale=1.0,foldAt=0.1;\
	\cf5 Klank\cf0 .ar(\
				`[\
					\cf5 FloatArray\cf0 [ rrand(40,1000), rrand(40,1000) ],\
					\cf5 nil\cf0 ,\
					\cf5 FloatArray\cf0 [ 0.165394, 0.15595 ]\
				],\
				\cf5 K2A\cf0 .ar(trig),\
				sfreqScale,sfreqOffset,stimeScale\
			).squared.fold2(foldAt)		\
\},[\
	\cf5 nil\cf0 ,\
	[0.01,100],\
	[0,10000],\
	[0.01,100]\
]);\
\
a =	\cf5 Array\cf0 .fill(5,\{ \cf5 arg\cf0  i;\
		\cf5 Patch\cf0 .new([\cf7 \\klankperc\cf0 ,\cf7 \\k2a\cf0 ],\
		[\
			\cf5 BeatClockPlayer\cf0 (16),\
			i * (3.midiratio),\
			i * (3.midiratio),\
			1.0,\
			0.1\
		]);\
	\});\
\
	pool = \cf5 PlayerPool\cf0 ( a,\
			env: \cf5 Env\cf0 .asr(0.01,releaseTime: 0.001),\
			round: 0.25);\
			\
	pool.play;\
	\
	Routine(\{\
		loop \{\
			0.05.wait;\
			pool.select(a.size.rand.debug("selecting:"));\
		\}\
	\}).play(AppClock);\
	\
)\
\
}