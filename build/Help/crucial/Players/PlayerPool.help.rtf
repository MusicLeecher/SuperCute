{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green115\blue0;\red0\green0\blue191;\red0\green112\blue0;
\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PlayerPool
\fs24 		switch between players
\f1\b0 \
\
superclass: PlayerSocket\
\
This is a PlayerSocket with a supplied pool of players that it can switch between.\

\f2\fs18 \
See PlayerSocket regarding Envelopes and .release\
\
\
(\
	Instr([\\oscillOrc,	\cf2 \\pmosc]\cf0 ,\{ \cf3 arg\cf0  freq=400, freq2=500,pmindex=0,phasemod=0.0,amp=1.0,gate=1.0;\
		\cf3 PMOsc\cf0 .ar(freq,freq2,pmindex,phasemod,amp)\
			* EnvGen.kr(Env.adsr,gate)\
	\});\
	\
	p = \cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ],\
	[\
		\cf3 KrNumberEditor\cf0 (240.06,\cf4 \\freq\cf0 ), \
		27.7707, \
	  	1.3, \
	 	0, \
	  	0.616317,\
	  	KrNumberEditor(1.0,\\gate)\
	 ]);\
	 \
	 q = \cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ],\
		[\
		\cf3 KrNumberEditor\cf0 (90,\cf4 \\freq\cf0 ), \
	  	27.7707, \
	  	\cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ],\
		[\
			\cf3 KrNumberEditor\cf0 (150.06,\cf4 \\freq\cf0 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]), \
	 	0, \
		\cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ],\
		[\
			\cf3 KrNumberEditor\cf0 (150.06,\cf4 \\freq\cf0 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]),\
		 KrNumberEditor(1.0,\\gate)\
	 ]);\
	 \
	 r =  \cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ], [\
		\cf3 KrNumberEditor\cf0 (40,\cf4 \\freq\cf0 ), \
	  	\cf3 nil\cf0 , \
	  	\cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ], [\
			\cf3 KrNumberEditor\cf0 (150.06,\cf4 \\freq\cf0 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]), \
	 	0, \
		\cf3 Patch\cf0 .new([ \cf4 'oscillOrc'\cf0 , \cf4 'pmosc'\cf0  ], [\
			\cf3 KrNumberEditor\cf0 (150.06,\cf4 \\freq\cf0 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317\
		 ]),\
		 KrNumberEditor(1.0,\\gate)\
	 ]);\
	 \
	 \cf3 PlayerPool\cf0 ([ p,q,r ],round:1.0).gui\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 Easiest to use with lists of paths to saved players. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 	\
	eg. PlayerPool( paths )\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 If the patches had been loaded from disk, they would display their filenames in the select buttons.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
//PlayerPool([p,q,r],round:1.0).smallGui\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Without gui\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 (\
o = \cf3 PlayerPool\cf0 ([p,q,r],\
			env: \cf3 Env\cf0 .asr(1.0,release: 8.0),\
			round: 0.0);\
\
o.play\
)\
\
\
o.choose;\
\
o.select(1);\
\
o.release;\
\
o.free;\
\
\
\
\
\
// getPaths is broken and only gets one path :()\
(\
	\cf3 CocoaDialog\cf0 .getPaths(\{ \cf3 arg\cf0  paths; \
		\cf3 PlayerPool\cf0 (\
			paths.collect(\{ \cf3 arg\cf0  path;\
				\cf3 SFP\cf0 (path)\
			\})\
		).gui\
	\})\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 Sending the PlayerPool through an effect patch
\f2\b0\fs18 \
\

\f1\fs24 the gate inputs on p, q, and r are left high. when the PlayerPool switches, it sends a release by dropping the gate, then calling .stop\
\
since PlayerPool is a subclass of PlayerSocket, it already envelopes the audio output of the players.\
this example shows:\
	1.  putting the entire thing through another Patch effect process\
	2. that all the \\gate args in a synth will be released when .release is called\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
still a bug with EnvelopedPlayer.\
\
first time a patch plays, its in the wrong group\
(\cf5 \
	\cf6 Instr\cf5 ([\cf7 \\oscillOrc\cf5 ,	\cf7 \\pmosc\cf5 ],\{ \cf6 arg\cf5  freq=400, freq2=500,pmindex=0,phasemod=0.0,amp=1.0,gate=1.0;\
		\cf6 PMOsc\cf5 .ar(freq,freq2,pmindex,phasemod,amp) * \cf6 EnvGen\cf5 .kr(\cf6 Env\cf5 .adsr,gate: gate)\
	\});\
	\
	p = \cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ],\
	[\
		\cf6 KrNumberEditor\cf5 (240.06,\cf7 \\freq\cf5 ), \
		27.7707, \
	  	1.3, \
	 	0, \
	  	0.616317,\
	  	\cf6 KrNumberEditor\cf5 (1,\cf7 \\gate\cf5 )\
	 ]);\
	 \
	 q = \cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ],\
		[\
		\cf6 KrNumberEditor\cf5 (90,\cf7 \\freq\cf5 ), \
	  	27.7707, \
	  	\cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ],\
		[\
			\cf6 KrNumberEditor\cf5 (150.06,\cf7 \\freq\cf5 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317,\
		  	\cf6 KrNumberEditor\cf5 (1,\cf7 \\gate\cf5 )\
		 ]), \
	 	0, \
		\cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ],\
		[\
			\cf6 KrNumberEditor\cf5 (150.06,\cf7 \\freq\cf5 ), \
			27.7707, \
		  	1.3, \
		 	0, \
		  	0.616317,\
		  	\cf6 KrNumberEditor\cf5 (1,\cf7 \\gate\cf5 )\
		 ]),\
		 \cf6 KrNumberEditor\cf5 (1,\cf7 \\gate\cf5 )\
	 ]);\
	 \
	 r =  \cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ], [\
			\cf6 KrNumberEditor\cf5 (40,\cf7 \\freq\cf5 ), \
		  	\cf6 nil\cf5 , \
		  	\cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ], [\
				\cf6 KrNumberEditor\cf5 (150.06,\cf7 \\freq\cf5 ), \
				27.7707, \
			  	1.3, \
			 	0, \
			  	0.616317,\
				 \cf6 BeatClockPlayer\cf5 (10)\
			 ]), \
		 	0, \
			\cf6 Patch\cf5 .new([ \cf7 'oscillOrc'\cf5 , \cf7 'pmosc'\cf5  ], [\
				\cf6 KrNumberEditor\cf5 (150.06,\cf7 \\freq\cf5 ), \
				27.7707, \
			  	1.3, \
			 	0, \
			  	0.616317,\
				 \cf6 BeatClockPlayer\cf5 (12)\
			 ]),\
			 \cf6 BeatClockPlayer\cf5 (16)\
	 ]);\
\
\cf6 Patch\cf5 (\{ \cf6 arg\cf5  audio,delayTime=0.3,feedback=0.2,buffer;\
	\cf6 PingPong\cf5 .ar(buffer.bufnumIr, [audio,audio],delayTime,feedback)\
\},[\
	\cf6 PlayerPool\cf5 ([p,q,r],\
			env: \cf6 Env\cf5 .adsr(1.0,releaseTime: 8.0),\
			round: 0.0),\
	0.3,\
	0.5,\
	\cf6 BufferProxy\cf5 .new(44100,2)\
]).gui\
\
\cf0 )\
\
\
/* stress testing\
	players aren't designed to be played this fast.  for fast iterations,\
	use InstrGateSpawner etc.\
	but this test shows where the weakness is.\
	(releases are overlapping next starts)\
	being worked on.\
*/\
(\
var a,pool;\
\
\cf3 Instr\cf0 ([\cf2 \\klankperc\cf0 ,\cf2 \\k2a\cf0 ],\{ \cf3 arg\cf0  trig=0.0,sfreqScale=1.0,sfreqOffset=0.0,stimeScale=1.0,foldAt=0.1;\
	\cf3 Klank\cf0 .ar(\
				`[\
					\cf3 FloatArray\cf0 [ rrand(40,1000), rrand(40,1000) ],\
					\cf3 nil\cf0 ,\
					\cf3 FloatArray\cf0 [ 0.165394, 0.15595 ]\
				],\
				\cf3 K2A\cf0 .ar(trig),\
				sfreqScale,sfreqOffset,stimeScale\
			).squared.fold2(foldAt)		\
\},[\
	\cf3 nil\cf0 ,\
	[0.01,100],\
	[0,10000],\
	[0.01,100]\
]);\
\
a =	\cf3 Array\cf0 .fill(5,\{ \cf3 arg\cf0  i;\
		\cf3 Patch\cf0 .new([\cf2 \\klankperc\cf0 ,\cf2 \\k2a\cf0 ],\
		[\
			\cf3 BeatClockPlayer\cf0 (16),\
			i * (3.midiratio),\
			i * (3.midiratio),\
			1.0,\
			0.1\
		]);\
	\});\
\
	pool = \cf3 PlayerPool\cf0 ( a,\
			env: \cf3 Env\cf0 .asr(0.01,releaseTime: 0.001),\
			round: 0.25);\
			\
	pool.play;\
	\
	Routine(\{\
		loop \{\
			0.05.wait;\
			pool.select(a.size.rand.debug("selecting:"));\
		\}\
	\}).play(AppClock);\
	\
)\
\
}