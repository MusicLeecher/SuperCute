{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green0\blue191;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 AppClock
\f1\b0 \
\
superclass: Clock\

\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 SystemClock is more accurate, but cannot call Cocoa primitives.\
AppClock is less accurate (uses NSTimers) but can call Cocoa primitives.\
\
You will need to use the SystemClock to get accurate/musical scheduling.\

\f2\fs18 \
\
\

\f0\b\fs24 *sched(delta,task)\

\f1\b0 \cf2 	the float you return specifies the delta to resched the function for\

\f2\fs18 \
\cf3 		AppClock\cf2 .sched(0.0,\{ arg time; \
				\cf4 ["AppClock has been playing for ",time]\cf2 .postln; \
				rrand(0.1,0.9) \
		\});\
\

\f1\fs24 \cf0 	returning \cf5 nil\cf0  will stop the task from being rescheduled\

\f2\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 		AppClock\cf0 .sched(2.0,\{ \
			\cf6 "2.0 seconds later"\cf0 .postln; \
			\cf5 nil\cf0  \
		\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \

\f0\b\fs24 *clear\

\f1\b0 	clear the AppClock's scheduler to stop it\

\f2\fs18 \cf3 \
	AppClock\cf2 .clear\
\

\f0\b\fs24 \cf0 *play(task)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	
\f1\b0 The task/Routine yields a float value indicating the delta (secs) for the AppClock to wait\
	until resuming the Routine.
\f2\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	(\
	\cf5 var\cf0  w, r;\
	w = \cf5 SCWindow\cf0 (\cf6 "trem"\cf0 , \cf5 Rect\cf0 (512, 256, 360, 130));\
	w.front;\
	r = \cf5 Routine\cf0 (\{ arg appClockTime;\
			["AppClock has been playing for secs:",appClockTime].postln;\
			60.do(\{ \cf5 arg\cf0  i;\
				0.05.yield;\
				w.bounds = w.bounds.moveBy(10.rand2, 10.rand2);\
				w.alpha = cos(i*0.1pi)*0.5+0.5;\
			\});\
			1.yield;\
			w.close;\
	\});\
	\cf5 AppClock\cf0 .play(r);\
	)\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 *tick\

\f1\b0 	AppClock.tick is called periodically by the SuperCollider application itself.\
	This updates the Scheduler and causes any scheduled tasks to be executed.  You\
	should never call this method yourself.\
\
\
}