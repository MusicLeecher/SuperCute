{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 SynthDef
\f1\b0\fs24 \
\
Evaluates a UGen function, generating a ugenGraph that describes \
the exact architecture of a Synth.  \
\
All constants, Controls, and UGens that will be used in synthesis are \
formatted for the Server and written to disk.  \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 SynthDef(synthDefName,ugenGraphFunc)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	Create a synthDef instance, evaluate the ugenGraphFunc and build the ugenGraph.\
\
	Argument names that begin with "i_" will be static and non-modulatable.\
		they will not respond to /n_set or /n_map.\
	Other arguments are all Float inputs, representing either values or bus indices\
		for use in In or Out.\
	Functions inside of a SynthDef are evaluated only at the time of building \
		the ugenGraph.  Once the graph is built, it is a fixed architecture.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 \
name
\f1\b0 \
	return my name.\
	a SynthDef is always referred to by its name, which should be unique.\

\f0\b \
writeDefFile
\f1\b0 \
	encode the graph into a file synthdefs/name.scsyndef\
\

\f0\b load(server, completionMessage, dir)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	write the defFile and send a message to the server to load this file.\
	when this asynchronous command is completed, the completionMessage is evaluated\
	default for dir is synthdefs/\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 send(server, completionMessage)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	compile the def and send it to the server without writing to disk.\
	(thus avoiding that annoying SynthDef buildup)\
	when this asynchronous command is completed, the completionMessage is evaluated\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 play(target, args, addAction)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	write the defFile and send a message to the server to load this file.\
	when this asynchronous command is completed, play one synth from this definition.\
	returns a synth object:\
	\
	
\f2\fs18 (
\f1\fs24 \
	
\f2\fs18 x = \cf2 SynthDef\cf0 (\cf3 "Help-SynthDef"\cf0 , \
		\{ \cf2 arg\cf0  out=0;\
			 \cf2 Out\cf0 .ar(out, \cf2 PinkNoise\cf0 .ar(0.1))\
		\}).play;\
	)\
		\
	x.set(\cf4 \\out\cf0 , 1);\
	x.free;
\f1\fs24 \
}