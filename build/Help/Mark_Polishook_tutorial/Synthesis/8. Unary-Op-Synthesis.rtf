{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red191\green0\blue0;
\red0\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 8.\
\
One, single UGen
\f1\b0\fs18 \
\
The simplest synthesis processes are those that run a single ugen.\
\
\{ \cf2 Saw\cf0 .ar(500, 0.1) \}.scope;\
\
or\
\
\{ \cf2 Formlet\cf0 .ar(\cf2 Saw\cf0 .ar(22), 400, 0.01, 0.11, 0.022) \}.scope\
\
Most of the SuperCollider help documents for the various UGens show other such examples.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 Multi-channel expansion\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
Expand a ugen to 2 channels with an array in any of the argument (control) slots.\
\
\{ \cf2 Saw\cf0 .ar([500, 933], 0.1) \}.scope;\
\
Another (longer) way to write the same thing is \
\
\{ [ \cf2 Saw\cf0 .ar(500, 0.1), \cf2 Saw\cf0 .ar(933, 0.1)] \}.scope;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 Exploring UnaryOpUGens
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 \
Many synthesis processes can be created by sending a message to a ugen. Help files for many unary operations can be found in the SuperCollider help system in the UnaryOps folder.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
Compare\
\
\{ \cf2 SinOsc\cf0 .ar(500, 0, 0.5) \}.scope;\
\
to\
\
\{ \cf2 SinOsc\cf0 .ar(500, 0, 0.5).distort \}.scope;\
\
The .distort message - a message sent to a ugen - is a unary operation. You can hear how the .distort message modulates the output of the SinOsc ugen; it makes more partials.\
\
\cf3 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
Q: Where does the .distort message come from?\
\
A: It's defined in the AbstractFunction class. The UGen class is a subclass of AbstractFunction. In theory, any method defined in AbstractFunction works can be applied to a ugen\
\
Compare\
\
\{ \cf2 SinOsc\cf0 .ar(500, 0, 0.5) \}.scope;\
\
to\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 // .cubed is a unary operation\cf5 \
\cf0 \{ \cf2 SinOsc\cf0 .ar(500, 0, 0.5).cubed \}.scope;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 ////////////////////////////////////////////////////////////////////////////////////////////////////\
}