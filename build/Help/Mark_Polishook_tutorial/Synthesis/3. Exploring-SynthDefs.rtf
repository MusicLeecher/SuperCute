{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 3.\
\
SynthDefs have 2 essential parts
\f1\b0\fs18 \
\
SynthDefs are the class that we use in SuperCollider to build engines for our synthesizers.\
\
SynthDefs have 2 essential parts: a name and its function. In SuperCollider terminology, the function is often called a ugenGraphFunc.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
The term ugenGraphFunc comes from the idea that the function that describes unit generators is in the form of a graph, which is a kind of data structure. SuperCollider constructs the graph for you, based upon the code it finds in the function. This means that you don't have to know, specifically, how the notion of a graph works in order to use one.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
But, for further context about graphs, a discussion of graphs at http://www.nist.gov/dads/HTML/graph.html says:\
 \
"A graph is like a road map. Cities are vertices. Roads from city to city are edges. (How about junctions or branches in a road? You could consider junctions to be vertices, too. If you don't want to count them as vertices, a road may connect more than two cities. So strictly speaking you have hyperedges in a hypergroup. If you want to allow more than one road between each pair of cities, you have a multigraph, instead. It all depends on how you want to define it.)\
\
Another way to think of a graph is as a bunch of dots connected by lines. Because mathematicians stopped talking to regular people long ago, the dots in a graph are called vertices, and the lines that connect the dots are called edges. The important things are edges and the vertices: the dots and the connections between them. The actual position of a given dot or the length or straightness of a given line isn't at issue. Thus the dots can be anywhere, and the lines that join them are infinitely stretchy. Moreover, a mathematical graph is not a comparison chart, nor a diagram with an x- and y-axis, nor a squiggly line on a stock report. A graph is simply dots and lines between them---pardon me, vertices and edges."\
\
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
\cf2 // a template for a synthdef ... with pseudo-code\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\
	\cf4 "i am a synthdef"\cf0 ,					\cf2 // the 1st argument is the name\cf0 \
	\{ .... i am a ugenGraphFunc ... \}	\cf2 // the 2nd argument is the ugenGraphFunc\cf0 \
)\
\
The next few lines of code show the template with actual SuperCollider code. The 1st argument to the synthdef is a name and the 2nd argument is function.\
\
(\
\cf3 SynthDef\cf0 (\
	\cf4 "aSynthDef"\cf0 , 						\cf2 // the name of the synthdef\cf0 \
	\{ 								\cf2 // the ugenGraphFunc\cf0 \
		\cf3 arg\cf0  freq;\
		\cf3 Out\cf0 .ar(\
			0,\
			\cf3 SinOsc\cf0 .ar(freq, 0, 0.1)\
		)\
	\}\
).load(s);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \

\f0\b\fs24 The SynthDef browser\

\f1\b0\fs18 \
A ugenGraphFunc in a synthdef typically contains a few important components such as ugens, controls, inputs, and outputs. \
\
To see a representation of such things in a browser window, evaluate\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 (\
SynthDescLib\cf0 .global.read;\
\cf3 SynthDescLib\cf0 .global.browse;\
)\
\
The browser window made by this code contain six boxes that show the names of all previously-defined synthsdefs. Each name can be selected to show the ugens, the controls, and inputs and outputs in the ugenGraphFunc associated with it.\
\
A previously-defined synthdef is one to which a .load message was sent at one time or another. SuperCollider reads all previously-loaded synthdefs when it starts up. \
\
The .load message writes the synthdef to disk and sends it to an active server - as opposed to a .send message, which transmits the synthdef across a network to a server without first writing the definition to disk. \
\
BREAKING NEWS! - In the very recent past, a new message, .store, has been defined. The .store message is preferable in some circumstances to .load or .send because, in addition to writing the synthdef to disk, it also puts it, explicitly into a library can be accessed by synthdef browser windows and/or the SuperCollider pattern classes.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \

\f0\b\fs24 The components in the ugenGraphFunc
\f2\b0 \

\f1\fs18 \
The SynthDef browser shows that the synthdef just defined above - "aSynthDef" - consists of 4 ugens, 1 control, no inputs, and 1 output.\
\
The 4 ugens shown in the browser, include instances of Control, SinOsc, BinaryOpUGen, and Out classes. In this example, SuperCollider installs the instances of the Control and the BinaryOpUGen to make the SynthDef fully functional. All other ugens exist only if you specify them.\
\
The 1 control in the synthdef is "freq", an argument that a synth can use when it is created or at any time while it (the synth) exists on the server. The browser shows that "aSynth" has no inputs. This means that the synthdef doesn't use instances of the In class. \
\
The browser also shows that the synthdef specifies 1 channel of ouput - on channel 0.\
\
Examine other synthdefs as shown in the browser window to see how they're constructed.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////}