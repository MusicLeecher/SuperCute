{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 1.\
\
Synthesis and scheduling are 2 separate processes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
The first thing to know about SuperCollider is that it uses a client server model. What this means is that we write programs in the SuperCollider language that define synthesis processes. Assuming that the programs we wrote are correct, the server then does what it is told. It processes audio and synthesizes sound.\
 \
The client/server model makes it very easy to separate the definition of synthesis and the scheduling of synthesis into two distinct parts. Dividing synthesis definition from synthesis scheduling has advantages.\
\
For example, you can use SuperCollider 3 to schedule MIDI, or to write and read sound files to disk without having to run a synthesis process at the same time. \
\
Separating scheduling from synthesis creates a paradigm that is analogous to the separation of data and the functions in computer programs. Such models usually make it easier to conceptualize and write  programs. \
\
The client/server architecture of SuperCollider 3 also creates a distributed, networked model of computing. Client/server architecture implies that computers across a network can communicate and work together with ease.\
\
The idea of networking is a theme to which I'll return throughout my lectures this weekend. In my opinion, using computers to network, either locally, or remotely, at a distance, provides a new model for creativity and artistry. It's a way of doing things that we, as artists and scientists of media, should study carefully.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\
To summarize, SuperCollider 3 is a program for defining synthesis processes in a client and running the definitions on a server.\
\
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\cf2 // EXAMPLE 1\
// define a simple synthesis process and schedule one synthesis event (on one machine)\cf0 \
\cf2 ////////////\cf0 \
\
\cf2 // 1st, define a server\cf0 \
s = \cf3 Server\cf0 (\cf4 "thisMachine"\cf0 , \cf3 NetAddr\cf0 (\cf4 "localhost"\cf0 , 57110));	\cf2 // "localhost" is a synonym for an ip of 												// "127.0.0.1"\cf0 \
\cf2 // 2nd, define a synthesis engine\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "sine"\cf0 , \{ \cf3 Out\cf0 .ar(0, \cf3 SinOsc\cf0 .ar(440, 0, 0.2)) \}).send(s);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // 3rd, schedule (run) synthesis\cf0 \
s.sendMsg(\cf4 "s_new"\cf0 , \cf4 "sine"\cf0 , 1000, 1, 0);\
\
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
\cf2 // EXAMPLE 2\cf0 \
\cf2 // the same process as in example 1, except on 2 computers that communicate across a network\cf0 \
\cf2 ////////////\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // To set up a remote network, use\cf0 \
\
\cf2 // 1st, define a server ... a computer located "somewhere" on the internet"\cf0 \
\cf2 // this example won't run without a 2nd computer with a valid ip address ...\
// the 2nd computer must have a server already up and running ...\cf0 \
s = \cf3 Server\cf0 (\cf4 "thisMachine"\cf0 , \cf3 NetAddr\cf0 (\cf4 "... an ip number ..."\cf0 , 57110));\
\
\cf2 // 2nd, define a synthesis process ... exactly the same as step 2 in the previous example\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "sine"\cf0 , \{ \cf3 Out\cf0 .ar(0, \cf3 SinOsc\cf0 .ar(440, 0, 0.2)) \}).send(s);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // 3rd, schedule a synthesis process .... exactly the same as step 3 in the previous example\cf0 \
s.sendMsg(\cf4 "s_new"\cf0 , \cf4 "sine"\cf0 , 1000, 1, 0);\
\
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
The following code, taken from the previous two examples, shows that the only difference between working with a local and a remote server is the different ip address one supplies as an argument to a server object.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // a local server\cf0 \
s = \cf3 Server\cf0 (\cf4 "thisMachine"\cf0 , \cf3 NetAddr\cf0 (\cf4 "localhost"\cf0 , 57110));	 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "sine"\cf0 , \{ \cf3 Out\cf0 .ar(0, \cf3 SinOsc\cf0 .ar(440, 0, 0.2)) \}).send(s);\
s.sendMsg(\cf4 "s_new"\cf0 , \cf4 "sine"\cf0 , 1000, 1, 0);\
\
vs.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // a remote server\cf0 \
s = \cf3 Server\cf0 (\cf4 "thisMachine"\cf0 , \cf3 NetAddr\cf0 (\cf4 "... an ip number ..."\cf0 , 57110));\
\cf2 // be sure to boot the server on the remote machine before evaluating this line\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "sine"\cf0 , \{ \cf3 Out\cf0 .ar(0, \cf3 SinOsc\cf0 .ar(440, 0, 0.2)) \}).send(s);\
s.sendMsg(\cf4 "s_new"\cf0 , \cf4 "sine"\cf0 , 1000, 1, 0);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 ////////////////////////////////////////////////////////////////////////////////////////////////////\cf0 \
}