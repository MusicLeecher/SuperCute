{\rtf1\mac\ansicpg10000\cocoartf100
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 // clocks for timing threads.\
\cf0 \
\cf3 Clock\cf0  \{\
	\cf2 // abstract class\
\cf0 	*play \{ \cf3 arg\cf0  task;\
		\cf3 this\cf0 .sched(task.value(\cf3 thisThread\cf0 .time), task)\
	\}\
\}\
\
\cf3 SystemClock\cf0  : \cf3 Clock\cf0  \{\
	*clear \{\
		\cf3 _SystemClock_Clear\cf0 \
		^\cf3 this\cf0 .primitiveFailed\
	\}\
	*sched \{ \cf3 arg\cf0  delta, item;\
		\cf3 _SystemClock_Sched\cf0 \
		^\cf3 this\cf0 .primitiveFailed\
	\}\
	*schedAbs \{ \cf3 arg\cf0  time, item;\
		\cf3 _SystemClock_SchedAbs\cf0 \
		^\cf3 this\cf0 .primitiveFailed\
	\}\
\}\
\
\cf3 AppClock\cf0  : \cf3 Clock\cf0  \{\
	\cf3 classvar\cf0  scheduler;\
	*initClass \{\
		scheduler = \cf3 Scheduler\cf0 .new(\cf3 true\cf0 );\
	\}\
	*sched \{ \cf3 arg\cf0  delta, item;\
		scheduler.sched(delta, item)\
	\}\
	*tick \{\
		scheduler.time = \cf3 Main\cf0 .elapsedTime;\
	\}\
	*clear \{\
		scheduler.clear;\
	\}\
\}\
\
\
\cf3 Scheduler\cf0  \{\
	\cf3 var\cf0  drift, time = 0.0, queue;\
	\
	*new \{ \cf3 arg\cf0  drift = \cf3 false\cf0 ;\
		^\cf3 super\cf0 .newCopyArgs(drift).init;\
	\}\
	init \{\
		time = \cf3 thisThread\cf0 .time;\
		queue = \cf3 PriorityQueue\cf0 .new;\
	\}\
\
	play \{ \cf3 arg\cf0  task;\
		\cf3 this\cf0 .sched(task.value(\cf3 thisThread\cf0 .time), task)\
	\}\
\
	sched \{ \cf3 arg\cf0  delta, item;\
		\cf3 var\cf0  fromTime;\
		if (delta.notNil, \{ \
			fromTime = if (drift, \{ \cf3 Main\cf0 .elapsedTime \},\{ time \});\
			queue.put(fromTime + delta, item);\
		\});\
	\}\
	clear \{ queue.clear \}\
	advance \{ \cf3 arg\cf0  delta;\
		\cf3 this\cf0 .time = time + delta;\
	\}\
	\
	time_ \{ \cf3 arg\cf0  newTime;\
		\cf3 var\cf0  delta, item;\
		while (\{ \
			time = queue.topPriority; \
			time.notNil and: \{ time <= newTime \}\
		\},\{ \
			item = queue.pop;\
			delta = item.awake( time );\
			\cf3 this\cf0 .sched(delta, item); \
		\});\
		time = newTime;\
	\}\
\}\
\
}