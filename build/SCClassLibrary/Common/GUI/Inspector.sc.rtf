{\rtf1\mac\ansicpg10000\cocoartf100
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 Inspector\cf3  \{\
	\cf2 classvar\cf3  <allInspectors;\
	\
	\cf2 var\cf3  <object, <window, vpos=0;\
	\
	*new \{ \cf2 arg\cf3  object;\
		var \cf0 inspector;\
		inspector = \cf4 this\cf0 .inspectorFor(object);\cf3 \
		if (\cf0 inspector\cf3 .isNil, \{ \
			\cf0 inspector = \cf2 super\cf3 .newCopyArgs(object).init\
		\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 		inspector.window.front; \
		^inspector \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 	\}\
	*inspectorFor \{ \cf2 arg\cf3  object;\
		\cf2 var\cf3  inspector;\
		allInspectors.notNil.if(\{\
			inspector = allInspectors.detect(\{ \cf2 arg\cf3  item;\
				item.object === object\
			\});\
		\});\
		^inspector\
	\}\
	closed \{\
		allInspectors.remove(\cf2 this\cf3 );\
	\}\
	lineHeight \{ ^28 \}\
	makeWindow \{\
		\cf2 var\cf3  bounds;\
		bounds = \cf2 Rect\cf3 (80, 80, 376, \cf2 this\cf3 .lineHeight * (\cf2 this\cf3 .numLines + 1) + 16);\
\
		window = \cf2 SCWindow\cf3 (object.class.name.asString ++ \cf5 " inspector"\cf3 , bounds);\
		window.onClose = \cf2 Message\cf3 (\cf2 this\cf3 , \cf6 \\closed\cf3 );\
	\}\
\}\
\
\cf2 ObjectInspector\cf3  : \cf2 Inspector\cf3  \{\
	\
	\cf2 var\cf3  stringView, slotInspectors;\
	\
	numLines \{\
		^min(20, object.slotSize); \cf7 // don't display too many lines\
\cf3 	\}\
	\
	init \{		\
		allInspectors = allInspectors.add(\cf2 this\cf3 );\
						\
		\cf2 this\cf3 .makeWindow;\
		\
		vpos = 4;\
		\
		\cf2 this\cf3 .makeHead;\
		\
		\cf2 this\cf3 .makeBody;\
				\
		window.refresh;\
	\}\
	\
	makeHead \{\
		\cf2 var\cf3  view;\
		view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (8, vpos, 128, 24));\
		view.states = [[object.class.name]];\
		view.action = \cf2 Message\cf3 (object.class, \cf6 \\inspect\cf3 );\
		\
		if (object.mutable, \{\
			view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (140, vpos, 50, 24));\
			view.states = [[\cf5 "update"\cf3 ]];\
			view.action = \cf2 Message\cf3 (\cf2 this\cf3 , \cf6 \\update\cf3 );\
		\});\
		\
		view = \cf2 SCDragSource\cf3 (window, \cf2 Rect\cf3 (194, vpos, 174, 24));\
		view.object = object;\
		view.resize = 2;\
		stringView = view;\
		\
		vpos = vpos + \cf2 this\cf3 .lineHeight;\
	\}\
	\
	makeBody \{\
		\cf2 this\cf3 .numLines.do(\{ \cf2 arg\cf3  i;\
			slotInspectors = slotInspectors.add(\
				\cf2 SlotInspector\cf3 (\cf2 this\cf3 , i, vpos)\
			);			\
			vpos = vpos + \cf2 this\cf3 .lineHeight;\
		\});\
	\}\
	\
	update \{\
		stringView.object = object;\
		slotInspectors.do(\{ \cf2 arg\cf3  slotinsp;\
			slotinsp.update;\
		\});\
	\}\
\}\
\
\cf2 StringInspector\cf3  : \cf2 ObjectInspector\cf3  \{\
	\cf7 // don't bother with the array of Chars.\
\cf3 	numLines \{ ^0 \}\
\}\
\
\cf2 ClassInspector\cf3  : \cf2 ObjectInspector\cf3  \{\
	makeHead \{\
		\cf2 var\cf3  view;\
		view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (8, vpos, 128, 24));\
		view.states = [[object.class.name]];\
		view.action = \cf2 Message\cf3 (object.class, \cf6 \\inspect\cf3 );\
		\
		view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (140, vpos, 50, 24));\
		view.states = [[\cf5 "edit"\cf3 ]];\
		view.action = \cf2 Message\cf3 (object, \cf6 \\openCodeFile\cf3 );\
		\
		if (object.superclass.notNil, \{\
			view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (194, vpos, 70, 24));\
			view.states = [[\cf5 "superclass"\cf3 ]];\
			view.action = \cf2 Message\cf3 (object.superclass, \cf6 \\inspect\cf3 );\
		\});\
		\
		view = \cf2 SCDragSource\cf3 (window, \cf2 Rect\cf3 (268, vpos, 96, 24));\
		view.object = object;\
		view.resize = 2;\
		stringView = view;\
		\
		vpos = vpos + \cf2 this\cf3 .lineHeight;\
	\}\
\
\}\
\
\cf2 FunctionDefInspector\cf3  : \cf2 ObjectInspector\cf3  \{\
	openSuper \{\
		object.superclass.inspect;\
	\}\
	makeHead \{\
		\cf2 var\cf3  view;\
		view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (8, vpos, 128, 24));\
		view.states = [[object.class.name]];\
		view.action = \cf2 Message\cf3 (object.class, \cf6 \\inspect\cf3 );\
				\
		if (object.code.notNil, \{\
			view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (194, vpos, 70, 24));\
			view.states = [[\cf5 "dump code"\cf3 ]];\
			view.action = \cf2 Message\cf3 (object, \cf6 \\dumpByteCodes\cf3 );\
		\});\
		\
		view = \cf2 SCDragSource\cf3 (window, \cf2 Rect\cf3 (268, vpos, 96, 24));\
		view.object = object;\
		view.resize = 2;\
		stringView = view;\
		\
		vpos = vpos + \cf2 this\cf3 .lineHeight;\
	\}\
\}\
\
\cf2 MethodInspector\cf3  : \cf2 ObjectInspector\cf3  \{\
	openSuper \{\
		object.superclass.inspect;\
	\}\
	makeHead \{\
		\cf2 var\cf3  view;\
		view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (8, vpos, 128, 24));\
		view.states = [[object.class.name]];\
		view.action = \cf2 Message\cf3 (object.class, \cf6 \\inspect\cf3 );\
		\
		view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (140, vpos, 50, 24));\
		view.states = [[\cf5 "edit"\cf3 ]];\
		view.action = \cf2 Message\cf3 (object, \cf6 \\openCodeFile\cf3 );\
		\
		if (object.code.notNil, \{\
			view = \cf2 SCButton\cf3 (window, \cf2 Rect\cf3 (194, vpos, 70, 24));\
			view.states = [[\cf5 "dump code"\cf3 ]];\
			view.action = \cf2 Message\cf3 (object, \cf6 \\dumpByteCodes\cf3 );\
		\});\
		\
		view = \cf2 SCDragSource\cf3 (window, \cf2 Rect\cf3 (268, vpos, 96, 24));\
		view.object = object;\
		view.resize = 2;\
		stringView = view;\
		\
		vpos = vpos + \cf2 this\cf3 .lineHeight;\
	\}\
\}\
\
\cf2 SlotInspector\cf3  \{\
	\cf2 var\cf3  <object, <>index, <key, <slotKeyView, <slotValueView, <inspectButton;\
	\
	*new \{ \cf2 arg\cf3  inspector, index, vpos;\
		^\cf2 super\cf3 .newCopyArgs(inspector.object, index).init(inspector, vpos)\
	\}\
	init \{ \cf2 arg\cf3  inspector, vpos;\
		\cf2 var\cf3  w, class, hasGetter, hasSetter, vbounds, value;\
		\
		w = inspector.window;\
		key = object.slotKey(index);\
		class = object.class;\
		\
		slotKeyView = \cf2 SCStaticText\cf3 (w, \cf2 Rect\cf3 (8, vpos, 110, 24));\
		slotKeyView.align = \cf6 \\right\cf3 ;\
		\
		if (key.isKindOf(\cf2 Symbol\cf3 ), \{\
			hasGetter = class.findMethod(key).notNil;\
			hasSetter = class.findMethod(key.asSetter).notNil && object.mutable;\
		\},\{\
			hasGetter = \cf2 true\cf3 ;\
			hasSetter = object.mutable;\
		\});\
		vbounds = \cf2 Rect\cf3 (122, vpos, 218, 24);\
		if (hasSetter, \{\
			if (hasGetter, \{\
				slotValueView = \cf2 SCDragBoth\cf3 (w, vbounds);\
			\},\{\
				slotValueView = \cf2 SCDragSink\cf3 (w, vbounds);\
			\});\
			slotValueView.action = \cf2 Message\cf3 (\cf2 this\cf3 , \cf6 \\setSlot\cf3 );\
		\},\{\
			if (hasGetter, \{\
				slotValueView = \cf2 SCDragSource\cf3 (w, vbounds);\
			\},\{\
				slotValueView = \cf2 SCStaticText\cf3 (w, vbounds);\
			\});\
		\});\
		slotValueView.resize = 2;\
\
		inspectButton = \cf2 SCButton\cf3 (w, \cf2 Rect\cf3 (344, vpos, 24, 24));\
		inspectButton.states = [[\cf5 "I"\cf3 ]];\
		inspectButton.action = \cf2 Message\cf3 (\cf2 this\cf3 , \cf6 \\inspectSlot\cf3 );\
		inspectButton.resize = 3;\
		inspectButton.visible = object.slotAt(index).canInspect;\
		\cf2 this\cf3 .update;\
	\}\
	update \{\
		key = object.slotKey(index);\
		slotKeyView.string = key;\
		slotValueView.object = object.slotAt(index);\
		inspectButton.visible = object.slotAt(index).canInspect;\
	\}\
	inspectSlot \{\
		object.slotAt(index).inspect;\
	\}\
	setSlot \{\
		if (key.isKindOf(\cf2 Symbol\cf3 ), \{\
			object.perform(key.asSetter, \cf2 SCView\cf3 .currentDrag);\
		\},\{\
			object.put(key, \cf2 SCView\cf3 .currentDrag);\
		\});\
		\cf2 this\cf3 .update;\
	\}\
\}\
\
\
}