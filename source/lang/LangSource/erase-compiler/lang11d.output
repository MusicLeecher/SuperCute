

Terminals which are not used:

   CONST
   BADTOKEN


Conflict in state 67 between rule 66 and token BINOP resolved as reduce.
Conflict in state 67 between rule 66 and token KEYBINOP resolved as reduce.
Conflict in state 67 between rule 66 and token '-' resolved as reduce.
Conflict in state 67 between rule 66 and token '<' resolved as reduce.
Conflict in state 67 between rule 66 and token '>' resolved as reduce.
Conflict in state 67 between rule 66 and token '*' resolved as reduce.
Conflict in state 67 between rule 66 and token '+' resolved as reduce.
Conflict in state 67 between rule 66 and token '|' resolved as reduce.
Conflict in state 67 between rule 66 and token READWRITEVAR resolved as reduce.
Conflict in state 67 between rule 66 and token '.' resolved as reduce.
Conflict in state 154 between rule 67 and token BINOP resolved as reduce.
Conflict in state 154 between rule 67 and token KEYBINOP resolved as reduce.
Conflict in state 154 between rule 67 and token '-' resolved as reduce.
Conflict in state 154 between rule 67 and token '<' resolved as reduce.
Conflict in state 154 between rule 67 and token '>' resolved as reduce.
Conflict in state 154 between rule 67 and token '*' resolved as reduce.
Conflict in state 154 between rule 67 and token '+' resolved as reduce.
Conflict in state 154 between rule 67 and token '|' resolved as reduce.
Conflict in state 154 between rule 67 and token READWRITEVAR resolved as reduce.
Conflict in state 154 between rule 67 and token '.' resolved as shift.
Conflict in state 155 between rule 68 and token BINOP resolved as reduce.
Conflict in state 155 between rule 68 and token KEYBINOP resolved as reduce.
Conflict in state 155 between rule 68 and token '-' resolved as reduce.
Conflict in state 155 between rule 68 and token '<' resolved as reduce.
Conflict in state 155 between rule 68 and token '>' resolved as reduce.
Conflict in state 155 between rule 68 and token '*' resolved as reduce.
Conflict in state 155 between rule 68 and token '+' resolved as reduce.
Conflict in state 155 between rule 68 and token '|' resolved as reduce.
Conflict in state 155 between rule 68 and token READWRITEVAR resolved as reduce.
Conflict in state 155 between rule 68 and token '.' resolved as shift.
Conflict in state 157 between rule 69 and token BINOP resolved as shift.
Conflict in state 157 between rule 69 and token KEYBINOP resolved as shift.
Conflict in state 157 between rule 69 and token '-' resolved as shift.
Conflict in state 157 between rule 69 and token '<' resolved as shift.
Conflict in state 157 between rule 69 and token '>' resolved as shift.
Conflict in state 157 between rule 69 and token '*' resolved as shift.
Conflict in state 157 between rule 69 and token '+' resolved as shift.
Conflict in state 157 between rule 69 and token '|' resolved as shift.
Conflict in state 157 between rule 69 and token READWRITEVAR resolved as shift.
Conflict in state 157 between rule 69 and token '.' resolved as shift.
Conflict in state 192 between rule 70 and token BINOP resolved as shift.
Conflict in state 192 between rule 70 and token KEYBINOP resolved as shift.
Conflict in state 192 between rule 70 and token '-' resolved as shift.
Conflict in state 192 between rule 70 and token '<' resolved as shift.
Conflict in state 192 between rule 70 and token '>' resolved as shift.
Conflict in state 192 between rule 70 and token '*' resolved as shift.
Conflict in state 192 between rule 70 and token '+' resolved as shift.
Conflict in state 192 between rule 70 and token '|' resolved as shift.
Conflict in state 192 between rule 70 and token READWRITEVAR resolved as shift.
Conflict in state 192 between rule 70 and token '.' resolved as shift.
Conflict in state 199 between rule 73 and token BINOP resolved as shift.
Conflict in state 199 between rule 73 and token KEYBINOP resolved as shift.
Conflict in state 199 between rule 73 and token '-' resolved as shift.
Conflict in state 199 between rule 73 and token '<' resolved as shift.
Conflict in state 199 between rule 73 and token '>' resolved as shift.
Conflict in state 199 between rule 73 and token '*' resolved as shift.
Conflict in state 199 between rule 73 and token '+' resolved as shift.
Conflict in state 199 between rule 73 and token '|' resolved as shift.
Conflict in state 199 between rule 73 and token READWRITEVAR resolved as shift.
Conflict in state 199 between rule 73 and token '.' resolved as shift.
Conflict in state 235 between rule 71 and token BINOP resolved as shift.
Conflict in state 235 between rule 71 and token KEYBINOP resolved as shift.
Conflict in state 235 between rule 71 and token '-' resolved as shift.
Conflict in state 235 between rule 71 and token '<' resolved as shift.
Conflict in state 235 between rule 71 and token '>' resolved as shift.
Conflict in state 235 between rule 71 and token '*' resolved as shift.
Conflict in state 235 between rule 71 and token '+' resolved as shift.
Conflict in state 235 between rule 71 and token '|' resolved as shift.
Conflict in state 235 between rule 71 and token READWRITEVAR resolved as shift.
Conflict in state 235 between rule 71 and token '.' resolved as shift.
Conflict in state 260 between rule 74 and token BINOP resolved as shift.
Conflict in state 260 between rule 74 and token KEYBINOP resolved as shift.
Conflict in state 260 between rule 74 and token '-' resolved as shift.
Conflict in state 260 between rule 74 and token '<' resolved as shift.
Conflict in state 260 between rule 74 and token '>' resolved as shift.
Conflict in state 260 between rule 74 and token '*' resolved as shift.
Conflict in state 260 between rule 74 and token '+' resolved as shift.
Conflict in state 260 between rule 74 and token '|' resolved as shift.
Conflict in state 260 between rule 74 and token READWRITEVAR resolved as shift.
Conflict in state 260 between rule 74 and token '.' resolved as shift.
Conflict in state 279 between rule 72 and token BINOP resolved as shift.
Conflict in state 279 between rule 72 and token KEYBINOP resolved as shift.
Conflict in state 279 between rule 72 and token '-' resolved as shift.
Conflict in state 279 between rule 72 and token '<' resolved as shift.
Conflict in state 279 between rule 72 and token '>' resolved as shift.
Conflict in state 279 between rule 72 and token '*' resolved as shift.
Conflict in state 279 between rule 72 and token '+' resolved as shift.
Conflict in state 279 between rule 72 and token '|' resolved as shift.
Conflict in state 279 between rule 72 and token READWRITEVAR resolved as shift.
Conflict in state 279 between rule 72 and token '.' resolved as shift.

Grammar
rule 1    root -> classes
rule 2    root -> classextensions
rule 3    root -> INTERPRET cmdlinecode
rule 4    classes ->		/* empty */
rule 5    classes -> classes classdef
rule 6    classextensions -> classextension
rule 7    classextensions -> classextensions classextension
rule 8    classdef -> classname superclass '{' classvardecls methods '}'
rule 9    classdef -> classname '[' optname ']' superclass '{' classvardecls methods '}'
rule 10   classextension -> '+' classname '{' methods '}'
rule 11   optname ->		/* empty */
rule 12   optname -> name
rule 13   superclass ->		/* empty */
rule 14   superclass -> ':' classname
rule 15   classvardecls ->		/* empty */
rule 16   classvardecls -> classvardecls classvardecl
rule 17   classvardecl -> CLASSVAR rwslotdeflist ';'
rule 18   classvardecl -> VAR rwslotdeflist ';'
rule 19   methods ->		/* empty */
rule 20   methods -> methods methoddef
rule 21   methoddef -> name '{' argdecls funcvardecls primitive methbody '}'
rule 22   methoddef -> '*' name '{' argdecls funcvardecls primitive methbody '}'
rule 23   methoddef -> binop '{' argdecls funcvardecls primitive methbody '}'
rule 24   methoddef -> '*' binop '{' argdecls funcvardecls primitive methbody '}'
rule 25   optsemi ->		/* empty */
rule 26   optsemi -> ';'
rule 27   optcomma ->		/* empty */
rule 28   optcomma -> ','
rule 29   funcbody -> funretval
rule 30   funcbody -> exprseq funretval
rule 31   cmdlinecode -> '(' funcvardecls1 funcbody ')'
rule 32   cmdlinecode -> funcvardecls1 funcbody
rule 33   cmdlinecode -> funcbody
rule 34   methbody -> retval
rule 35   methbody -> exprseq retval
rule 36   primitive ->		/* empty */
rule 37   primitive -> primname optsemi
rule 38   retval ->		/* empty */
rule 39   retval -> '^' expr optsemi
rule 40   funretval ->		/* empty */
rule 41   funretval -> '^' expr optsemi
rule 42   blocklist1 -> blockliteral
rule 43   blocklist1 -> blocklist1 blockliteral
rule 44   blocklist ->		/* empty */
rule 45   blocklist -> blocklist1
rule 46   msgsend -> name blocklist1
rule 47   msgsend -> name '(' arglist1 optkeyarglist ')' blocklist
rule 48   msgsend -> expr '.' '(' keyarglist1 ')' blocklist
rule 49   msgsend -> expr '.' name '(' keyarglist1 ')' blocklist
rule 50   msgsend -> expr '.' '(' arglist1 optkeyarglist ')' blocklist
rule 51   msgsend -> expr '.' name '(' arglist1 optkeyarglist ')' blocklist
rule 52   msgsend -> expr '.' name blocklist
rule 53   expr -> msgsend
rule 54   expr -> pushliteral
rule 55   expr -> blockliteral
rule 56   expr -> name
rule 57   expr -> name '[' arglist1 ']'
rule 58   expr -> '(' exprseq ')'
rule 59   expr -> '~' name
rule 60   expr -> '[' arglistc ']'
rule 61   expr -> classname '[' arglistc ']'
rule 62   expr -> pseudovar
rule 63   expr -> classname
rule 64   expr -> classname '(' keyarglist1 ')'
rule 65   expr -> classname '(' arglist1 optkeyarglist ')'
rule 66   expr -> '`' expr
rule 67   expr -> expr binop expr
rule 68   expr -> expr keybinop expr
rule 69   expr -> name '=' expr
rule 70   expr -> '~' name '=' expr
rule 71   expr -> expr '.' name '=' expr
rule 72   expr -> name '(' arglist1 optkeyarglist ')' '=' expr
rule 73   expr -> '#' mavars '=' expr
rule 74   expr -> name '[' arglist1 ']' '=' expr
rule 75   exprn -> expr
rule 76   exprn -> exprn ';' expr
rule 77   exprseq -> exprn optsemi
rule 78   arglistc ->		/* empty */
rule 79   arglistc -> arglist1 optcomma
rule 80   arglist1 -> exprseq
rule 81   arglist1 -> arglist1 ',' exprseq
rule 82   keyarglist1 -> keyarg
rule 83   keyarglist1 -> keyarglist1 ',' keyarg
rule 84   keyarg -> keybinop exprseq
rule 85   optkeyarglist ->		/* empty */
rule 86   optkeyarglist -> ',' keyarglist1
rule 87   mavars -> mavarlist
rule 88   mavars -> mavarlist ELLIPSIS name
rule 89   mavarlist -> name
rule 90   mavarlist -> mavarlist ',' name
rule 91   slotliteral -> integer
rule 92   slotliteral -> floatp
rule 93   slotliteral -> ascii
rule 94   slotliteral -> string
rule 95   slotliteral -> symbol
rule 96   slotliteral -> trueobj
rule 97   slotliteral -> falseobj
rule 98   slotliteral -> nilobj
rule 99   slotliteral -> infobj
rule 100  slotliteral -> listlit
rule 101  blockliteral -> block
rule 102  pushliteral -> integer
rule 103  pushliteral -> floatp
rule 104  pushliteral -> ascii
rule 105  pushliteral -> string
rule 106  pushliteral -> symbol
rule 107  pushliteral -> trueobj
rule 108  pushliteral -> falseobj
rule 109  pushliteral -> nilobj
rule 110  pushliteral -> infobj
rule 111  pushliteral -> listlit
rule 112  listliteral -> integer
rule 113  listliteral -> floatp
rule 114  listliteral -> ascii
rule 115  listliteral -> string
rule 116  listliteral -> symbol
rule 117  listliteral -> trueobj
rule 118  listliteral -> falseobj
rule 119  listliteral -> nilobj
rule 120  listliteral -> infobj
rule 121  listliteral -> listlit2
rule 122  block -> '{' argdecls funcvardecls funcbody '}'
rule 123  block -> '#' '{' argdecls funcvardecls funcbody '}'
rule 124  funcvardecls ->		/* empty */
rule 125  funcvardecls -> funcvardecls funcvardecl
rule 126  funcvardecls1 -> funcvardecl
rule 127  funcvardecls1 -> funcvardecls1 funcvardecl
rule 128  funcvardecl -> VAR slotdeflist ';'
rule 129  argdecls ->		/* empty */
rule 130  argdecls -> ARG slotdeflist ';'
rule 131  argdecls -> ARG slotdeflist0 ELLIPSIS name ';'
rule 132  argdecls -> '|' slotdeflist '|'
rule 133  argdecls -> '|' slotdeflist0 ELLIPSIS name '|'
rule 134  slotdeflist0 ->		/* empty */
rule 135  slotdeflist0 -> slotdeflist
rule 136  slotdeflist -> slotdef
rule 137  slotdeflist -> slotdeflist ',' slotdef
rule 138  slotdef -> name
rule 139  slotdef -> name '=' slotliteral
rule 140  rwslotdeflist -> rwslotdef
rule 141  rwslotdeflist -> rwslotdeflist ',' rwslotdef
rule 142  rwslotdef -> rwspec name
rule 143  rwslotdef -> rwspec name '=' slotliteral
rule 144  listlit -> '#' '[' literallistc ']'
rule 145  listlit -> '#' classname '[' literallistc ']'
rule 146  listlit2 -> '[' literallistc ']'
rule 147  listlit2 -> classname '[' literallistc ']'
rule 148  literallistc ->		/* empty */
rule 149  literallistc -> literallist1 optcomma
rule 150  literallist1 -> listliteral
rule 151  literallist1 -> literallist1 ',' listliteral
rule 152  rwspec ->		/* empty */
rule 153  rwspec -> '<'
rule 154  rwspec -> READWRITEVAR
rule 155  rwspec -> '>'
rule 156  integer -> INTEGER
rule 157  integer -> '-' INTEGER
rule 158  floatr -> FLOAT
rule 159  floatr -> '-' FLOAT
rule 160  pie -> PIE
rule 161  floatp -> floatr
rule 162  floatp -> floatr pie
rule 163  floatp -> integer pie
rule 164  floatp -> pie
rule 165  floatp -> '-' pie
rule 166  name -> NAME
rule 167  classname -> CLASSNAME
rule 168  primname -> PRIMITIVENAME
rule 169  trueobj -> TRUEOBJ
rule 170  falseobj -> FALSEOBJ
rule 171  nilobj -> NILOBJ
rule 172  infobj -> INFINITUMOBJ
rule 173  ascii -> ASCII
rule 174  symbol -> SYMBOL
rule 175  string -> string1
rule 176  string -> string string1
rule 177  string1 -> STRING
rule 178  pseudovar -> PSEUDOVAR
rule 179  binop -> BINOP
rule 180  binop -> READWRITEVAR
rule 181  binop -> '<'
rule 182  binop -> '>'
rule 183  binop -> '-'
rule 184  binop -> '*'
rule 185  binop -> '+'
rule 186  binop -> '|'
rule 187  keybinop -> KEYBINOP

Terminals, with rules where they appear

$ (-1)
'#' (35) 73 123 144 145
'(' (40) 31 47 48 49 50 51 58 64 65 72
')' (41) 31 47 48 49 50 51 58 64 65 72
'*' (42) 22 24 184
'+' (43) 10 185
',' (44) 28 81 83 86 90 137 141 151
'-' (45) 157 159 165 183
'.' (46) 48 49 50 51 52 71
':' (58) 14
';' (59) 17 18 26 76 128 130 131
'<' (60) 153 181
'=' (61) 69 70 71 72 73 74 139 143
'>' (62) 155 182
'[' (91) 9 57 60 61 74 144 145 146 147
']' (93) 9 57 60 61 74 144 145 146 147
'^' (94) 39 41
'`' (96) 66
'{' (123) 8 9 10 21 22 23 24 122 123
'|' (124) 132 133 186
'}' (125) 8 9 10 21 22 23 24 122 123
'~' (126) 59 70
error (256)
NAME (257) 166
INTEGER (258) 156 157
FLOAT (259) 158 159
SYMBOL (260) 174
STRING (261) 177
ASCII (262) 173
PRIMITIVENAME (263) 168
CLASSNAME (264) 167
VAR (265) 18 128
ARG (266) 130 131
CLASSVAR (267) 17
CONST (268)
NILOBJ (269) 171
TRUEOBJ (270) 169
FALSEOBJ (271) 170
INFINITUMOBJ (272) 172
PSEUDOVAR (273) 178
ELLIPSIS (274) 88 131 133
PIE (275) 160
BADTOKEN (276)
INTERPRET (277) 3
BINOP (278) 179
KEYBINOP (279) 187
READWRITEVAR (280) 154 180
UMINUS (281)

Nonterminals, with rules where they appear

root (49)
    on left: 1 2 3
classes (50)
    on left: 4 5, on right: 1 5
classextensions (51)
    on left: 6 7, on right: 2 7
classdef (52)
    on left: 8 9, on right: 5
classextension (53)
    on left: 10, on right: 6 7
optname (54)
    on left: 11 12, on right: 9
superclass (55)
    on left: 13 14, on right: 8 9
classvardecls (56)
    on left: 15 16, on right: 8 9 16
classvardecl (57)
    on left: 17 18, on right: 16
methods (58)
    on left: 19 20, on right: 8 9 10 20
methoddef (59)
    on left: 21 22 23 24, on right: 20
optsemi (60)
    on left: 25 26, on right: 37 39 41 77
optcomma (61)
    on left: 27 28, on right: 79 149
funcbody (62)
    on left: 29 30, on right: 31 32 33 122 123
cmdlinecode (63)
    on left: 31 32 33, on right: 3
methbody (64)
    on left: 34 35, on right: 21 22 23 24
primitive (65)
    on left: 36 37, on right: 21 22 23 24
retval (66)
    on left: 38 39, on right: 34 35
funretval (67)
    on left: 40 41, on right: 29 30
blocklist1 (68)
    on left: 42 43, on right: 43 45 46
blocklist (69)
    on left: 44 45, on right: 47 48 49 50 51 52
msgsend (70)
    on left: 46 47 48 49 50 51 52, on right: 53
expr (71)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74, on right: 39 41 48 49 50 51 52 66 67 68 69 70 71 72
    73 74 75 76
exprn (72)
    on left: 75 76, on right: 76 77
exprseq (73)
    on left: 77, on right: 30 35 58 80 81 84
arglistc (74)
    on left: 78 79, on right: 60 61
arglist1 (75)
    on left: 80 81, on right: 47 50 51 57 65 72 74 79 81
keyarglist1 (76)
    on left: 82 83, on right: 48 49 64 83 86
keyarg (77)
    on left: 84, on right: 82 83
optkeyarglist (78)
    on left: 85 86, on right: 47 50 51 65 72
mavars (79)
    on left: 87 88, on right: 73
mavarlist (80)
    on left: 89 90, on right: 87 88 90
slotliteral (81)
    on left: 91 92 93 94 95 96 97 98 99 100, on right: 139 143
blockliteral (82)
    on left: 101, on right: 42 43 55
pushliteral (83)
    on left: 102 103 104 105 106 107 108 109 110 111,
    on right: 54
listliteral (84)
    on left: 112 113 114 115 116 117 118 119 120 121,
    on right: 150 151
block (85)
    on left: 122 123, on right: 101
funcvardecls (86)
    on left: 124 125, on right: 21 22 23 24 122 123 125
funcvardecls1 (87)
    on left: 126 127, on right: 31 32 127
funcvardecl (88)
    on left: 128, on right: 125 126 127
argdecls (89)
    on left: 129 130 131 132 133, on right: 21 22 23 24 122 123
slotdeflist0 (90)
    on left: 134 135, on right: 131 133
slotdeflist (91)
    on left: 136 137, on right: 128 130 132 135 137
slotdef (92)
    on left: 138 139, on right: 136 137
rwslotdeflist (93)
    on left: 140 141, on right: 17 18 141
rwslotdef (94)
    on left: 142 143, on right: 140 141
listlit (95)
    on left: 144 145, on right: 100 111
listlit2 (96)
    on left: 146 147, on right: 121
literallistc (97)
    on left: 148 149, on right: 144 145 146 147
literallist1 (98)
    on left: 150 151, on right: 149 151
rwspec (99)
    on left: 152 153 154 155, on right: 142 143
integer (100)
    on left: 156 157, on right: 91 102 112 163
floatr (101)
    on left: 158 159, on right: 161 162
pie (102)
    on left: 160, on right: 162 163 164 165
floatp (103)
    on left: 161 162 163 164 165, on right: 92 103 113
name (104)
    on left: 166, on right: 12 21 22 46 47 49 51 52 56 57 59 69 70
    71 72 74 88 89 90 131 133 138 139 142 143
classname (105)
    on left: 167, on right: 8 9 10 14 61 63 64 65 145 147
primname (106)
    on left: 168, on right: 37
trueobj (107)
    on left: 169, on right: 96 107 117
falseobj (108)
    on left: 170, on right: 97 108 118
nilobj (109)
    on left: 171, on right: 98 109 119
infobj (110)
    on left: 172, on right: 99 110 120
ascii (111)
    on left: 173, on right: 93 104 114
symbol (112)
    on left: 174, on right: 95 106 116
string (113)
    on left: 175 176, on right: 94 105 115 176
string1 (114)
    on left: 177, on right: 175 176
pseudovar (115)
    on left: 178, on right: 62
binop (116)
    on left: 179 180 181 182 183 184 185 186, on right: 23 24 67
keybinop (117)
    on left: 187, on right: 68 84


state 0

    INTERPRET	shift, and go to state 1
    '+' 	shift, and go to state 2

    $default	reduce using rule 4 (classes)

    root	go to state 318
    classes	go to state 3
    classextensions	go to state 4
    classextension	go to state 5



state 1

    root  ->  INTERPRET . cmdlinecode   (rule 3)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 28
    cmdlinecode	go to state 29
    funretval	go to state 30
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 34
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    funcvardecls1	go to state 38
    funcvardecl	go to state 39
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 2

    classextension  ->  '+' . classname '{' methods '}'   (rule 10)

    CLASSNAME	shift, and go to state 12

    classname	go to state 56



state 3

    root  ->  classes .   (rule 1)
    classes  ->  classes . classdef   (rule 5)

    CLASSNAME	shift, and go to state 12

    $default	reduce using rule 1 (root)

    classdef	go to state 57
    classname	go to state 58



state 4

    root  ->  classextensions .   (rule 2)
    classextensions  ->  classextensions . classextension   (rule 7)

    '+' 	shift, and go to state 2

    $default	reduce using rule 2 (root)

    classextension	go to state 59



state 5

    classextensions  ->  classextension .   (rule 6)

    $default	reduce using rule 6 (classextensions)



state 6

    name  ->  NAME .   (rule 166)

    $default	reduce using rule 166 (name)



state 7

    integer  ->  INTEGER .   (rule 156)

    $default	reduce using rule 156 (integer)



state 8

    floatr  ->  FLOAT .   (rule 158)

    $default	reduce using rule 158 (floatr)



state 9

    symbol  ->  SYMBOL .   (rule 174)

    $default	reduce using rule 174 (symbol)



state 10

    string1  ->  STRING .   (rule 177)

    $default	reduce using rule 177 (string1)



state 11

    ascii  ->  ASCII .   (rule 173)

    $default	reduce using rule 173 (ascii)



state 12

    classname  ->  CLASSNAME .   (rule 167)

    $default	reduce using rule 167 (classname)



state 13

    funcvardecl  ->  VAR . slotdeflist ';'   (rule 128)

    NAME	shift, and go to state 6

    slotdeflist	go to state 60
    slotdef	go to state 61
    name	go to state 62



state 14

    nilobj  ->  NILOBJ .   (rule 171)

    $default	reduce using rule 171 (nilobj)



state 15

    trueobj  ->  TRUEOBJ .   (rule 169)

    $default	reduce using rule 169 (trueobj)



state 16

    falseobj  ->  FALSEOBJ .   (rule 170)

    $default	reduce using rule 170 (falseobj)



state 17

    infobj  ->  INFINITUMOBJ .   (rule 172)

    $default	reduce using rule 172 (infobj)



state 18

    pseudovar  ->  PSEUDOVAR .   (rule 178)

    $default	reduce using rule 178 (pseudovar)



state 19

    pie  ->  PIE .   (rule 160)

    $default	reduce using rule 160 (pie)



state 20

    integer  ->  '-' . INTEGER   (rule 157)
    floatr  ->  '-' . FLOAT   (rule 159)
    floatp  ->  '-' . pie   (rule 165)

    INTEGER	shift, and go to state 63
    FLOAT	shift, and go to state 64
    PIE 	shift, and go to state 19

    pie 	go to state 65



state 21

    expr  ->  '`' . expr   (rule 66)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 67
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 22

    block  ->  '{' . argdecls funcvardecls funcbody '}'   (rule 122)

    ARG 	shift, and go to state 68
    '|' 	shift, and go to state 69

    $default	reduce using rule 129 (argdecls)

    argdecls	go to state 70



state 23

    expr  ->  '[' . arglistc ']'   (rule 60)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 78 (arglistc)

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglistc	go to state 72
    arglist1	go to state 73
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 24

    cmdlinecode  ->  '(' . funcvardecls1 funcbody ')'   (rule 31)
    expr  ->  '(' . exprseq ')'   (rule 58)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 74
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    funcvardecls1	go to state 75
    funcvardecl	go to state 39
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 25

    funretval  ->  '^' . expr optsemi   (rule 41)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 76
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 26

    expr  ->  '~' . name   (rule 59)
    expr  ->  '~' . name '=' expr   (rule 70)

    NAME	shift, and go to state 6

    name	go to state 77



state 27

    expr  ->  '#' . mavars '=' expr   (rule 73)
    block  ->  '#' . '{' argdecls funcvardecls funcbody '}'   (rule 123)
    listlit  ->  '#' . '[' literallistc ']'   (rule 144)
    listlit  ->  '#' . classname '[' literallistc ']'   (rule 145)

    NAME	shift, and go to state 6
    CLASSNAME	shift, and go to state 12
    '{' 	shift, and go to state 78
    '[' 	shift, and go to state 79

    mavars	go to state 80
    mavarlist	go to state 81
    name	go to state 82
    classname	go to state 83



state 28

    cmdlinecode  ->  funcbody .   (rule 33)

    $default	reduce using rule 33 (cmdlinecode)



state 29

    root  ->  INTERPRET cmdlinecode .   (rule 3)

    $default	reduce using rule 3 (root)



state 30

    funcbody  ->  funretval .   (rule 29)

    $default	reduce using rule 29 (funcbody)



state 31

    expr  ->  msgsend .   (rule 53)

    $default	reduce using rule 53 (expr)



state 32

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)
    exprn  ->  expr .   (rule 75)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 75 (exprn)

    binop	go to state 94
    keybinop	go to state 95



state 33

    exprn  ->  exprn . ';' expr   (rule 76)
    exprseq  ->  exprn . optsemi   (rule 77)

    ';' 	shift, and go to state 96

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 97



state 34

    funcbody  ->  exprseq . funretval   (rule 30)

    '^' 	shift, and go to state 25

    $default	reduce using rule 40 (funretval)

    funretval	go to state 98



state 35

    expr  ->  blockliteral .   (rule 55)

    $default	reduce using rule 55 (expr)



state 36

    expr  ->  pushliteral .   (rule 54)

    $default	reduce using rule 54 (expr)



state 37

    blockliteral  ->  block .   (rule 101)

    $default	reduce using rule 101 (blockliteral)



state 38

    cmdlinecode  ->  funcvardecls1 . funcbody   (rule 32)
    funcvardecls1  ->  funcvardecls1 . funcvardecl   (rule 127)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 99
    funretval	go to state 30
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 34
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    funcvardecl	go to state 100
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 39

    funcvardecls1  ->  funcvardecl .   (rule 126)

    $default	reduce using rule 126 (funcvardecls1)



state 40

    pushliteral  ->  listlit .   (rule 111)

    $default	reduce using rule 111 (pushliteral)



state 41

    pushliteral  ->  integer .   (rule 102)
    floatp  ->  integer . pie   (rule 163)

    PIE 	shift, and go to state 19

    $default	reduce using rule 102 (pushliteral)

    pie 	go to state 101



state 42

    floatp  ->  floatr .   (rule 161)
    floatp  ->  floatr . pie   (rule 162)

    PIE 	shift, and go to state 19

    $default	reduce using rule 161 (floatp)

    pie 	go to state 102



state 43

    floatp  ->  pie .   (rule 164)

    $default	reduce using rule 164 (floatp)



state 44

    pushliteral  ->  floatp .   (rule 103)

    $default	reduce using rule 103 (pushliteral)



state 45

    msgsend  ->  name . blocklist1   (rule 46)
    msgsend  ->  name . '(' arglist1 optkeyarglist ')' blocklist   (rule 47)
    expr  ->  name .   (rule 56)
    expr  ->  name . '[' arglist1 ']'   (rule 57)
    expr  ->  name . '=' expr   (rule 69)
    expr  ->  name . '(' arglist1 optkeyarglist ')' '=' expr   (rule 72)
    expr  ->  name . '[' arglist1 ']' '=' expr   (rule 74)

    '=' 	shift, and go to state 103
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 104
    '(' 	shift, and go to state 105
    '#' 	shift, and go to state 106

    $default	reduce using rule 56 (expr)

    blocklist1	go to state 107
    blockliteral	go to state 108
    block	go to state 37



state 46

    expr  ->  classname . '[' arglistc ']'   (rule 61)
    expr  ->  classname .   (rule 63)
    expr  ->  classname . '(' keyarglist1 ')'   (rule 64)
    expr  ->  classname . '(' arglist1 optkeyarglist ')'   (rule 65)

    '[' 	shift, and go to state 109
    '(' 	shift, and go to state 110

    $default	reduce using rule 63 (expr)



state 47

    pushliteral  ->  trueobj .   (rule 107)

    $default	reduce using rule 107 (pushliteral)



state 48

    pushliteral  ->  falseobj .   (rule 108)

    $default	reduce using rule 108 (pushliteral)



state 49

    pushliteral  ->  nilobj .   (rule 109)

    $default	reduce using rule 109 (pushliteral)



state 50

    pushliteral  ->  infobj .   (rule 110)

    $default	reduce using rule 110 (pushliteral)



state 51

    pushliteral  ->  ascii .   (rule 104)

    $default	reduce using rule 104 (pushliteral)



state 52

    pushliteral  ->  symbol .   (rule 106)

    $default	reduce using rule 106 (pushliteral)



state 53

    pushliteral  ->  string .   (rule 105)
    string  ->  string . string1   (rule 176)

    STRING	shift, and go to state 10

    $default	reduce using rule 105 (pushliteral)

    string1	go to state 111



state 54

    string  ->  string1 .   (rule 175)

    $default	reduce using rule 175 (string)



state 55

    expr  ->  pseudovar .   (rule 62)

    $default	reduce using rule 62 (expr)



state 56

    classextension  ->  '+' classname . '{' methods '}'   (rule 10)

    '{' 	shift, and go to state 112



state 57

    classes  ->  classes classdef .   (rule 5)

    $default	reduce using rule 5 (classes)



state 58

    classdef  ->  classname . superclass '{' classvardecls methods '}'   (rule 8)
    classdef  ->  classname . '[' optname ']' superclass '{' classvardecls methods '}'   (rule 9)

    '[' 	shift, and go to state 113
    ':' 	shift, and go to state 114

    $default	reduce using rule 13 (superclass)

    superclass	go to state 115



state 59

    classextensions  ->  classextensions classextension .   (rule 7)

    $default	reduce using rule 7 (classextensions)



state 60

    funcvardecl  ->  VAR slotdeflist . ';'   (rule 128)
    slotdeflist  ->  slotdeflist . ',' slotdef   (rule 137)

    ';' 	shift, and go to state 116
    ',' 	shift, and go to state 117



state 61

    slotdeflist  ->  slotdef .   (rule 136)

    $default	reduce using rule 136 (slotdeflist)



state 62

    slotdef  ->  name .   (rule 138)
    slotdef  ->  name . '=' slotliteral   (rule 139)

    '=' 	shift, and go to state 118

    $default	reduce using rule 138 (slotdef)



state 63

    integer  ->  '-' INTEGER .   (rule 157)

    $default	reduce using rule 157 (integer)



state 64

    floatr  ->  '-' FLOAT .   (rule 159)

    $default	reduce using rule 159 (floatr)



state 65

    floatp  ->  '-' pie .   (rule 165)

    $default	reduce using rule 165 (floatp)



state 66

    expr  ->  '(' . exprseq ')'   (rule 58)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 74
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 67

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  '`' expr .   (rule 66)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)


    $default	reduce using rule 66 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 68

    argdecls  ->  ARG . slotdeflist ';'   (rule 130)
    argdecls  ->  ARG . slotdeflist0 ELLIPSIS name ';'   (rule 131)

    NAME	shift, and go to state 6

    $default	reduce using rule 134 (slotdeflist0)

    slotdeflist0	go to state 119
    slotdeflist	go to state 120
    slotdef	go to state 61
    name	go to state 62



state 69

    argdecls  ->  '|' . slotdeflist '|'   (rule 132)
    argdecls  ->  '|' . slotdeflist0 ELLIPSIS name '|'   (rule 133)

    NAME	shift, and go to state 6

    $default	reduce using rule 134 (slotdeflist0)

    slotdeflist0	go to state 121
    slotdeflist	go to state 122
    slotdef	go to state 61
    name	go to state 62



state 70

    block  ->  '{' argdecls . funcvardecls funcbody '}'   (rule 122)

    $default	reduce using rule 124 (funcvardecls)

    funcvardecls	go to state 123



state 71

    arglist1  ->  exprseq .   (rule 80)

    $default	reduce using rule 80 (arglist1)



state 72

    expr  ->  '[' arglistc . ']'   (rule 60)

    ']' 	shift, and go to state 124



state 73

    arglistc  ->  arglist1 . optcomma   (rule 79)
    arglist1  ->  arglist1 . ',' exprseq   (rule 81)

    ',' 	shift, and go to state 125

    $default	reduce using rule 27 (optcomma)

    optcomma	go to state 126



state 74

    expr  ->  '(' exprseq . ')'   (rule 58)

    ')' 	shift, and go to state 127



state 75

    cmdlinecode  ->  '(' funcvardecls1 . funcbody ')'   (rule 31)
    funcvardecls1  ->  funcvardecls1 . funcvardecl   (rule 127)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 128
    funretval	go to state 30
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 34
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    funcvardecl	go to state 100
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 76

    funretval  ->  '^' expr . optsemi   (rule 41)
    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93
    ';' 	shift, and go to state 129

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 130
    binop	go to state 94
    keybinop	go to state 95



state 77

    expr  ->  '~' name .   (rule 59)
    expr  ->  '~' name . '=' expr   (rule 70)

    '=' 	shift, and go to state 131

    $default	reduce using rule 59 (expr)



state 78

    block  ->  '#' '{' . argdecls funcvardecls funcbody '}'   (rule 123)

    ARG 	shift, and go to state 68
    '|' 	shift, and go to state 69

    $default	reduce using rule 129 (argdecls)

    argdecls	go to state 132



state 79

    listlit  ->  '#' '[' . literallistc ']'   (rule 144)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 133

    $default	reduce using rule 148 (literallistc)

    listliteral	go to state 134
    listlit2	go to state 135
    literallistc	go to state 136
    literallist1	go to state 137
    integer	go to state 138
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 139
    classname	go to state 140
    trueobj	go to state 141
    falseobj	go to state 142
    nilobj	go to state 143
    infobj	go to state 144
    ascii	go to state 145
    symbol	go to state 146
    string	go to state 147
    string1	go to state 54



state 80

    expr  ->  '#' mavars . '=' expr   (rule 73)

    '=' 	shift, and go to state 148



state 81

    mavars  ->  mavarlist .   (rule 87)
    mavars  ->  mavarlist . ELLIPSIS name   (rule 88)
    mavarlist  ->  mavarlist . ',' name   (rule 90)

    ELLIPSIS	shift, and go to state 149
    ',' 	shift, and go to state 150

    $default	reduce using rule 87 (mavars)



state 82

    mavarlist  ->  name .   (rule 89)

    $default	reduce using rule 89 (mavarlist)



state 83

    listlit  ->  '#' classname . '[' literallistc ']'   (rule 145)

    '[' 	shift, and go to state 151



state 84

    binop  ->  BINOP .   (rule 179)

    $default	reduce using rule 179 (binop)



state 85

    keybinop  ->  KEYBINOP .   (rule 187)

    $default	reduce using rule 187 (keybinop)



state 86

    binop  ->  '-' .   (rule 183)

    $default	reduce using rule 183 (binop)



state 87

    binop  ->  '<' .   (rule 181)

    $default	reduce using rule 181 (binop)



state 88

    binop  ->  '>' .   (rule 182)

    $default	reduce using rule 182 (binop)



state 89

    binop  ->  '*' .   (rule 184)

    $default	reduce using rule 184 (binop)



state 90

    binop  ->  '+' .   (rule 185)

    $default	reduce using rule 185 (binop)



state 91

    binop  ->  '|' .   (rule 186)

    $default	reduce using rule 186 (binop)



state 92

    binop  ->  READWRITEVAR .   (rule 180)

    $default	reduce using rule 180 (binop)



state 93

    msgsend  ->  expr '.' . '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr '.' . name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr '.' . '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr '.' . name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr '.' . name blocklist   (rule 52)
    expr  ->  expr '.' . name '=' expr   (rule 71)

    NAME	shift, and go to state 6
    '(' 	shift, and go to state 152

    name	go to state 153



state 94

    expr  ->  expr binop . expr   (rule 67)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 154
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 95

    expr  ->  expr keybinop . expr   (rule 68)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 155
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 96

    optsemi  ->  ';' .   (rule 26)
    exprn  ->  exprn ';' . expr   (rule 76)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 26 (optsemi)

    msgsend	go to state 31
    expr	go to state 156
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 97

    exprseq  ->  exprn optsemi .   (rule 77)

    $default	reduce using rule 77 (exprseq)



state 98

    funcbody  ->  exprseq funretval .   (rule 30)

    $default	reduce using rule 30 (funcbody)



state 99

    cmdlinecode  ->  funcvardecls1 funcbody .   (rule 32)

    $default	reduce using rule 32 (cmdlinecode)



state 100

    funcvardecls1  ->  funcvardecls1 funcvardecl .   (rule 127)

    $default	reduce using rule 127 (funcvardecls1)



state 101

    floatp  ->  integer pie .   (rule 163)

    $default	reduce using rule 163 (floatp)



state 102

    floatp  ->  floatr pie .   (rule 162)

    $default	reduce using rule 162 (floatp)



state 103

    expr  ->  name '=' . expr   (rule 69)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 157
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 104

    expr  ->  name '[' . arglist1 ']'   (rule 57)
    expr  ->  name '[' . arglist1 ']' '=' expr   (rule 74)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglist1	go to state 158
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 105

    msgsend  ->  name '(' . arglist1 optkeyarglist ')' blocklist   (rule 47)
    expr  ->  name '(' . arglist1 optkeyarglist ')' '=' expr   (rule 72)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglist1	go to state 159
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 106

    block  ->  '#' . '{' argdecls funcvardecls funcbody '}'   (rule 123)

    '{' 	shift, and go to state 78



state 107

    blocklist1  ->  blocklist1 . blockliteral   (rule 43)
    msgsend  ->  name blocklist1 .   (rule 46)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 46 (msgsend)

    blockliteral	go to state 160
    block	go to state 37



state 108

    blocklist1  ->  blockliteral .   (rule 42)

    $default	reduce using rule 42 (blocklist1)



state 109

    expr  ->  classname '[' . arglistc ']'   (rule 61)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 78 (arglistc)

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglistc	go to state 161
    arglist1	go to state 73
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 110

    expr  ->  classname '(' . keyarglist1 ')'   (rule 64)
    expr  ->  classname '(' . arglist1 optkeyarglist ')'   (rule 65)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglist1	go to state 162
    keyarglist1	go to state 163
    keyarg	go to state 164
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55
    keybinop	go to state 165



state 111

    string  ->  string string1 .   (rule 176)

    $default	reduce using rule 176 (string)



state 112

    classextension  ->  '+' classname '{' . methods '}'   (rule 10)

    $default	reduce using rule 19 (methods)

    methods	go to state 166



state 113

    classdef  ->  classname '[' . optname ']' superclass '{' classvardecls methods '}'   (rule 9)

    NAME	shift, and go to state 6

    $default	reduce using rule 11 (optname)

    optname	go to state 167
    name	go to state 168



state 114

    superclass  ->  ':' . classname   (rule 14)

    CLASSNAME	shift, and go to state 12

    classname	go to state 169



state 115

    classdef  ->  classname superclass . '{' classvardecls methods '}'   (rule 8)

    '{' 	shift, and go to state 170



state 116

    funcvardecl  ->  VAR slotdeflist ';' .   (rule 128)

    $default	reduce using rule 128 (funcvardecl)



state 117

    slotdeflist  ->  slotdeflist ',' . slotdef   (rule 137)

    NAME	shift, and go to state 6

    slotdef	go to state 171
    name	go to state 62



state 118

    slotdef  ->  name '=' . slotliteral   (rule 139)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '#' 	shift, and go to state 172

    slotliteral	go to state 173
    listlit	go to state 174
    integer	go to state 175
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 176
    trueobj	go to state 177
    falseobj	go to state 178
    nilobj	go to state 179
    infobj	go to state 180
    ascii	go to state 181
    symbol	go to state 182
    string	go to state 183
    string1	go to state 54



state 119

    argdecls  ->  ARG slotdeflist0 . ELLIPSIS name ';'   (rule 131)

    ELLIPSIS	shift, and go to state 184



state 120

    argdecls  ->  ARG slotdeflist . ';'   (rule 130)
    slotdeflist0  ->  slotdeflist .   (rule 135)
    slotdeflist  ->  slotdeflist . ',' slotdef   (rule 137)

    ';' 	shift, and go to state 185
    ',' 	shift, and go to state 117

    $default	reduce using rule 135 (slotdeflist0)



state 121

    argdecls  ->  '|' slotdeflist0 . ELLIPSIS name '|'   (rule 133)

    ELLIPSIS	shift, and go to state 186



state 122

    argdecls  ->  '|' slotdeflist . '|'   (rule 132)
    slotdeflist0  ->  slotdeflist .   (rule 135)
    slotdeflist  ->  slotdeflist . ',' slotdef   (rule 137)

    '|' 	shift, and go to state 187
    ',' 	shift, and go to state 117

    $default	reduce using rule 135 (slotdeflist0)



state 123

    block  ->  '{' argdecls funcvardecls . funcbody '}'   (rule 122)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 125)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 188
    funretval	go to state 30
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 34
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    funcvardecl	go to state 189
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 124

    expr  ->  '[' arglistc ']' .   (rule 60)

    $default	reduce using rule 60 (expr)



state 125

    optcomma  ->  ',' .   (rule 28)
    arglist1  ->  arglist1 ',' . exprseq   (rule 81)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 28 (optcomma)

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 190
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 126

    arglistc  ->  arglist1 optcomma .   (rule 79)

    $default	reduce using rule 79 (arglistc)



state 127

    expr  ->  '(' exprseq ')' .   (rule 58)

    $default	reduce using rule 58 (expr)



state 128

    cmdlinecode  ->  '(' funcvardecls1 funcbody . ')'   (rule 31)

    ')' 	shift, and go to state 191



state 129

    optsemi  ->  ';' .   (rule 26)

    $default	reduce using rule 26 (optsemi)



state 130

    funretval  ->  '^' expr optsemi .   (rule 41)

    $default	reduce using rule 41 (funretval)



state 131

    expr  ->  '~' name '=' . expr   (rule 70)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 192
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 132

    block  ->  '#' '{' argdecls . funcvardecls funcbody '}'   (rule 123)

    $default	reduce using rule 124 (funcvardecls)

    funcvardecls	go to state 193



state 133

    listlit2  ->  '[' . literallistc ']'   (rule 146)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 133

    $default	reduce using rule 148 (literallistc)

    listliteral	go to state 134
    listlit2	go to state 135
    literallistc	go to state 194
    literallist1	go to state 137
    integer	go to state 138
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 139
    classname	go to state 140
    trueobj	go to state 141
    falseobj	go to state 142
    nilobj	go to state 143
    infobj	go to state 144
    ascii	go to state 145
    symbol	go to state 146
    string	go to state 147
    string1	go to state 54



state 134

    literallist1  ->  listliteral .   (rule 150)

    $default	reduce using rule 150 (literallist1)



state 135

    listliteral  ->  listlit2 .   (rule 121)

    $default	reduce using rule 121 (listliteral)



state 136

    listlit  ->  '#' '[' literallistc . ']'   (rule 144)

    ']' 	shift, and go to state 195



state 137

    literallistc  ->  literallist1 . optcomma   (rule 149)
    literallist1  ->  literallist1 . ',' listliteral   (rule 151)

    ',' 	shift, and go to state 196

    $default	reduce using rule 27 (optcomma)

    optcomma	go to state 197



state 138

    listliteral  ->  integer .   (rule 112)
    floatp  ->  integer . pie   (rule 163)

    PIE 	shift, and go to state 19

    $default	reduce using rule 112 (listliteral)

    pie 	go to state 101



state 139

    listliteral  ->  floatp .   (rule 113)

    $default	reduce using rule 113 (listliteral)



state 140

    listlit2  ->  classname . '[' literallistc ']'   (rule 147)

    '[' 	shift, and go to state 198



state 141

    listliteral  ->  trueobj .   (rule 117)

    $default	reduce using rule 117 (listliteral)



state 142

    listliteral  ->  falseobj .   (rule 118)

    $default	reduce using rule 118 (listliteral)



state 143

    listliteral  ->  nilobj .   (rule 119)

    $default	reduce using rule 119 (listliteral)



state 144

    listliteral  ->  infobj .   (rule 120)

    $default	reduce using rule 120 (listliteral)



state 145

    listliteral  ->  ascii .   (rule 114)

    $default	reduce using rule 114 (listliteral)



state 146

    listliteral  ->  symbol .   (rule 116)

    $default	reduce using rule 116 (listliteral)



state 147

    listliteral  ->  string .   (rule 115)
    string  ->  string . string1   (rule 176)

    STRING	shift, and go to state 10

    $default	reduce using rule 115 (listliteral)

    string1	go to state 111



state 148

    expr  ->  '#' mavars '=' . expr   (rule 73)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 199
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 149

    mavars  ->  mavarlist ELLIPSIS . name   (rule 88)

    NAME	shift, and go to state 6

    name	go to state 200



state 150

    mavarlist  ->  mavarlist ',' . name   (rule 90)

    NAME	shift, and go to state 6

    name	go to state 201



state 151

    listlit  ->  '#' classname '[' . literallistc ']'   (rule 145)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 133

    $default	reduce using rule 148 (literallistc)

    listliteral	go to state 134
    listlit2	go to state 135
    literallistc	go to state 202
    literallist1	go to state 137
    integer	go to state 138
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 139
    classname	go to state 140
    trueobj	go to state 141
    falseobj	go to state 142
    nilobj	go to state 143
    infobj	go to state 144
    ascii	go to state 145
    symbol	go to state 146
    string	go to state 147
    string1	go to state 54



state 152

    msgsend  ->  expr '.' '(' . keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr '.' '(' . arglist1 optkeyarglist ')' blocklist   (rule 50)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglist1	go to state 203
    keyarglist1	go to state 204
    keyarg	go to state 164
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55
    keybinop	go to state 165



state 153

    msgsend  ->  expr '.' name . '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr '.' name . '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr '.' name . blocklist   (rule 52)
    expr  ->  expr '.' name . '=' expr   (rule 71)

    '=' 	shift, and go to state 205
    '{' 	shift, and go to state 22
    '(' 	shift, and go to state 206
    '#' 	shift, and go to state 106

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 207
    blocklist	go to state 208
    blockliteral	go to state 108
    block	go to state 37



state 154

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr binop expr .   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)

    '.' 	shift, and go to state 93

    $default	reduce using rule 67 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 155

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr keybinop expr .   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)

    '.' 	shift, and go to state 93

    $default	reduce using rule 68 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 156

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)
    exprn  ->  exprn ';' expr .   (rule 76)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 76 (exprn)

    binop	go to state 94
    keybinop	go to state 95



state 157

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  name '=' expr .   (rule 69)
    expr  ->  expr . '.' name '=' expr   (rule 71)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 69 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 158

    expr  ->  name '[' arglist1 . ']'   (rule 57)
    expr  ->  name '[' arglist1 . ']' '=' expr   (rule 74)
    arglist1  ->  arglist1 . ',' exprseq   (rule 81)

    ']' 	shift, and go to state 209
    ',' 	shift, and go to state 210



state 159

    msgsend  ->  name '(' arglist1 . optkeyarglist ')' blocklist   (rule 47)
    expr  ->  name '(' arglist1 . optkeyarglist ')' '=' expr   (rule 72)
    arglist1  ->  arglist1 . ',' exprseq   (rule 81)

    ',' 	shift, and go to state 211

    $default	reduce using rule 85 (optkeyarglist)

    optkeyarglist	go to state 212



state 160

    blocklist1  ->  blocklist1 blockliteral .   (rule 43)

    $default	reduce using rule 43 (blocklist1)



state 161

    expr  ->  classname '[' arglistc . ']'   (rule 61)

    ']' 	shift, and go to state 213



state 162

    expr  ->  classname '(' arglist1 . optkeyarglist ')'   (rule 65)
    arglist1  ->  arglist1 . ',' exprseq   (rule 81)

    ',' 	shift, and go to state 211

    $default	reduce using rule 85 (optkeyarglist)

    optkeyarglist	go to state 214



state 163

    expr  ->  classname '(' keyarglist1 . ')'   (rule 64)
    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 83)

    ',' 	shift, and go to state 215
    ')' 	shift, and go to state 216



state 164

    keyarglist1  ->  keyarg .   (rule 82)

    $default	reduce using rule 82 (keyarglist1)



state 165

    keyarg  ->  keybinop . exprseq   (rule 84)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 217
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 166

    classextension  ->  '+' classname '{' methods . '}'   (rule 10)
    methods  ->  methods . methoddef   (rule 20)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 84
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 218
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '}' 	shift, and go to state 219

    methoddef	go to state 220
    name	go to state 221
    binop	go to state 222



state 167

    classdef  ->  classname '[' optname . ']' superclass '{' classvardecls methods '}'   (rule 9)

    ']' 	shift, and go to state 223



state 168

    optname  ->  name .   (rule 12)

    $default	reduce using rule 12 (optname)



state 169

    superclass  ->  ':' classname .   (rule 14)

    $default	reduce using rule 14 (superclass)



state 170

    classdef  ->  classname superclass '{' . classvardecls methods '}'   (rule 8)

    $default	reduce using rule 15 (classvardecls)

    classvardecls	go to state 224



state 171

    slotdeflist  ->  slotdeflist ',' slotdef .   (rule 137)

    $default	reduce using rule 137 (slotdeflist)



state 172

    listlit  ->  '#' . '[' literallistc ']'   (rule 144)
    listlit  ->  '#' . classname '[' literallistc ']'   (rule 145)

    CLASSNAME	shift, and go to state 12
    '[' 	shift, and go to state 79

    classname	go to state 83



state 173

    slotdef  ->  name '=' slotliteral .   (rule 139)

    $default	reduce using rule 139 (slotdef)



state 174

    slotliteral  ->  listlit .   (rule 100)

    $default	reduce using rule 100 (slotliteral)



state 175

    slotliteral  ->  integer .   (rule 91)
    floatp  ->  integer . pie   (rule 163)

    PIE 	shift, and go to state 19

    $default	reduce using rule 91 (slotliteral)

    pie 	go to state 101



state 176

    slotliteral  ->  floatp .   (rule 92)

    $default	reduce using rule 92 (slotliteral)



state 177

    slotliteral  ->  trueobj .   (rule 96)

    $default	reduce using rule 96 (slotliteral)



state 178

    slotliteral  ->  falseobj .   (rule 97)

    $default	reduce using rule 97 (slotliteral)



state 179

    slotliteral  ->  nilobj .   (rule 98)

    $default	reduce using rule 98 (slotliteral)



state 180

    slotliteral  ->  infobj .   (rule 99)

    $default	reduce using rule 99 (slotliteral)



state 181

    slotliteral  ->  ascii .   (rule 93)

    $default	reduce using rule 93 (slotliteral)



state 182

    slotliteral  ->  symbol .   (rule 95)

    $default	reduce using rule 95 (slotliteral)



state 183

    slotliteral  ->  string .   (rule 94)
    string  ->  string . string1   (rule 176)

    STRING	shift, and go to state 10

    $default	reduce using rule 94 (slotliteral)

    string1	go to state 111



state 184

    argdecls  ->  ARG slotdeflist0 ELLIPSIS . name ';'   (rule 131)

    NAME	shift, and go to state 6

    name	go to state 225



state 185

    argdecls  ->  ARG slotdeflist ';' .   (rule 130)

    $default	reduce using rule 130 (argdecls)



state 186

    argdecls  ->  '|' slotdeflist0 ELLIPSIS . name '|'   (rule 133)

    NAME	shift, and go to state 6

    name	go to state 226



state 187

    argdecls  ->  '|' slotdeflist '|' .   (rule 132)

    $default	reduce using rule 132 (argdecls)



state 188

    block  ->  '{' argdecls funcvardecls funcbody . '}'   (rule 122)

    '}' 	shift, and go to state 227



state 189

    funcvardecls  ->  funcvardecls funcvardecl .   (rule 125)

    $default	reduce using rule 125 (funcvardecls)



state 190

    arglist1  ->  arglist1 ',' exprseq .   (rule 81)

    $default	reduce using rule 81 (arglist1)



state 191

    cmdlinecode  ->  '(' funcvardecls1 funcbody ')' .   (rule 31)

    $default	reduce using rule 31 (cmdlinecode)



state 192

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  '~' name '=' expr .   (rule 70)
    expr  ->  expr . '.' name '=' expr   (rule 71)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 70 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 193

    block  ->  '#' '{' argdecls funcvardecls . funcbody '}'   (rule 123)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 125)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 228
    funretval	go to state 30
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 34
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    funcvardecl	go to state 189
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 194

    listlit2  ->  '[' literallistc . ']'   (rule 146)

    ']' 	shift, and go to state 229



state 195

    listlit  ->  '#' '[' literallistc ']' .   (rule 144)

    $default	reduce using rule 144 (listlit)



state 196

    optcomma  ->  ',' .   (rule 28)
    literallist1  ->  literallist1 ',' . listliteral   (rule 151)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 133

    $default	reduce using rule 28 (optcomma)

    listliteral	go to state 230
    listlit2	go to state 135
    integer	go to state 138
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 139
    classname	go to state 140
    trueobj	go to state 141
    falseobj	go to state 142
    nilobj	go to state 143
    infobj	go to state 144
    ascii	go to state 145
    symbol	go to state 146
    string	go to state 147
    string1	go to state 54



state 197

    literallistc  ->  literallist1 optcomma .   (rule 149)

    $default	reduce using rule 149 (literallistc)



state 198

    listlit2  ->  classname '[' . literallistc ']'   (rule 147)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 133

    $default	reduce using rule 148 (literallistc)

    listliteral	go to state 134
    listlit2	go to state 135
    literallistc	go to state 231
    literallist1	go to state 137
    integer	go to state 138
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 139
    classname	go to state 140
    trueobj	go to state 141
    falseobj	go to state 142
    nilobj	go to state 143
    infobj	go to state 144
    ascii	go to state 145
    symbol	go to state 146
    string	go to state 147
    string1	go to state 54



state 199

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)
    expr  ->  '#' mavars '=' expr .   (rule 73)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 73 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 200

    mavars  ->  mavarlist ELLIPSIS name .   (rule 88)

    $default	reduce using rule 88 (mavars)



state 201

    mavarlist  ->  mavarlist ',' name .   (rule 90)

    $default	reduce using rule 90 (mavarlist)



state 202

    listlit  ->  '#' classname '[' literallistc . ']'   (rule 145)

    ']' 	shift, and go to state 232



state 203

    msgsend  ->  expr '.' '(' arglist1 . optkeyarglist ')' blocklist   (rule 50)
    arglist1  ->  arglist1 . ',' exprseq   (rule 81)

    ',' 	shift, and go to state 211

    $default	reduce using rule 85 (optkeyarglist)

    optkeyarglist	go to state 233



state 204

    msgsend  ->  expr '.' '(' keyarglist1 . ')' blocklist   (rule 48)
    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 83)

    ',' 	shift, and go to state 215
    ')' 	shift, and go to state 234



state 205

    expr  ->  expr '.' name '=' . expr   (rule 71)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 235
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 206

    msgsend  ->  expr '.' name '(' . keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr '.' name '(' . arglist1 optkeyarglist ')' blocklist   (rule 51)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 71
    arglist1	go to state 236
    keyarglist1	go to state 237
    keyarg	go to state 164
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55
    keybinop	go to state 165



state 207

    blocklist1  ->  blocklist1 . blockliteral   (rule 43)
    blocklist  ->  blocklist1 .   (rule 45)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 45 (blocklist)

    blockliteral	go to state 160
    block	go to state 37



state 208

    msgsend  ->  expr '.' name blocklist .   (rule 52)

    $default	reduce using rule 52 (msgsend)



state 209

    expr  ->  name '[' arglist1 ']' .   (rule 57)
    expr  ->  name '[' arglist1 ']' . '=' expr   (rule 74)

    '=' 	shift, and go to state 238

    $default	reduce using rule 57 (expr)



state 210

    arglist1  ->  arglist1 ',' . exprseq   (rule 81)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 190
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 211

    arglist1  ->  arglist1 ',' . exprseq   (rule 81)
    optkeyarglist  ->  ',' . keyarglist1   (rule 86)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 190
    keyarglist1	go to state 239
    keyarg	go to state 164
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55
    keybinop	go to state 165



state 212

    msgsend  ->  name '(' arglist1 optkeyarglist . ')' blocklist   (rule 47)
    expr  ->  name '(' arglist1 optkeyarglist . ')' '=' expr   (rule 72)

    ')' 	shift, and go to state 240



state 213

    expr  ->  classname '[' arglistc ']' .   (rule 61)

    $default	reduce using rule 61 (expr)



state 214

    expr  ->  classname '(' arglist1 optkeyarglist . ')'   (rule 65)

    ')' 	shift, and go to state 241



state 215

    keyarglist1  ->  keyarglist1 ',' . keyarg   (rule 83)

    KEYBINOP	shift, and go to state 85

    keyarg	go to state 242
    keybinop	go to state 165



state 216

    expr  ->  classname '(' keyarglist1 ')' .   (rule 64)

    $default	reduce using rule 64 (expr)



state 217

    keyarg  ->  keybinop exprseq .   (rule 84)

    $default	reduce using rule 84 (keyarg)



state 218

    methoddef  ->  '*' . name '{' argdecls funcvardecls primitive methbody '}'   (rule 22)
    methoddef  ->  '*' . binop '{' argdecls funcvardecls primitive methbody '}'   (rule 24)
    binop  ->  '*' .   (rule 184)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 84
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92

    $default	reduce using rule 184 (binop)

    name	go to state 243
    binop	go to state 244



state 219

    classextension  ->  '+' classname '{' methods '}' .   (rule 10)

    $default	reduce using rule 10 (classextension)



state 220

    methods  ->  methods methoddef .   (rule 20)

    $default	reduce using rule 20 (methods)



state 221

    methoddef  ->  name . '{' argdecls funcvardecls primitive methbody '}'   (rule 21)

    '{' 	shift, and go to state 245



state 222

    methoddef  ->  binop . '{' argdecls funcvardecls primitive methbody '}'   (rule 23)

    '{' 	shift, and go to state 246



state 223

    classdef  ->  classname '[' optname ']' . superclass '{' classvardecls methods '}'   (rule 9)

    ':' 	shift, and go to state 114

    $default	reduce using rule 13 (superclass)

    superclass	go to state 247



state 224

    classdef  ->  classname superclass '{' classvardecls . methods '}'   (rule 8)
    classvardecls  ->  classvardecls . classvardecl   (rule 16)

    VAR 	shift, and go to state 248
    CLASSVAR	shift, and go to state 249

    $default	reduce using rule 19 (methods)

    classvardecl	go to state 250
    methods	go to state 251



state 225

    argdecls  ->  ARG slotdeflist0 ELLIPSIS name . ';'   (rule 131)

    ';' 	shift, and go to state 252



state 226

    argdecls  ->  '|' slotdeflist0 ELLIPSIS name . '|'   (rule 133)

    '|' 	shift, and go to state 253



state 227

    block  ->  '{' argdecls funcvardecls funcbody '}' .   (rule 122)

    $default	reduce using rule 122 (block)



state 228

    block  ->  '#' '{' argdecls funcvardecls funcbody . '}'   (rule 123)

    '}' 	shift, and go to state 254



state 229

    listlit2  ->  '[' literallistc ']' .   (rule 146)

    $default	reduce using rule 146 (listlit2)



state 230

    literallist1  ->  literallist1 ',' listliteral .   (rule 151)

    $default	reduce using rule 151 (literallist1)



state 231

    listlit2  ->  classname '[' literallistc . ']'   (rule 147)

    ']' 	shift, and go to state 255



state 232

    listlit  ->  '#' classname '[' literallistc ']' .   (rule 145)

    $default	reduce using rule 145 (listlit)



state 233

    msgsend  ->  expr '.' '(' arglist1 optkeyarglist . ')' blocklist   (rule 50)

    ')' 	shift, and go to state 256



state 234

    msgsend  ->  expr '.' '(' keyarglist1 ')' . blocklist   (rule 48)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 207
    blocklist	go to state 257
    blockliteral	go to state 108
    block	go to state 37



state 235

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)
    expr  ->  expr '.' name '=' expr .   (rule 71)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 71 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 236

    msgsend  ->  expr '.' name '(' arglist1 . optkeyarglist ')' blocklist   (rule 51)
    arglist1  ->  arglist1 . ',' exprseq   (rule 81)

    ',' 	shift, and go to state 211

    $default	reduce using rule 85 (optkeyarglist)

    optkeyarglist	go to state 258



state 237

    msgsend  ->  expr '.' name '(' keyarglist1 . ')' blocklist   (rule 49)
    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 83)

    ',' 	shift, and go to state 215
    ')' 	shift, and go to state 259



state 238

    expr  ->  name '[' arglist1 ']' '=' . expr   (rule 74)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 260
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 239

    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 83)
    optkeyarglist  ->  ',' keyarglist1 .   (rule 86)

    ',' 	shift, and go to state 215

    $default	reduce using rule 86 (optkeyarglist)



state 240

    msgsend  ->  name '(' arglist1 optkeyarglist ')' . blocklist   (rule 47)
    expr  ->  name '(' arglist1 optkeyarglist ')' . '=' expr   (rule 72)

    '=' 	shift, and go to state 261
    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 207
    blocklist	go to state 262
    blockliteral	go to state 108
    block	go to state 37



state 241

    expr  ->  classname '(' arglist1 optkeyarglist ')' .   (rule 65)

    $default	reduce using rule 65 (expr)



state 242

    keyarglist1  ->  keyarglist1 ',' keyarg .   (rule 83)

    $default	reduce using rule 83 (keyarglist1)



state 243

    methoddef  ->  '*' name . '{' argdecls funcvardecls primitive methbody '}'   (rule 22)

    '{' 	shift, and go to state 263



state 244

    methoddef  ->  '*' binop . '{' argdecls funcvardecls primitive methbody '}'   (rule 24)

    '{' 	shift, and go to state 264



state 245

    methoddef  ->  name '{' . argdecls funcvardecls primitive methbody '}'   (rule 21)

    ARG 	shift, and go to state 68
    '|' 	shift, and go to state 69

    $default	reduce using rule 129 (argdecls)

    argdecls	go to state 265



state 246

    methoddef  ->  binop '{' . argdecls funcvardecls primitive methbody '}'   (rule 23)

    ARG 	shift, and go to state 68
    '|' 	shift, and go to state 69

    $default	reduce using rule 129 (argdecls)

    argdecls	go to state 266



state 247

    classdef  ->  classname '[' optname ']' superclass . '{' classvardecls methods '}'   (rule 9)

    '{' 	shift, and go to state 267



state 248

    classvardecl  ->  VAR . rwslotdeflist ';'   (rule 18)

    '<' 	shift, and go to state 268
    '>' 	shift, and go to state 269
    READWRITEVAR	shift, and go to state 270

    $default	reduce using rule 152 (rwspec)

    rwslotdeflist	go to state 271
    rwslotdef	go to state 272
    rwspec	go to state 273



state 249

    classvardecl  ->  CLASSVAR . rwslotdeflist ';'   (rule 17)

    '<' 	shift, and go to state 268
    '>' 	shift, and go to state 269
    READWRITEVAR	shift, and go to state 270

    $default	reduce using rule 152 (rwspec)

    rwslotdeflist	go to state 274
    rwslotdef	go to state 272
    rwspec	go to state 273



state 250

    classvardecls  ->  classvardecls classvardecl .   (rule 16)

    $default	reduce using rule 16 (classvardecls)



state 251

    classdef  ->  classname superclass '{' classvardecls methods . '}'   (rule 8)
    methods  ->  methods . methoddef   (rule 20)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 84
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 218
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '}' 	shift, and go to state 275

    methoddef	go to state 220
    name	go to state 221
    binop	go to state 222



state 252

    argdecls  ->  ARG slotdeflist0 ELLIPSIS name ';' .   (rule 131)

    $default	reduce using rule 131 (argdecls)



state 253

    argdecls  ->  '|' slotdeflist0 ELLIPSIS name '|' .   (rule 133)

    $default	reduce using rule 133 (argdecls)



state 254

    block  ->  '#' '{' argdecls funcvardecls funcbody '}' .   (rule 123)

    $default	reduce using rule 123 (block)



state 255

    listlit2  ->  classname '[' literallistc ']' .   (rule 147)

    $default	reduce using rule 147 (listlit2)



state 256

    msgsend  ->  expr '.' '(' arglist1 optkeyarglist ')' . blocklist   (rule 50)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 207
    blocklist	go to state 276
    blockliteral	go to state 108
    block	go to state 37



state 257

    msgsend  ->  expr '.' '(' keyarglist1 ')' blocklist .   (rule 48)

    $default	reduce using rule 48 (msgsend)



state 258

    msgsend  ->  expr '.' name '(' arglist1 optkeyarglist . ')' blocklist   (rule 51)

    ')' 	shift, and go to state 277



state 259

    msgsend  ->  expr '.' name '(' keyarglist1 ')' . blocklist   (rule 49)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 207
    blocklist	go to state 278
    blockliteral	go to state 108
    block	go to state 37



state 260

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)
    expr  ->  name '[' arglist1 ']' '=' expr .   (rule 74)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 74 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 261

    expr  ->  name '(' arglist1 optkeyarglist ')' '=' . expr   (rule 72)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 279
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 262

    msgsend  ->  name '(' arglist1 optkeyarglist ')' blocklist .   (rule 47)

    $default	reduce using rule 47 (msgsend)



state 263

    methoddef  ->  '*' name '{' . argdecls funcvardecls primitive methbody '}'   (rule 22)

    ARG 	shift, and go to state 68
    '|' 	shift, and go to state 69

    $default	reduce using rule 129 (argdecls)

    argdecls	go to state 280



state 264

    methoddef  ->  '*' binop '{' . argdecls funcvardecls primitive methbody '}'   (rule 24)

    ARG 	shift, and go to state 68
    '|' 	shift, and go to state 69

    $default	reduce using rule 129 (argdecls)

    argdecls	go to state 281



state 265

    methoddef  ->  name '{' argdecls . funcvardecls primitive methbody '}'   (rule 21)

    $default	reduce using rule 124 (funcvardecls)

    funcvardecls	go to state 282



state 266

    methoddef  ->  binop '{' argdecls . funcvardecls primitive methbody '}'   (rule 23)

    $default	reduce using rule 124 (funcvardecls)

    funcvardecls	go to state 283



state 267

    classdef  ->  classname '[' optname ']' superclass '{' . classvardecls methods '}'   (rule 9)

    $default	reduce using rule 15 (classvardecls)

    classvardecls	go to state 284



state 268

    rwspec  ->  '<' .   (rule 153)

    $default	reduce using rule 153 (rwspec)



state 269

    rwspec  ->  '>' .   (rule 155)

    $default	reduce using rule 155 (rwspec)



state 270

    rwspec  ->  READWRITEVAR .   (rule 154)

    $default	reduce using rule 154 (rwspec)



state 271

    classvardecl  ->  VAR rwslotdeflist . ';'   (rule 18)
    rwslotdeflist  ->  rwslotdeflist . ',' rwslotdef   (rule 141)

    ';' 	shift, and go to state 285
    ',' 	shift, and go to state 286



state 272

    rwslotdeflist  ->  rwslotdef .   (rule 140)

    $default	reduce using rule 140 (rwslotdeflist)



state 273

    rwslotdef  ->  rwspec . name   (rule 142)
    rwslotdef  ->  rwspec . name '=' slotliteral   (rule 143)

    NAME	shift, and go to state 6

    name	go to state 287



state 274

    classvardecl  ->  CLASSVAR rwslotdeflist . ';'   (rule 17)
    rwslotdeflist  ->  rwslotdeflist . ',' rwslotdef   (rule 141)

    ';' 	shift, and go to state 288
    ',' 	shift, and go to state 286



state 275

    classdef  ->  classname superclass '{' classvardecls methods '}' .   (rule 8)

    $default	reduce using rule 8 (classdef)



state 276

    msgsend  ->  expr '.' '(' arglist1 optkeyarglist ')' blocklist .   (rule 50)

    $default	reduce using rule 50 (msgsend)



state 277

    msgsend  ->  expr '.' name '(' arglist1 optkeyarglist ')' . blocklist   (rule 51)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 106

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 207
    blocklist	go to state 289
    blockliteral	go to state 108
    block	go to state 37



state 278

    msgsend  ->  expr '.' name '(' keyarglist1 ')' blocklist .   (rule 49)

    $default	reduce using rule 49 (msgsend)



state 279

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)
    expr  ->  name '(' arglist1 optkeyarglist ')' '=' expr .   (rule 72)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93

    $default	reduce using rule 72 (expr)

    binop	go to state 94
    keybinop	go to state 95



state 280

    methoddef  ->  '*' name '{' argdecls . funcvardecls primitive methbody '}'   (rule 22)

    $default	reduce using rule 124 (funcvardecls)

    funcvardecls	go to state 290



state 281

    methoddef  ->  '*' binop '{' argdecls . funcvardecls primitive methbody '}'   (rule 24)

    $default	reduce using rule 124 (funcvardecls)

    funcvardecls	go to state 291



state 282

    methoddef  ->  name '{' argdecls funcvardecls . primitive methbody '}'   (rule 21)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 125)

    PRIMITIVENAME	shift, and go to state 292
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 293
    funcvardecl	go to state 189
    primname	go to state 294



state 283

    methoddef  ->  binop '{' argdecls funcvardecls . primitive methbody '}'   (rule 23)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 125)

    PRIMITIVENAME	shift, and go to state 292
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 295
    funcvardecl	go to state 189
    primname	go to state 294



state 284

    classdef  ->  classname '[' optname ']' superclass '{' classvardecls . methods '}'   (rule 9)
    classvardecls  ->  classvardecls . classvardecl   (rule 16)

    VAR 	shift, and go to state 248
    CLASSVAR	shift, and go to state 249

    $default	reduce using rule 19 (methods)

    classvardecl	go to state 250
    methods	go to state 296



state 285

    classvardecl  ->  VAR rwslotdeflist ';' .   (rule 18)

    $default	reduce using rule 18 (classvardecl)



state 286

    rwslotdeflist  ->  rwslotdeflist ',' . rwslotdef   (rule 141)

    '<' 	shift, and go to state 268
    '>' 	shift, and go to state 269
    READWRITEVAR	shift, and go to state 270

    $default	reduce using rule 152 (rwspec)

    rwslotdef	go to state 297
    rwspec	go to state 273



state 287

    rwslotdef  ->  rwspec name .   (rule 142)
    rwslotdef  ->  rwspec name . '=' slotliteral   (rule 143)

    '=' 	shift, and go to state 298

    $default	reduce using rule 142 (rwslotdef)



state 288

    classvardecl  ->  CLASSVAR rwslotdeflist ';' .   (rule 17)

    $default	reduce using rule 17 (classvardecl)



state 289

    msgsend  ->  expr '.' name '(' arglist1 optkeyarglist ')' blocklist .   (rule 51)

    $default	reduce using rule 51 (msgsend)



state 290

    methoddef  ->  '*' name '{' argdecls funcvardecls . primitive methbody '}'   (rule 22)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 125)

    PRIMITIVENAME	shift, and go to state 292
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 299
    funcvardecl	go to state 189
    primname	go to state 294



state 291

    methoddef  ->  '*' binop '{' argdecls funcvardecls . primitive methbody '}'   (rule 24)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 125)

    PRIMITIVENAME	shift, and go to state 292
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 300
    funcvardecl	go to state 189
    primname	go to state 294



state 292

    primname  ->  PRIMITIVENAME .   (rule 168)

    $default	reduce using rule 168 (primname)



state 293

    methoddef  ->  name '{' argdecls funcvardecls primitive . methbody '}'   (rule 21)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 301
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 302
    retval	go to state 303
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 304
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 294

    primitive  ->  primname . optsemi   (rule 37)

    ';' 	shift, and go to state 129

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 305



state 295

    methoddef  ->  binop '{' argdecls funcvardecls primitive . methbody '}'   (rule 23)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 301
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 306
    retval	go to state 303
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 304
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 296

    classdef  ->  classname '[' optname ']' superclass '{' classvardecls methods . '}'   (rule 9)
    methods  ->  methods . methoddef   (rule 20)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 84
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 218
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '}' 	shift, and go to state 307

    methoddef	go to state 220
    name	go to state 221
    binop	go to state 222



state 297

    rwslotdeflist  ->  rwslotdeflist ',' rwslotdef .   (rule 141)

    $default	reduce using rule 141 (rwslotdeflist)



state 298

    rwslotdef  ->  rwspec name '=' . slotliteral   (rule 143)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '#' 	shift, and go to state 172

    slotliteral	go to state 308
    listlit	go to state 174
    integer	go to state 175
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 176
    trueobj	go to state 177
    falseobj	go to state 178
    nilobj	go to state 179
    infobj	go to state 180
    ascii	go to state 181
    symbol	go to state 182
    string	go to state 183
    string1	go to state 54



state 299

    methoddef  ->  '*' name '{' argdecls funcvardecls primitive . methbody '}'   (rule 22)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 301
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 309
    retval	go to state 303
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 304
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 300

    methoddef  ->  '*' binop '{' argdecls funcvardecls primitive . methbody '}'   (rule 24)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '^' 	shift, and go to state 301
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 310
    retval	go to state 303
    msgsend	go to state 31
    expr	go to state 32
    exprn	go to state 33
    exprseq	go to state 304
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 301

    retval  ->  '^' . expr optsemi   (rule 39)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 66
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr	go to state 311
    blockliteral	go to state 35
    pushliteral	go to state 36
    block	go to state 37
    listlit	go to state 40
    integer	go to state 41
    floatr	go to state 42
    pie 	go to state 43
    floatp	go to state 44
    name	go to state 45
    classname	go to state 46
    trueobj	go to state 47
    falseobj	go to state 48
    nilobj	go to state 49
    infobj	go to state 50
    ascii	go to state 51
    symbol	go to state 52
    string	go to state 53
    string1	go to state 54
    pseudovar	go to state 55



state 302

    methoddef  ->  name '{' argdecls funcvardecls primitive methbody . '}'   (rule 21)

    '}' 	shift, and go to state 312



state 303

    methbody  ->  retval .   (rule 34)

    $default	reduce using rule 34 (methbody)



state 304

    methbody  ->  exprseq . retval   (rule 35)

    '^' 	shift, and go to state 301

    $default	reduce using rule 38 (retval)

    retval	go to state 313



state 305

    primitive  ->  primname optsemi .   (rule 37)

    $default	reduce using rule 37 (primitive)



state 306

    methoddef  ->  binop '{' argdecls funcvardecls primitive methbody . '}'   (rule 23)

    '}' 	shift, and go to state 314



state 307

    classdef  ->  classname '[' optname ']' superclass '{' classvardecls methods '}' .   (rule 9)

    $default	reduce using rule 9 (classdef)



state 308

    rwslotdef  ->  rwspec name '=' slotliteral .   (rule 143)

    $default	reduce using rule 143 (rwslotdef)



state 309

    methoddef  ->  '*' name '{' argdecls funcvardecls primitive methbody . '}'   (rule 22)

    '}' 	shift, and go to state 315



state 310

    methoddef  ->  '*' binop '{' argdecls funcvardecls primitive methbody . '}'   (rule 24)

    '}' 	shift, and go to state 316



state 311

    retval  ->  '^' expr . optsemi   (rule 39)
    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . binop expr   (rule 67)
    expr  ->  expr . keybinop expr   (rule 68)
    expr  ->  expr . '.' name '=' expr   (rule 71)

    BINOP	shift, and go to state 84
    KEYBINOP	shift, and go to state 85
    '-' 	shift, and go to state 86
    '<' 	shift, and go to state 87
    '>' 	shift, and go to state 88
    '*' 	shift, and go to state 89
    '+' 	shift, and go to state 90
    '|' 	shift, and go to state 91
    READWRITEVAR	shift, and go to state 92
    '.' 	shift, and go to state 93
    ';' 	shift, and go to state 129

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 317
    binop	go to state 94
    keybinop	go to state 95



state 312

    methoddef  ->  name '{' argdecls funcvardecls primitive methbody '}' .   (rule 21)

    $default	reduce using rule 21 (methoddef)



state 313

    methbody  ->  exprseq retval .   (rule 35)

    $default	reduce using rule 35 (methbody)



state 314

    methoddef  ->  binop '{' argdecls funcvardecls primitive methbody '}' .   (rule 23)

    $default	reduce using rule 23 (methoddef)



state 315

    methoddef  ->  '*' name '{' argdecls funcvardecls primitive methbody '}' .   (rule 22)

    $default	reduce using rule 22 (methoddef)



state 316

    methoddef  ->  '*' binop '{' argdecls funcvardecls primitive methbody '}' .   (rule 24)

    $default	reduce using rule 24 (methoddef)



state 317

    retval  ->  '^' expr optsemi .   (rule 39)

    $default	reduce using rule 39 (retval)



state 318

    $   	go to state 319



state 319

    $   	go to state 320



state 320

    $default	accept
