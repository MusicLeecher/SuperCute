

Terminals which are not used:

   CONST
   BADTOKEN


Conflict in state 69 between rule 69 and token BINOP resolved as reduce.
Conflict in state 69 between rule 69 and token KEYBINOP resolved as reduce.
Conflict in state 69 between rule 69 and token '-' resolved as reduce.
Conflict in state 69 between rule 69 and token '<' resolved as reduce.
Conflict in state 69 between rule 69 and token '>' resolved as reduce.
Conflict in state 69 between rule 69 and token '*' resolved as reduce.
Conflict in state 69 between rule 69 and token '+' resolved as reduce.
Conflict in state 69 between rule 69 and token '|' resolved as reduce.
Conflict in state 69 between rule 69 and token READWRITEVAR resolved as reduce.
Conflict in state 69 between rule 69 and token DOUBLEEQUAL resolved as reduce.
Conflict in state 69 between rule 69 and token '.' resolved as reduce.
Conflict in state 168 between rule 70 and token BINOP resolved as reduce.
Conflict in state 168 between rule 70 and token KEYBINOP resolved as reduce.
Conflict in state 168 between rule 70 and token '-' resolved as reduce.
Conflict in state 168 between rule 70 and token '<' resolved as reduce.
Conflict in state 168 between rule 70 and token '>' resolved as reduce.
Conflict in state 168 between rule 70 and token '*' resolved as reduce.
Conflict in state 168 between rule 70 and token '+' resolved as reduce.
Conflict in state 168 between rule 70 and token '|' resolved as reduce.
Conflict in state 168 between rule 70 and token READWRITEVAR resolved as reduce.
Conflict in state 168 between rule 70 and token DOUBLEEQUAL resolved as reduce.
Conflict in state 168 between rule 70 and token '.' resolved as shift.
Conflict in state 169 between rule 71 and token BINOP resolved as reduce.
Conflict in state 169 between rule 71 and token KEYBINOP resolved as reduce.
Conflict in state 169 between rule 71 and token '-' resolved as reduce.
Conflict in state 169 between rule 71 and token '<' resolved as reduce.
Conflict in state 169 between rule 71 and token '>' resolved as reduce.
Conflict in state 169 between rule 71 and token '*' resolved as reduce.
Conflict in state 169 between rule 71 and token '+' resolved as reduce.
Conflict in state 169 between rule 71 and token '|' resolved as reduce.
Conflict in state 169 between rule 71 and token READWRITEVAR resolved as reduce.
Conflict in state 169 between rule 71 and token DOUBLEEQUAL resolved as reduce.
Conflict in state 169 between rule 71 and token '.' resolved as shift.
Conflict in state 171 between rule 72 and token BINOP resolved as shift.
Conflict in state 171 between rule 72 and token KEYBINOP resolved as shift.
Conflict in state 171 between rule 72 and token '-' resolved as shift.
Conflict in state 171 between rule 72 and token '<' resolved as shift.
Conflict in state 171 between rule 72 and token '>' resolved as shift.
Conflict in state 171 between rule 72 and token '*' resolved as shift.
Conflict in state 171 between rule 72 and token '+' resolved as shift.
Conflict in state 171 between rule 72 and token '|' resolved as shift.
Conflict in state 171 between rule 72 and token READWRITEVAR resolved as shift.
Conflict in state 171 between rule 72 and token DOUBLEEQUAL resolved as shift.
Conflict in state 171 between rule 72 and token '.' resolved as shift.
Conflict in state 208 between rule 73 and token BINOP resolved as shift.
Conflict in state 208 between rule 73 and token KEYBINOP resolved as shift.
Conflict in state 208 between rule 73 and token '-' resolved as shift.
Conflict in state 208 between rule 73 and token '<' resolved as shift.
Conflict in state 208 between rule 73 and token '>' resolved as shift.
Conflict in state 208 between rule 73 and token '*' resolved as shift.
Conflict in state 208 between rule 73 and token '+' resolved as shift.
Conflict in state 208 between rule 73 and token '|' resolved as shift.
Conflict in state 208 between rule 73 and token READWRITEVAR resolved as shift.
Conflict in state 208 between rule 73 and token DOUBLEEQUAL resolved as shift.
Conflict in state 208 between rule 73 and token '.' resolved as shift.
Conflict in state 215 between rule 76 and token BINOP resolved as shift.
Conflict in state 215 between rule 76 and token KEYBINOP resolved as shift.
Conflict in state 215 between rule 76 and token '-' resolved as shift.
Conflict in state 215 between rule 76 and token '<' resolved as shift.
Conflict in state 215 between rule 76 and token '>' resolved as shift.
Conflict in state 215 between rule 76 and token '*' resolved as shift.
Conflict in state 215 between rule 76 and token '+' resolved as shift.
Conflict in state 215 between rule 76 and token '|' resolved as shift.
Conflict in state 215 between rule 76 and token READWRITEVAR resolved as shift.
Conflict in state 215 between rule 76 and token DOUBLEEQUAL resolved as shift.
Conflict in state 215 between rule 76 and token '.' resolved as shift.
Conflict in state 254 between rule 74 and token BINOP resolved as shift.
Conflict in state 254 between rule 74 and token KEYBINOP resolved as shift.
Conflict in state 254 between rule 74 and token '-' resolved as shift.
Conflict in state 254 between rule 74 and token '<' resolved as shift.
Conflict in state 254 between rule 74 and token '>' resolved as shift.
Conflict in state 254 between rule 74 and token '*' resolved as shift.
Conflict in state 254 between rule 74 and token '+' resolved as shift.
Conflict in state 254 between rule 74 and token '|' resolved as shift.
Conflict in state 254 between rule 74 and token READWRITEVAR resolved as shift.
Conflict in state 254 between rule 74 and token DOUBLEEQUAL resolved as shift.
Conflict in state 254 between rule 74 and token '.' resolved as shift.
Conflict in state 274 between rule 77 and token BINOP resolved as shift.
Conflict in state 274 between rule 77 and token KEYBINOP resolved as shift.
Conflict in state 274 between rule 77 and token '-' resolved as shift.
Conflict in state 274 between rule 77 and token '<' resolved as shift.
Conflict in state 274 between rule 77 and token '>' resolved as shift.
Conflict in state 274 between rule 77 and token '*' resolved as shift.
Conflict in state 274 between rule 77 and token '+' resolved as shift.
Conflict in state 274 between rule 77 and token '|' resolved as shift.
Conflict in state 274 between rule 77 and token READWRITEVAR resolved as shift.
Conflict in state 274 between rule 77 and token DOUBLEEQUAL resolved as shift.
Conflict in state 274 between rule 77 and token '.' resolved as shift.
Conflict in state 295 between rule 78 and token BINOP resolved as shift.
Conflict in state 295 between rule 78 and token KEYBINOP resolved as shift.
Conflict in state 295 between rule 78 and token '-' resolved as shift.
Conflict in state 295 between rule 78 and token '<' resolved as shift.
Conflict in state 295 between rule 78 and token '>' resolved as shift.
Conflict in state 295 between rule 78 and token '*' resolved as shift.
Conflict in state 295 between rule 78 and token '+' resolved as shift.
Conflict in state 295 between rule 78 and token '|' resolved as shift.
Conflict in state 295 between rule 78 and token READWRITEVAR resolved as shift.
Conflict in state 295 between rule 78 and token DOUBLEEQUAL resolved as shift.
Conflict in state 295 between rule 78 and token '.' resolved as shift.
Conflict in state 299 between rule 75 and token BINOP resolved as shift.
Conflict in state 299 between rule 75 and token KEYBINOP resolved as shift.
Conflict in state 299 between rule 75 and token '-' resolved as shift.
Conflict in state 299 between rule 75 and token '<' resolved as shift.
Conflict in state 299 between rule 75 and token '>' resolved as shift.
Conflict in state 299 between rule 75 and token '*' resolved as shift.
Conflict in state 299 between rule 75 and token '+' resolved as shift.
Conflict in state 299 between rule 75 and token '|' resolved as shift.
Conflict in state 299 between rule 75 and token READWRITEVAR resolved as shift.
Conflict in state 299 between rule 75 and token DOUBLEEQUAL resolved as shift.
Conflict in state 299 between rule 75 and token '.' resolved as shift.

Grammar
rule 1    root -> classes
rule 2    root -> classextensions
rule 3    root -> INTERPRET cmdlinecode
rule 4    classes ->		/* empty */
rule 5    classes -> classes classdef
rule 6    classextensions -> classextension
rule 7    classextensions -> classextensions classextension
rule 8    classdef -> classname superclass '{' classvardecls methods '}'
rule 9    classdef -> classname '[' optname ']' superclass '{' classvardecls methods '}'
rule 10   classextension -> '+' classname '{' methods '}'
rule 11   optname ->		/* empty */
rule 12   optname -> name
rule 13   superclass ->		/* empty */
rule 14   superclass -> ':' classname
rule 15   classvardecls ->		/* empty */
rule 16   classvardecls -> classvardecls classvardecl
rule 17   classvardecl -> CLASSVAR rwslotdeflist ';'
rule 18   classvardecl -> VAR rwslotdeflist ';'
rule 19   methods ->		/* empty */
rule 20   methods -> methods methoddef
rule 21   methoddef -> name '{' argdecls funcvardecls primitive methbody '}'
rule 22   methoddef -> '*' name '{' argdecls funcvardecls primitive methbody '}'
rule 23   methoddef -> binop '{' argdecls funcvardecls primitive methbody '}'
rule 24   methoddef -> '*' binop '{' argdecls funcvardecls primitive methbody '}'
rule 25   optsemi ->		/* empty */
rule 26   optsemi -> ';'
rule 27   optcomma ->		/* empty */
rule 28   optcomma -> ','
rule 29   funcbody -> funretval
rule 30   funcbody -> exprseq funretval
rule 31   cmdlinecode -> '(' funcvardecls1 funcbody ')'
rule 32   cmdlinecode -> funcvardecls1 funcbody
rule 33   cmdlinecode -> funcbody
rule 34   methbody -> retval
rule 35   methbody -> exprseq retval
rule 36   primitive ->		/* empty */
rule 37   primitive -> primname optsemi
rule 38   retval ->		/* empty */
rule 39   retval -> '^' expr optsemi
rule 40   funretval ->		/* empty */
rule 41   funretval -> '^' expr optsemi
rule 42   blocklist1 -> blockliteral
rule 43   blocklist1 -> blocklist1 blockliteral
rule 44   blocklist ->		/* empty */
rule 45   blocklist -> blocklist1
rule 46   msgsend -> name blocklist1
rule 47   msgsend -> name '(' arglist1 optkeyarglist ')' blocklist
rule 48   msgsend -> expr '.' '(' keyarglist1 ')' blocklist
rule 49   msgsend -> expr '.' name '(' keyarglist1 ')' blocklist
rule 50   msgsend -> expr '.' '(' arglist1 optkeyarglist ')' blocklist
rule 51   msgsend -> expr '.' name '(' arglist1 optkeyarglist ')' blocklist
rule 52   msgsend -> expr '.' name blocklist
rule 53   expr1 -> pushliteral
rule 54   expr1 -> blockliteral
rule 55   expr1 -> pushname
rule 56   expr1 -> msgsend
rule 57   expr1 -> '(' exprseq ')'
rule 58   expr1 -> '~' name
rule 59   expr1 -> '[' arglistc ']'
rule 60   expr1 -> '(' dictslotlist ')'
rule 61   expr1 -> pseudovar
rule 62   expr1 -> classname '(' keyarglist1 ')'
rule 63   expr1 -> classname '(' arglist1 optkeyarglist ')'
rule 64   expr1 -> classname '[' arglistc ']'
rule 65   expr1 -> expr1 '[' arglist1 ']'
rule 66   expr -> expr1
rule 67   expr -> expr '.' '[' arglist1 ']'
rule 68   expr -> classname
rule 69   expr -> '`' expr
rule 70   expr -> expr binop expr
rule 71   expr -> expr keybinop expr
rule 72   expr -> name '=' expr
rule 73   expr -> '~' name '=' expr
rule 74   expr -> expr '.' name '=' expr
rule 75   expr -> name '(' arglist1 optkeyarglist ')' '=' expr
rule 76   expr -> '#' mavars '=' expr
rule 77   expr -> expr1 '[' arglist1 ']' '=' expr
rule 78   expr -> expr '.' '[' arglist1 ']' '=' expr
rule 79   exprn -> expr
rule 80   exprn -> exprn ';' expr
rule 81   exprseq -> exprn optsemi
rule 82   arglistc ->		/* empty */
rule 83   arglistc -> arglist1 optcomma
rule 84   arglist1 -> exprseq
rule 85   arglist1 -> arglist1 ',' exprseq
rule 86   keyarglist1 -> keyarg
rule 87   keyarglist1 -> keyarglist1 ',' keyarg
rule 88   keyarg -> keybinop exprseq
rule 89   optkeyarglist ->		/* empty */
rule 90   optkeyarglist -> ',' keyarglist1
rule 91   mavars -> mavarlist
rule 92   mavars -> mavarlist ELLIPSIS name
rule 93   mavarlist -> name
rule 94   mavarlist -> mavarlist ',' name
rule 95   slotliteral -> integer
rule 96   slotliteral -> floatp
rule 97   slotliteral -> ascii
rule 98   slotliteral -> string
rule 99   slotliteral -> symbol
rule 100  slotliteral -> trueobj
rule 101  slotliteral -> falseobj
rule 102  slotliteral -> nilobj
rule 103  slotliteral -> infobj
rule 104  slotliteral -> listlit
rule 105  blockliteral -> block
rule 106  pushname -> name
rule 107  pushliteral -> integer
rule 108  pushliteral -> floatp
rule 109  pushliteral -> ascii
rule 110  pushliteral -> string
rule 111  pushliteral -> symbol
rule 112  pushliteral -> trueobj
rule 113  pushliteral -> falseobj
rule 114  pushliteral -> nilobj
rule 115  pushliteral -> infobj
rule 116  pushliteral -> listlit
rule 117  listliteral -> integer
rule 118  listliteral -> floatp
rule 119  listliteral -> ascii
rule 120  listliteral -> string
rule 121  listliteral -> symbol
rule 122  listliteral -> trueobj
rule 123  listliteral -> falseobj
rule 124  listliteral -> nilobj
rule 125  listliteral -> infobj
rule 126  listliteral -> listlit2
rule 127  block -> '{' argdecls funcvardecls funcbody '}'
rule 128  block -> '#' '{' argdecls funcvardecls funcbody '}'
rule 129  funcvardecls ->		/* empty */
rule 130  funcvardecls -> funcvardecls funcvardecl
rule 131  funcvardecls1 -> funcvardecl
rule 132  funcvardecls1 -> funcvardecls1 funcvardecl
rule 133  funcvardecl -> VAR slotdeflist ';'
rule 134  argdecls ->		/* empty */
rule 135  argdecls -> ARG slotdeflist ';'
rule 136  argdecls -> ARG slotdeflist0 ELLIPSIS name ';'
rule 137  argdecls -> '|' slotdeflist '|'
rule 138  argdecls -> '|' slotdeflist0 ELLIPSIS name '|'
rule 139  slotdeflist0 ->		/* empty */
rule 140  slotdeflist0 -> slotdeflist
rule 141  slotdeflist -> slotdef
rule 142  slotdeflist -> slotdeflist ',' slotdef
rule 143  slotdef -> name
rule 144  slotdef -> name '=' slotliteral
rule 145  dictslotdef -> expr ':' expr
rule 146  dictslotdef -> keybinop expr
rule 147  dictslotlist1 -> dictslotdef
rule 148  dictslotlist1 -> dictslotlist1 ',' dictslotdef
rule 149  dictslotlist ->		/* empty */
rule 150  dictslotlist -> dictslotlist1
rule 151  rwslotdeflist -> rwslotdef
rule 152  rwslotdeflist -> rwslotdeflist ',' rwslotdef
rule 153  rwslotdef -> rwspec name
rule 154  rwslotdef -> rwspec name '=' slotliteral
rule 155  listlit -> '#' '[' literallistc ']'
rule 156  listlit -> '#' classname '[' literallistc ']'
rule 157  listlit2 -> '[' literallistc ']'
rule 158  listlit2 -> classname '[' literallistc ']'
rule 159  literallistc ->		/* empty */
rule 160  literallistc -> literallist1 optcomma
rule 161  literallist1 -> listliteral
rule 162  literallist1 -> literallist1 ',' listliteral
rule 163  rwspec ->		/* empty */
rule 164  rwspec -> '<'
rule 165  rwspec -> READWRITEVAR
rule 166  rwspec -> '>'
rule 167  integer -> INTEGER
rule 168  integer -> '-' INTEGER
rule 169  floatr -> FLOAT
rule 170  floatr -> '-' FLOAT
rule 171  pie -> PIE
rule 172  floatp -> floatr
rule 173  floatp -> floatr pie
rule 174  floatp -> integer pie
rule 175  floatp -> pie
rule 176  floatp -> '-' pie
rule 177  name -> NAME
rule 178  classname -> CLASSNAME
rule 179  primname -> PRIMITIVENAME
rule 180  trueobj -> TRUEOBJ
rule 181  falseobj -> FALSEOBJ
rule 182  nilobj -> NILOBJ
rule 183  infobj -> INFINITUMOBJ
rule 184  ascii -> ASCII
rule 185  symbol -> SYMBOL
rule 186  string -> string1
rule 187  string -> string string1
rule 188  string1 -> STRING
rule 189  pseudovar -> PSEUDOVAR
rule 190  binop -> BINOP
rule 191  binop -> READWRITEVAR
rule 192  binop -> DOUBLEEQUAL
rule 193  binop -> '<'
rule 194  binop -> '>'
rule 195  binop -> '-'
rule 196  binop -> '*'
rule 197  binop -> '+'
rule 198  binop -> '|'
rule 199  keybinop -> KEYBINOP

Terminals, with rules where they appear

$ (-1)
'#' (35) 76 128 155 156
'(' (40) 31 47 48 49 50 51 57 60 62 63 75
')' (41) 31 47 48 49 50 51 57 60 62 63 75
'*' (42) 22 24 196
'+' (43) 10 197
',' (44) 28 85 87 90 94 142 148 152 162
'-' (45) 168 170 176 195
'.' (46) 48 49 50 51 52 67 74 78
':' (58) 14 145
';' (59) 17 18 26 80 133 135 136
'<' (60) 164 193
'=' (61) 72 73 74 75 76 77 78 144 154
'>' (62) 166 194
'[' (91) 9 59 64 65 67 77 78 155 156 157 158
']' (93) 9 59 64 65 67 77 78 155 156 157 158
'^' (94) 39 41
'`' (96) 69
'{' (123) 8 9 10 21 22 23 24 127 128
'|' (124) 137 138 198
'}' (125) 8 9 10 21 22 23 24 127 128
'~' (126) 58 73
error (256)
NAME (257) 177
INTEGER (258) 167 168
FLOAT (259) 169 170
SYMBOL (260) 185
STRING (261) 188
ASCII (262) 184
PRIMITIVENAME (263) 179
CLASSNAME (264) 178
VAR (265) 18 133
ARG (266) 135 136
CLASSVAR (267) 17
CONST (268)
NILOBJ (269) 182
TRUEOBJ (270) 180
FALSEOBJ (271) 181
INFINITUMOBJ (272) 183
PSEUDOVAR (273) 189
ELLIPSIS (274) 92 136 138
PIE (275) 171
BADTOKEN (276)
INTERPRET (277) 3
BINOP (278) 190
KEYBINOP (279) 199
READWRITEVAR (280) 165 191
DOUBLEEQUAL (281) 192
UMINUS (282)

Nonterminals, with rules where they appear

root (50)
    on left: 1 2 3
classes (51)
    on left: 4 5, on right: 1 5
classextensions (52)
    on left: 6 7, on right: 2 7
classdef (53)
    on left: 8 9, on right: 5
classextension (54)
    on left: 10, on right: 6 7
optname (55)
    on left: 11 12, on right: 9
superclass (56)
    on left: 13 14, on right: 8 9
classvardecls (57)
    on left: 15 16, on right: 8 9 16
classvardecl (58)
    on left: 17 18, on right: 16
methods (59)
    on left: 19 20, on right: 8 9 10 20
methoddef (60)
    on left: 21 22 23 24, on right: 20
optsemi (61)
    on left: 25 26, on right: 37 39 41 81
optcomma (62)
    on left: 27 28, on right: 83 160
funcbody (63)
    on left: 29 30, on right: 31 32 33 127 128
cmdlinecode (64)
    on left: 31 32 33, on right: 3
methbody (65)
    on left: 34 35, on right: 21 22 23 24
primitive (66)
    on left: 36 37, on right: 21 22 23 24
retval (67)
    on left: 38 39, on right: 34 35
funretval (68)
    on left: 40 41, on right: 29 30
blocklist1 (69)
    on left: 42 43, on right: 43 45 46
blocklist (70)
    on left: 44 45, on right: 47 48 49 50 51 52
msgsend (71)
    on left: 46 47 48 49 50 51 52, on right: 56
expr1 (72)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 65 66 77
expr (73)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78,
    on right: 39 41 48 49 50 51 52 67 69 70 71 72 73 74 75 76 77 78
    79 80 145 146
exprn (74)
    on left: 79 80, on right: 80 81
exprseq (75)
    on left: 81, on right: 30 35 57 84 85 88
arglistc (76)
    on left: 82 83, on right: 59 64
arglist1 (77)
    on left: 84 85, on right: 47 50 51 63 65 67 75 77 78 83 85
keyarglist1 (78)
    on left: 86 87, on right: 48 49 62 87 90
keyarg (79)
    on left: 88, on right: 86 87
optkeyarglist (80)
    on left: 89 90, on right: 47 50 51 63 75
mavars (81)
    on left: 91 92, on right: 76
mavarlist (82)
    on left: 93 94, on right: 91 92 94
slotliteral (83)
    on left: 95 96 97 98 99 100 101 102 103 104, on right: 144 154
blockliteral (84)
    on left: 105, on right: 42 43 54
pushname (85)
    on left: 106, on right: 55
pushliteral (86)
    on left: 107 108 109 110 111 112 113 114 115 116,
    on right: 53
listliteral (87)
    on left: 117 118 119 120 121 122 123 124 125 126,
    on right: 161 162
block (88)
    on left: 127 128, on right: 105
funcvardecls (89)
    on left: 129 130, on right: 21 22 23 24 127 128 130
funcvardecls1 (90)
    on left: 131 132, on right: 31 32 132
funcvardecl (91)
    on left: 133, on right: 130 131 132
argdecls (92)
    on left: 134 135 136 137 138, on right: 21 22 23 24 127 128
slotdeflist0 (93)
    on left: 139 140, on right: 136 138
slotdeflist (94)
    on left: 141 142, on right: 133 135 137 140 142
slotdef (95)
    on left: 143 144, on right: 141 142
dictslotdef (96)
    on left: 145 146, on right: 147 148
dictslotlist1 (97)
    on left: 147 148, on right: 148 150
dictslotlist (98)
    on left: 149 150, on right: 60
rwslotdeflist (99)
    on left: 151 152, on right: 17 18 152
rwslotdef (100)
    on left: 153 154, on right: 151 152
listlit (101)
    on left: 155 156, on right: 104 116
listlit2 (102)
    on left: 157 158, on right: 126
literallistc (103)
    on left: 159 160, on right: 155 156 157 158
literallist1 (104)
    on left: 161 162, on right: 160 162
rwspec (105)
    on left: 163 164 165 166, on right: 153 154
integer (106)
    on left: 167 168, on right: 95 107 117 174
floatr (107)
    on left: 169 170, on right: 172 173
pie (108)
    on left: 171, on right: 173 174 175 176
floatp (109)
    on left: 172 173 174 175 176, on right: 96 108 118
name (110)
    on left: 177, on right: 12 21 22 46 47 49 51 52 58 72 73 74 75
    92 93 94 106 136 138 143 144 153 154
classname (111)
    on left: 178, on right: 8 9 10 14 62 63 64 68 156 158
primname (112)
    on left: 179, on right: 37
trueobj (113)
    on left: 180, on right: 100 112 122
falseobj (114)
    on left: 181, on right: 101 113 123
nilobj (115)
    on left: 182, on right: 102 114 124
infobj (116)
    on left: 183, on right: 103 115 125
ascii (117)
    on left: 184, on right: 97 109 119
symbol (118)
    on left: 185, on right: 99 111 121
string (119)
    on left: 186 187, on right: 98 110 120 187
string1 (120)
    on left: 188, on right: 186 187
pseudovar (121)
    on left: 189, on right: 61
binop (122)
    on left: 190 191 192 193 194 195 196 197 198, on right: 23 24 70
keybinop (123)
    on left: 199, on right: 71 88 146


state 0

    INTERPRET	shift, and go to state 1
    '+' 	shift, and go to state 2

    $default	reduce using rule 4 (classes)

    root	go to state 338
    classes	go to state 3
    classextensions	go to state 4
    classextension	go to state 5



state 1

    root  ->  INTERPRET . cmdlinecode   (rule 3)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 28
    cmdlinecode	go to state 29
    funretval	go to state 30
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 35
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    funcvardecls1	go to state 40
    funcvardecl	go to state 41
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 2

    classextension  ->  '+' . classname '{' methods '}'   (rule 10)

    CLASSNAME	shift, and go to state 12

    classname	go to state 58



state 3

    root  ->  classes .   (rule 1)
    classes  ->  classes . classdef   (rule 5)

    CLASSNAME	shift, and go to state 12

    $default	reduce using rule 1 (root)

    classdef	go to state 59
    classname	go to state 60



state 4

    root  ->  classextensions .   (rule 2)
    classextensions  ->  classextensions . classextension   (rule 7)

    '+' 	shift, and go to state 2

    $default	reduce using rule 2 (root)

    classextension	go to state 61



state 5

    classextensions  ->  classextension .   (rule 6)

    $default	reduce using rule 6 (classextensions)



state 6

    name  ->  NAME .   (rule 177)

    $default	reduce using rule 177 (name)



state 7

    integer  ->  INTEGER .   (rule 167)

    $default	reduce using rule 167 (integer)



state 8

    floatr  ->  FLOAT .   (rule 169)

    $default	reduce using rule 169 (floatr)



state 9

    symbol  ->  SYMBOL .   (rule 185)

    $default	reduce using rule 185 (symbol)



state 10

    string1  ->  STRING .   (rule 188)

    $default	reduce using rule 188 (string1)



state 11

    ascii  ->  ASCII .   (rule 184)

    $default	reduce using rule 184 (ascii)



state 12

    classname  ->  CLASSNAME .   (rule 178)

    $default	reduce using rule 178 (classname)



state 13

    funcvardecl  ->  VAR . slotdeflist ';'   (rule 133)

    NAME	shift, and go to state 6

    slotdeflist	go to state 62
    slotdef	go to state 63
    name	go to state 64



state 14

    nilobj  ->  NILOBJ .   (rule 182)

    $default	reduce using rule 182 (nilobj)



state 15

    trueobj  ->  TRUEOBJ .   (rule 180)

    $default	reduce using rule 180 (trueobj)



state 16

    falseobj  ->  FALSEOBJ .   (rule 181)

    $default	reduce using rule 181 (falseobj)



state 17

    infobj  ->  INFINITUMOBJ .   (rule 183)

    $default	reduce using rule 183 (infobj)



state 18

    pseudovar  ->  PSEUDOVAR .   (rule 189)

    $default	reduce using rule 189 (pseudovar)



state 19

    pie  ->  PIE .   (rule 171)

    $default	reduce using rule 171 (pie)



state 20

    integer  ->  '-' . INTEGER   (rule 168)
    floatr  ->  '-' . FLOAT   (rule 170)
    floatp  ->  '-' . pie   (rule 176)

    INTEGER	shift, and go to state 65
    FLOAT	shift, and go to state 66
    PIE 	shift, and go to state 19

    pie 	go to state 67



state 21

    expr  ->  '`' . expr   (rule 69)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 69
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 22

    block  ->  '{' . argdecls funcvardecls funcbody '}'   (rule 127)

    ARG 	shift, and go to state 70
    '|' 	shift, and go to state 71

    $default	reduce using rule 134 (argdecls)

    argdecls	go to state 72



state 23

    expr1  ->  '[' . arglistc ']'   (rule 59)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 82 (arglistc)

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglistc	go to state 74
    arglist1	go to state 75
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 24

    cmdlinecode  ->  '(' . funcvardecls1 funcbody ')'   (rule 31)
    expr1  ->  '(' . exprseq ')'   (rule 57)
    expr1  ->  '(' . dictslotlist ')'   (rule 60)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 149 (dictslotlist)

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 77
    exprn	go to state 34
    exprseq	go to state 78
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    funcvardecls1	go to state 79
    funcvardecl	go to state 41
    dictslotdef	go to state 80
    dictslotlist1	go to state 81
    dictslotlist	go to state 82
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 83



state 25

    funretval  ->  '^' . expr optsemi   (rule 41)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 84
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 26

    expr1  ->  '~' . name   (rule 58)
    expr  ->  '~' . name '=' expr   (rule 73)

    NAME	shift, and go to state 6

    name	go to state 85



state 27

    expr  ->  '#' . mavars '=' expr   (rule 76)
    block  ->  '#' . '{' argdecls funcvardecls funcbody '}'   (rule 128)
    listlit  ->  '#' . '[' literallistc ']'   (rule 155)
    listlit  ->  '#' . classname '[' literallistc ']'   (rule 156)

    NAME	shift, and go to state 6
    CLASSNAME	shift, and go to state 12
    '{' 	shift, and go to state 86
    '[' 	shift, and go to state 87

    mavars	go to state 88
    mavarlist	go to state 89
    name	go to state 90
    classname	go to state 91



state 28

    cmdlinecode  ->  funcbody .   (rule 33)

    $default	reduce using rule 33 (cmdlinecode)



state 29

    root  ->  INTERPRET cmdlinecode .   (rule 3)

    $default	reduce using rule 3 (root)



state 30

    funcbody  ->  funretval .   (rule 29)

    $default	reduce using rule 29 (funcbody)



state 31

    expr1  ->  msgsend .   (rule 56)

    $default	reduce using rule 56 (expr1)



state 32

    expr1  ->  expr1 . '[' arglist1 ']'   (rule 65)
    expr  ->  expr1 .   (rule 66)
    expr  ->  expr1 . '[' arglist1 ']' '=' expr   (rule 77)

    '[' 	shift, and go to state 92

    $default	reduce using rule 66 (expr)



state 33

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    exprn  ->  expr .   (rule 79)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 79 (exprn)

    binop	go to state 103
    keybinop	go to state 104



state 34

    exprn  ->  exprn . ';' expr   (rule 80)
    exprseq  ->  exprn . optsemi   (rule 81)

    ';' 	shift, and go to state 105

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 106



state 35

    funcbody  ->  exprseq . funretval   (rule 30)

    '^' 	shift, and go to state 25

    $default	reduce using rule 40 (funretval)

    funretval	go to state 107



state 36

    expr1  ->  blockliteral .   (rule 54)

    $default	reduce using rule 54 (expr1)



state 37

    expr1  ->  pushname .   (rule 55)

    $default	reduce using rule 55 (expr1)



state 38

    expr1  ->  pushliteral .   (rule 53)

    $default	reduce using rule 53 (expr1)



state 39

    blockliteral  ->  block .   (rule 105)

    $default	reduce using rule 105 (blockliteral)



state 40

    cmdlinecode  ->  funcvardecls1 . funcbody   (rule 32)
    funcvardecls1  ->  funcvardecls1 . funcvardecl   (rule 132)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 108
    funretval	go to state 30
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 35
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    funcvardecl	go to state 109
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 41

    funcvardecls1  ->  funcvardecl .   (rule 131)

    $default	reduce using rule 131 (funcvardecls1)



state 42

    pushliteral  ->  listlit .   (rule 116)

    $default	reduce using rule 116 (pushliteral)



state 43

    pushliteral  ->  integer .   (rule 107)
    floatp  ->  integer . pie   (rule 174)

    PIE 	shift, and go to state 19

    $default	reduce using rule 107 (pushliteral)

    pie 	go to state 110



state 44

    floatp  ->  floatr .   (rule 172)
    floatp  ->  floatr . pie   (rule 173)

    PIE 	shift, and go to state 19

    $default	reduce using rule 172 (floatp)

    pie 	go to state 111



state 45

    floatp  ->  pie .   (rule 175)

    $default	reduce using rule 175 (floatp)



state 46

    pushliteral  ->  floatp .   (rule 108)

    $default	reduce using rule 108 (pushliteral)



state 47

    msgsend  ->  name . blocklist1   (rule 46)
    msgsend  ->  name . '(' arglist1 optkeyarglist ')' blocklist   (rule 47)
    expr  ->  name . '=' expr   (rule 72)
    expr  ->  name . '(' arglist1 optkeyarglist ')' '=' expr   (rule 75)
    pushname  ->  name .   (rule 106)

    '=' 	shift, and go to state 112
    '{' 	shift, and go to state 22
    '(' 	shift, and go to state 113
    '#' 	shift, and go to state 114

    $default	reduce using rule 106 (pushname)

    blocklist1	go to state 115
    blockliteral	go to state 116
    block	go to state 39



state 48

    expr1  ->  classname . '(' keyarglist1 ')'   (rule 62)
    expr1  ->  classname . '(' arglist1 optkeyarglist ')'   (rule 63)
    expr1  ->  classname . '[' arglistc ']'   (rule 64)
    expr  ->  classname .   (rule 68)

    '[' 	shift, and go to state 117
    '(' 	shift, and go to state 118

    $default	reduce using rule 68 (expr)



state 49

    pushliteral  ->  trueobj .   (rule 112)

    $default	reduce using rule 112 (pushliteral)



state 50

    pushliteral  ->  falseobj .   (rule 113)

    $default	reduce using rule 113 (pushliteral)



state 51

    pushliteral  ->  nilobj .   (rule 114)

    $default	reduce using rule 114 (pushliteral)



state 52

    pushliteral  ->  infobj .   (rule 115)

    $default	reduce using rule 115 (pushliteral)



state 53

    pushliteral  ->  ascii .   (rule 109)

    $default	reduce using rule 109 (pushliteral)



state 54

    pushliteral  ->  symbol .   (rule 111)

    $default	reduce using rule 111 (pushliteral)



state 55

    pushliteral  ->  string .   (rule 110)
    string  ->  string . string1   (rule 187)

    STRING	shift, and go to state 10

    $default	reduce using rule 110 (pushliteral)

    string1	go to state 119



state 56

    string  ->  string1 .   (rule 186)

    $default	reduce using rule 186 (string)



state 57

    expr1  ->  pseudovar .   (rule 61)

    $default	reduce using rule 61 (expr1)



state 58

    classextension  ->  '+' classname . '{' methods '}'   (rule 10)

    '{' 	shift, and go to state 120



state 59

    classes  ->  classes classdef .   (rule 5)

    $default	reduce using rule 5 (classes)



state 60

    classdef  ->  classname . superclass '{' classvardecls methods '}'   (rule 8)
    classdef  ->  classname . '[' optname ']' superclass '{' classvardecls methods '}'   (rule 9)

    ':' 	shift, and go to state 121
    '[' 	shift, and go to state 122

    $default	reduce using rule 13 (superclass)

    superclass	go to state 123



state 61

    classextensions  ->  classextensions classextension .   (rule 7)

    $default	reduce using rule 7 (classextensions)



state 62

    funcvardecl  ->  VAR slotdeflist . ';'   (rule 133)
    slotdeflist  ->  slotdeflist . ',' slotdef   (rule 142)

    ';' 	shift, and go to state 124
    ',' 	shift, and go to state 125



state 63

    slotdeflist  ->  slotdef .   (rule 141)

    $default	reduce using rule 141 (slotdeflist)



state 64

    slotdef  ->  name .   (rule 143)
    slotdef  ->  name . '=' slotliteral   (rule 144)

    '=' 	shift, and go to state 126

    $default	reduce using rule 143 (slotdef)



state 65

    integer  ->  '-' INTEGER .   (rule 168)

    $default	reduce using rule 168 (integer)



state 66

    floatr  ->  '-' FLOAT .   (rule 170)

    $default	reduce using rule 170 (floatr)



state 67

    floatp  ->  '-' pie .   (rule 176)

    $default	reduce using rule 176 (floatp)



state 68

    expr1  ->  '(' . exprseq ')'   (rule 57)
    expr1  ->  '(' . dictslotlist ')'   (rule 60)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 149 (dictslotlist)

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 77
    exprn	go to state 34
    exprseq	go to state 78
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    dictslotdef	go to state 80
    dictslotlist1	go to state 81
    dictslotlist	go to state 82
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 83



state 69

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  '`' expr .   (rule 69)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)


    $default	reduce using rule 69 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 70

    argdecls  ->  ARG . slotdeflist ';'   (rule 135)
    argdecls  ->  ARG . slotdeflist0 ELLIPSIS name ';'   (rule 136)

    NAME	shift, and go to state 6

    $default	reduce using rule 139 (slotdeflist0)

    slotdeflist0	go to state 127
    slotdeflist	go to state 128
    slotdef	go to state 63
    name	go to state 64



state 71

    argdecls  ->  '|' . slotdeflist '|'   (rule 137)
    argdecls  ->  '|' . slotdeflist0 ELLIPSIS name '|'   (rule 138)

    NAME	shift, and go to state 6

    $default	reduce using rule 139 (slotdeflist0)

    slotdeflist0	go to state 129
    slotdeflist	go to state 130
    slotdef	go to state 63
    name	go to state 64



state 72

    block  ->  '{' argdecls . funcvardecls funcbody '}'   (rule 127)

    $default	reduce using rule 129 (funcvardecls)

    funcvardecls	go to state 131



state 73

    arglist1  ->  exprseq .   (rule 84)

    $default	reduce using rule 84 (arglist1)



state 74

    expr1  ->  '[' arglistc . ']'   (rule 59)

    ']' 	shift, and go to state 132



state 75

    arglistc  ->  arglist1 . optcomma   (rule 83)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ',' 	shift, and go to state 133

    $default	reduce using rule 27 (optcomma)

    optcomma	go to state 134



state 76

    keybinop  ->  KEYBINOP .   (rule 199)

    $default	reduce using rule 199 (keybinop)



state 77

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    exprn  ->  expr .   (rule 79)
    dictslotdef  ->  expr . ':' expr   (rule 145)

    ':' 	shift, and go to state 135
    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 79 (exprn)

    binop	go to state 103
    keybinop	go to state 104



state 78

    expr1  ->  '(' exprseq . ')'   (rule 57)

    ')' 	shift, and go to state 136



state 79

    cmdlinecode  ->  '(' funcvardecls1 . funcbody ')'   (rule 31)
    funcvardecls1  ->  funcvardecls1 . funcvardecl   (rule 132)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 137
    funretval	go to state 30
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 35
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    funcvardecl	go to state 109
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 80

    dictslotlist1  ->  dictslotdef .   (rule 147)

    $default	reduce using rule 147 (dictslotlist1)



state 81

    dictslotlist1  ->  dictslotlist1 . ',' dictslotdef   (rule 148)
    dictslotlist  ->  dictslotlist1 .   (rule 150)

    ',' 	shift, and go to state 138

    $default	reduce using rule 150 (dictslotlist)



state 82

    expr1  ->  '(' dictslotlist . ')'   (rule 60)

    ')' 	shift, and go to state 139



state 83

    dictslotdef  ->  keybinop . expr   (rule 146)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 140
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 84

    funretval  ->  '^' expr . optsemi   (rule 41)
    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102
    ';' 	shift, and go to state 141

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 142
    binop	go to state 103
    keybinop	go to state 104



state 85

    expr1  ->  '~' name .   (rule 58)
    expr  ->  '~' name . '=' expr   (rule 73)

    '=' 	shift, and go to state 143

    $default	reduce using rule 58 (expr1)



state 86

    block  ->  '#' '{' . argdecls funcvardecls funcbody '}'   (rule 128)

    ARG 	shift, and go to state 70
    '|' 	shift, and go to state 71

    $default	reduce using rule 134 (argdecls)

    argdecls	go to state 144



state 87

    listlit  ->  '#' '[' . literallistc ']'   (rule 155)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 145

    $default	reduce using rule 159 (literallistc)

    listliteral	go to state 146
    listlit2	go to state 147
    literallistc	go to state 148
    literallist1	go to state 149
    integer	go to state 150
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 151
    classname	go to state 152
    trueobj	go to state 153
    falseobj	go to state 154
    nilobj	go to state 155
    infobj	go to state 156
    ascii	go to state 157
    symbol	go to state 158
    string	go to state 159
    string1	go to state 56



state 88

    expr  ->  '#' mavars . '=' expr   (rule 76)

    '=' 	shift, and go to state 160



state 89

    mavars  ->  mavarlist .   (rule 91)
    mavars  ->  mavarlist . ELLIPSIS name   (rule 92)
    mavarlist  ->  mavarlist . ',' name   (rule 94)

    ELLIPSIS	shift, and go to state 161
    ',' 	shift, and go to state 162

    $default	reduce using rule 91 (mavars)



state 90

    mavarlist  ->  name .   (rule 93)

    $default	reduce using rule 93 (mavarlist)



state 91

    listlit  ->  '#' classname . '[' literallistc ']'   (rule 156)

    '[' 	shift, and go to state 163



state 92

    expr1  ->  expr1 '[' . arglist1 ']'   (rule 65)
    expr  ->  expr1 '[' . arglist1 ']' '=' expr   (rule 77)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglist1	go to state 164
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 93

    binop  ->  BINOP .   (rule 190)

    $default	reduce using rule 190 (binop)



state 94

    binop  ->  '-' .   (rule 195)

    $default	reduce using rule 195 (binop)



state 95

    binop  ->  '<' .   (rule 193)

    $default	reduce using rule 193 (binop)



state 96

    binop  ->  '>' .   (rule 194)

    $default	reduce using rule 194 (binop)



state 97

    binop  ->  '*' .   (rule 196)

    $default	reduce using rule 196 (binop)



state 98

    binop  ->  '+' .   (rule 197)

    $default	reduce using rule 197 (binop)



state 99

    binop  ->  '|' .   (rule 198)

    $default	reduce using rule 198 (binop)



state 100

    binop  ->  READWRITEVAR .   (rule 191)

    $default	reduce using rule 191 (binop)



state 101

    binop  ->  DOUBLEEQUAL .   (rule 192)

    $default	reduce using rule 192 (binop)



state 102

    msgsend  ->  expr '.' . '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr '.' . name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr '.' . '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr '.' . name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr '.' . name blocklist   (rule 52)
    expr  ->  expr '.' . '[' arglist1 ']'   (rule 67)
    expr  ->  expr '.' . name '=' expr   (rule 74)
    expr  ->  expr '.' . '[' arglist1 ']' '=' expr   (rule 78)

    NAME	shift, and go to state 6
    '[' 	shift, and go to state 165
    '(' 	shift, and go to state 166

    name	go to state 167



state 103

    expr  ->  expr binop . expr   (rule 70)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 168
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 104

    expr  ->  expr keybinop . expr   (rule 71)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 169
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 105

    optsemi  ->  ';' .   (rule 26)
    exprn  ->  exprn ';' . expr   (rule 80)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 26 (optsemi)

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 170
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 106

    exprseq  ->  exprn optsemi .   (rule 81)

    $default	reduce using rule 81 (exprseq)



state 107

    funcbody  ->  exprseq funretval .   (rule 30)

    $default	reduce using rule 30 (funcbody)



state 108

    cmdlinecode  ->  funcvardecls1 funcbody .   (rule 32)

    $default	reduce using rule 32 (cmdlinecode)



state 109

    funcvardecls1  ->  funcvardecls1 funcvardecl .   (rule 132)

    $default	reduce using rule 132 (funcvardecls1)



state 110

    floatp  ->  integer pie .   (rule 174)

    $default	reduce using rule 174 (floatp)



state 111

    floatp  ->  floatr pie .   (rule 173)

    $default	reduce using rule 173 (floatp)



state 112

    expr  ->  name '=' . expr   (rule 72)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 171
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 113

    msgsend  ->  name '(' . arglist1 optkeyarglist ')' blocklist   (rule 47)
    expr  ->  name '(' . arglist1 optkeyarglist ')' '=' expr   (rule 75)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglist1	go to state 172
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 114

    block  ->  '#' . '{' argdecls funcvardecls funcbody '}'   (rule 128)

    '{' 	shift, and go to state 86



state 115

    blocklist1  ->  blocklist1 . blockliteral   (rule 43)
    msgsend  ->  name blocklist1 .   (rule 46)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 46 (msgsend)

    blockliteral	go to state 173
    block	go to state 39



state 116

    blocklist1  ->  blockliteral .   (rule 42)

    $default	reduce using rule 42 (blocklist1)



state 117

    expr1  ->  classname '[' . arglistc ']'   (rule 64)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 82 (arglistc)

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglistc	go to state 174
    arglist1	go to state 75
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 118

    expr1  ->  classname '(' . keyarglist1 ')'   (rule 62)
    expr1  ->  classname '(' . arglist1 optkeyarglist ')'   (rule 63)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglist1	go to state 175
    keyarglist1	go to state 176
    keyarg	go to state 177
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 178



state 119

    string  ->  string string1 .   (rule 187)

    $default	reduce using rule 187 (string)



state 120

    classextension  ->  '+' classname '{' . methods '}'   (rule 10)

    $default	reduce using rule 19 (methods)

    methods	go to state 179



state 121

    superclass  ->  ':' . classname   (rule 14)

    CLASSNAME	shift, and go to state 12

    classname	go to state 180



state 122

    classdef  ->  classname '[' . optname ']' superclass '{' classvardecls methods '}'   (rule 9)

    NAME	shift, and go to state 6

    $default	reduce using rule 11 (optname)

    optname	go to state 181
    name	go to state 182



state 123

    classdef  ->  classname superclass . '{' classvardecls methods '}'   (rule 8)

    '{' 	shift, and go to state 183



state 124

    funcvardecl  ->  VAR slotdeflist ';' .   (rule 133)

    $default	reduce using rule 133 (funcvardecl)



state 125

    slotdeflist  ->  slotdeflist ',' . slotdef   (rule 142)

    NAME	shift, and go to state 6

    slotdef	go to state 184
    name	go to state 64



state 126

    slotdef  ->  name '=' . slotliteral   (rule 144)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '#' 	shift, and go to state 185

    slotliteral	go to state 186
    listlit	go to state 187
    integer	go to state 188
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 189
    trueobj	go to state 190
    falseobj	go to state 191
    nilobj	go to state 192
    infobj	go to state 193
    ascii	go to state 194
    symbol	go to state 195
    string	go to state 196
    string1	go to state 56



state 127

    argdecls  ->  ARG slotdeflist0 . ELLIPSIS name ';'   (rule 136)

    ELLIPSIS	shift, and go to state 197



state 128

    argdecls  ->  ARG slotdeflist . ';'   (rule 135)
    slotdeflist0  ->  slotdeflist .   (rule 140)
    slotdeflist  ->  slotdeflist . ',' slotdef   (rule 142)

    ';' 	shift, and go to state 198
    ',' 	shift, and go to state 125

    $default	reduce using rule 140 (slotdeflist0)



state 129

    argdecls  ->  '|' slotdeflist0 . ELLIPSIS name '|'   (rule 138)

    ELLIPSIS	shift, and go to state 199



state 130

    argdecls  ->  '|' slotdeflist . '|'   (rule 137)
    slotdeflist0  ->  slotdeflist .   (rule 140)
    slotdeflist  ->  slotdeflist . ',' slotdef   (rule 142)

    '|' 	shift, and go to state 200
    ',' 	shift, and go to state 125

    $default	reduce using rule 140 (slotdeflist0)



state 131

    block  ->  '{' argdecls funcvardecls . funcbody '}'   (rule 127)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 130)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 201
    funretval	go to state 30
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 35
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    funcvardecl	go to state 202
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 132

    expr1  ->  '[' arglistc ']' .   (rule 59)

    $default	reduce using rule 59 (expr1)



state 133

    optcomma  ->  ',' .   (rule 28)
    arglist1  ->  arglist1 ',' . exprseq   (rule 85)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 28 (optcomma)

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 203
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 134

    arglistc  ->  arglist1 optcomma .   (rule 83)

    $default	reduce using rule 83 (arglistc)



state 135

    dictslotdef  ->  expr ':' . expr   (rule 145)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 204
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 136

    expr1  ->  '(' exprseq ')' .   (rule 57)

    $default	reduce using rule 57 (expr1)



state 137

    cmdlinecode  ->  '(' funcvardecls1 funcbody . ')'   (rule 31)

    ')' 	shift, and go to state 205



state 138

    dictslotlist1  ->  dictslotlist1 ',' . dictslotdef   (rule 148)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 206
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    dictslotdef	go to state 207
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 83



state 139

    expr1  ->  '(' dictslotlist ')' .   (rule 60)

    $default	reduce using rule 60 (expr1)



state 140

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    dictslotdef  ->  keybinop expr .   (rule 146)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 146 (dictslotdef)

    binop	go to state 103
    keybinop	go to state 104



state 141

    optsemi  ->  ';' .   (rule 26)

    $default	reduce using rule 26 (optsemi)



state 142

    funretval  ->  '^' expr optsemi .   (rule 41)

    $default	reduce using rule 41 (funretval)



state 143

    expr  ->  '~' name '=' . expr   (rule 73)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 208
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 144

    block  ->  '#' '{' argdecls . funcvardecls funcbody '}'   (rule 128)

    $default	reduce using rule 129 (funcvardecls)

    funcvardecls	go to state 209



state 145

    listlit2  ->  '[' . literallistc ']'   (rule 157)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 145

    $default	reduce using rule 159 (literallistc)

    listliteral	go to state 146
    listlit2	go to state 147
    literallistc	go to state 210
    literallist1	go to state 149
    integer	go to state 150
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 151
    classname	go to state 152
    trueobj	go to state 153
    falseobj	go to state 154
    nilobj	go to state 155
    infobj	go to state 156
    ascii	go to state 157
    symbol	go to state 158
    string	go to state 159
    string1	go to state 56



state 146

    literallist1  ->  listliteral .   (rule 161)

    $default	reduce using rule 161 (literallist1)



state 147

    listliteral  ->  listlit2 .   (rule 126)

    $default	reduce using rule 126 (listliteral)



state 148

    listlit  ->  '#' '[' literallistc . ']'   (rule 155)

    ']' 	shift, and go to state 211



state 149

    literallistc  ->  literallist1 . optcomma   (rule 160)
    literallist1  ->  literallist1 . ',' listliteral   (rule 162)

    ',' 	shift, and go to state 212

    $default	reduce using rule 27 (optcomma)

    optcomma	go to state 213



state 150

    listliteral  ->  integer .   (rule 117)
    floatp  ->  integer . pie   (rule 174)

    PIE 	shift, and go to state 19

    $default	reduce using rule 117 (listliteral)

    pie 	go to state 110



state 151

    listliteral  ->  floatp .   (rule 118)

    $default	reduce using rule 118 (listliteral)



state 152

    listlit2  ->  classname . '[' literallistc ']'   (rule 158)

    '[' 	shift, and go to state 214



state 153

    listliteral  ->  trueobj .   (rule 122)

    $default	reduce using rule 122 (listliteral)



state 154

    listliteral  ->  falseobj .   (rule 123)

    $default	reduce using rule 123 (listliteral)



state 155

    listliteral  ->  nilobj .   (rule 124)

    $default	reduce using rule 124 (listliteral)



state 156

    listliteral  ->  infobj .   (rule 125)

    $default	reduce using rule 125 (listliteral)



state 157

    listliteral  ->  ascii .   (rule 119)

    $default	reduce using rule 119 (listliteral)



state 158

    listliteral  ->  symbol .   (rule 121)

    $default	reduce using rule 121 (listliteral)



state 159

    listliteral  ->  string .   (rule 120)
    string  ->  string . string1   (rule 187)

    STRING	shift, and go to state 10

    $default	reduce using rule 120 (listliteral)

    string1	go to state 119



state 160

    expr  ->  '#' mavars '=' . expr   (rule 76)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 215
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 161

    mavars  ->  mavarlist ELLIPSIS . name   (rule 92)

    NAME	shift, and go to state 6

    name	go to state 216



state 162

    mavarlist  ->  mavarlist ',' . name   (rule 94)

    NAME	shift, and go to state 6

    name	go to state 217



state 163

    listlit  ->  '#' classname '[' . literallistc ']'   (rule 156)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 145

    $default	reduce using rule 159 (literallistc)

    listliteral	go to state 146
    listlit2	go to state 147
    literallistc	go to state 218
    literallist1	go to state 149
    integer	go to state 150
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 151
    classname	go to state 152
    trueobj	go to state 153
    falseobj	go to state 154
    nilobj	go to state 155
    infobj	go to state 156
    ascii	go to state 157
    symbol	go to state 158
    string	go to state 159
    string1	go to state 56



state 164

    expr1  ->  expr1 '[' arglist1 . ']'   (rule 65)
    expr  ->  expr1 '[' arglist1 . ']' '=' expr   (rule 77)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ']' 	shift, and go to state 219
    ',' 	shift, and go to state 220



state 165

    expr  ->  expr '.' '[' . arglist1 ']'   (rule 67)
    expr  ->  expr '.' '[' . arglist1 ']' '=' expr   (rule 78)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglist1	go to state 221
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 166

    msgsend  ->  expr '.' '(' . keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr '.' '(' . arglist1 optkeyarglist ')' blocklist   (rule 50)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglist1	go to state 222
    keyarglist1	go to state 223
    keyarg	go to state 177
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 178



state 167

    msgsend  ->  expr '.' name . '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr '.' name . '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr '.' name . blocklist   (rule 52)
    expr  ->  expr '.' name . '=' expr   (rule 74)

    '=' 	shift, and go to state 224
    '{' 	shift, and go to state 22
    '(' 	shift, and go to state 225
    '#' 	shift, and go to state 114

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 226
    blocklist	go to state 227
    blockliteral	go to state 116
    block	go to state 39



state 168

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr binop expr .   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    '.' 	shift, and go to state 102

    $default	reduce using rule 70 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 169

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr keybinop expr .   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    '.' 	shift, and go to state 102

    $default	reduce using rule 71 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 170

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    exprn  ->  exprn ';' expr .   (rule 80)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 80 (exprn)

    binop	go to state 103
    keybinop	go to state 104



state 171

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  name '=' expr .   (rule 72)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 72 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 172

    msgsend  ->  name '(' arglist1 . optkeyarglist ')' blocklist   (rule 47)
    expr  ->  name '(' arglist1 . optkeyarglist ')' '=' expr   (rule 75)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ',' 	shift, and go to state 228

    $default	reduce using rule 89 (optkeyarglist)

    optkeyarglist	go to state 229



state 173

    blocklist1  ->  blocklist1 blockliteral .   (rule 43)

    $default	reduce using rule 43 (blocklist1)



state 174

    expr1  ->  classname '[' arglistc . ']'   (rule 64)

    ']' 	shift, and go to state 230



state 175

    expr1  ->  classname '(' arglist1 . optkeyarglist ')'   (rule 63)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ',' 	shift, and go to state 228

    $default	reduce using rule 89 (optkeyarglist)

    optkeyarglist	go to state 231



state 176

    expr1  ->  classname '(' keyarglist1 . ')'   (rule 62)
    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 87)

    ',' 	shift, and go to state 232
    ')' 	shift, and go to state 233



state 177

    keyarglist1  ->  keyarg .   (rule 86)

    $default	reduce using rule 86 (keyarglist1)



state 178

    keyarg  ->  keybinop . exprseq   (rule 88)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 234
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 179

    classextension  ->  '+' classname '{' methods . '}'   (rule 10)
    methods  ->  methods . methoddef   (rule 20)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 93
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 235
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '}' 	shift, and go to state 236

    methoddef	go to state 237
    name	go to state 238
    binop	go to state 239



state 180

    superclass  ->  ':' classname .   (rule 14)

    $default	reduce using rule 14 (superclass)



state 181

    classdef  ->  classname '[' optname . ']' superclass '{' classvardecls methods '}'   (rule 9)

    ']' 	shift, and go to state 240



state 182

    optname  ->  name .   (rule 12)

    $default	reduce using rule 12 (optname)



state 183

    classdef  ->  classname superclass '{' . classvardecls methods '}'   (rule 8)

    $default	reduce using rule 15 (classvardecls)

    classvardecls	go to state 241



state 184

    slotdeflist  ->  slotdeflist ',' slotdef .   (rule 142)

    $default	reduce using rule 142 (slotdeflist)



state 185

    listlit  ->  '#' . '[' literallistc ']'   (rule 155)
    listlit  ->  '#' . classname '[' literallistc ']'   (rule 156)

    CLASSNAME	shift, and go to state 12
    '[' 	shift, and go to state 87

    classname	go to state 91



state 186

    slotdef  ->  name '=' slotliteral .   (rule 144)

    $default	reduce using rule 144 (slotdef)



state 187

    slotliteral  ->  listlit .   (rule 104)

    $default	reduce using rule 104 (slotliteral)



state 188

    slotliteral  ->  integer .   (rule 95)
    floatp  ->  integer . pie   (rule 174)

    PIE 	shift, and go to state 19

    $default	reduce using rule 95 (slotliteral)

    pie 	go to state 110



state 189

    slotliteral  ->  floatp .   (rule 96)

    $default	reduce using rule 96 (slotliteral)



state 190

    slotliteral  ->  trueobj .   (rule 100)

    $default	reduce using rule 100 (slotliteral)



state 191

    slotliteral  ->  falseobj .   (rule 101)

    $default	reduce using rule 101 (slotliteral)



state 192

    slotliteral  ->  nilobj .   (rule 102)

    $default	reduce using rule 102 (slotliteral)



state 193

    slotliteral  ->  infobj .   (rule 103)

    $default	reduce using rule 103 (slotliteral)



state 194

    slotliteral  ->  ascii .   (rule 97)

    $default	reduce using rule 97 (slotliteral)



state 195

    slotliteral  ->  symbol .   (rule 99)

    $default	reduce using rule 99 (slotliteral)



state 196

    slotliteral  ->  string .   (rule 98)
    string  ->  string . string1   (rule 187)

    STRING	shift, and go to state 10

    $default	reduce using rule 98 (slotliteral)

    string1	go to state 119



state 197

    argdecls  ->  ARG slotdeflist0 ELLIPSIS . name ';'   (rule 136)

    NAME	shift, and go to state 6

    name	go to state 242



state 198

    argdecls  ->  ARG slotdeflist ';' .   (rule 135)

    $default	reduce using rule 135 (argdecls)



state 199

    argdecls  ->  '|' slotdeflist0 ELLIPSIS . name '|'   (rule 138)

    NAME	shift, and go to state 6

    name	go to state 243



state 200

    argdecls  ->  '|' slotdeflist '|' .   (rule 137)

    $default	reduce using rule 137 (argdecls)



state 201

    block  ->  '{' argdecls funcvardecls funcbody . '}'   (rule 127)

    '}' 	shift, and go to state 244



state 202

    funcvardecls  ->  funcvardecls funcvardecl .   (rule 130)

    $default	reduce using rule 130 (funcvardecls)



state 203

    arglist1  ->  arglist1 ',' exprseq .   (rule 85)

    $default	reduce using rule 85 (arglist1)



state 204

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    dictslotdef  ->  expr ':' expr .   (rule 145)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 145 (dictslotdef)

    binop	go to state 103
    keybinop	go to state 104



state 205

    cmdlinecode  ->  '(' funcvardecls1 funcbody ')' .   (rule 31)

    $default	reduce using rule 31 (cmdlinecode)



state 206

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    dictslotdef  ->  expr . ':' expr   (rule 145)

    ':' 	shift, and go to state 135
    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    binop	go to state 103
    keybinop	go to state 104



state 207

    dictslotlist1  ->  dictslotlist1 ',' dictslotdef .   (rule 148)

    $default	reduce using rule 148 (dictslotlist1)



state 208

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  '~' name '=' expr .   (rule 73)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 73 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 209

    block  ->  '#' '{' argdecls funcvardecls . funcbody '}'   (rule 128)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 130)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    VAR 	shift, and go to state 13
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 25
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 40 (funretval)

    funcbody	go to state 245
    funretval	go to state 30
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 35
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    funcvardecl	go to state 202
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 210

    listlit2  ->  '[' literallistc . ']'   (rule 157)

    ']' 	shift, and go to state 246



state 211

    listlit  ->  '#' '[' literallistc ']' .   (rule 155)

    $default	reduce using rule 155 (listlit)



state 212

    optcomma  ->  ',' .   (rule 28)
    literallist1  ->  literallist1 ',' . listliteral   (rule 162)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 145

    $default	reduce using rule 28 (optcomma)

    listliteral	go to state 247
    listlit2	go to state 147
    integer	go to state 150
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 151
    classname	go to state 152
    trueobj	go to state 153
    falseobj	go to state 154
    nilobj	go to state 155
    infobj	go to state 156
    ascii	go to state 157
    symbol	go to state 158
    string	go to state 159
    string1	go to state 56



state 213

    literallistc  ->  literallist1 optcomma .   (rule 160)

    $default	reduce using rule 160 (literallistc)



state 214

    listlit2  ->  classname '[' . literallistc ']'   (rule 158)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '[' 	shift, and go to state 145

    $default	reduce using rule 159 (literallistc)

    listliteral	go to state 146
    listlit2	go to state 147
    literallistc	go to state 248
    literallist1	go to state 149
    integer	go to state 150
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 151
    classname	go to state 152
    trueobj	go to state 153
    falseobj	go to state 154
    nilobj	go to state 155
    infobj	go to state 156
    ascii	go to state 157
    symbol	go to state 158
    string	go to state 159
    string1	go to state 56



state 215

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  '#' mavars '=' expr .   (rule 76)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 76 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 216

    mavars  ->  mavarlist ELLIPSIS name .   (rule 92)

    $default	reduce using rule 92 (mavars)



state 217

    mavarlist  ->  mavarlist ',' name .   (rule 94)

    $default	reduce using rule 94 (mavarlist)



state 218

    listlit  ->  '#' classname '[' literallistc . ']'   (rule 156)

    ']' 	shift, and go to state 249



state 219

    expr1  ->  expr1 '[' arglist1 ']' .   (rule 65)
    expr  ->  expr1 '[' arglist1 ']' . '=' expr   (rule 77)

    '=' 	shift, and go to state 250

    $default	reduce using rule 65 (expr1)



state 220

    arglist1  ->  arglist1 ',' . exprseq   (rule 85)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 203
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 221

    expr  ->  expr '.' '[' arglist1 . ']'   (rule 67)
    expr  ->  expr '.' '[' arglist1 . ']' '=' expr   (rule 78)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ']' 	shift, and go to state 251
    ',' 	shift, and go to state 220



state 222

    msgsend  ->  expr '.' '(' arglist1 . optkeyarglist ')' blocklist   (rule 50)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ',' 	shift, and go to state 228

    $default	reduce using rule 89 (optkeyarglist)

    optkeyarglist	go to state 252



state 223

    msgsend  ->  expr '.' '(' keyarglist1 . ')' blocklist   (rule 48)
    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 87)

    ',' 	shift, and go to state 232
    ')' 	shift, and go to state 253



state 224

    expr  ->  expr '.' name '=' . expr   (rule 74)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 254
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 225

    msgsend  ->  expr '.' name '(' . keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr '.' name '(' . arglist1 optkeyarglist ')' blocklist   (rule 51)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 73
    arglist1	go to state 255
    keyarglist1	go to state 256
    keyarg	go to state 177
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 178



state 226

    blocklist1  ->  blocklist1 . blockliteral   (rule 43)
    blocklist  ->  blocklist1 .   (rule 45)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 45 (blocklist)

    blockliteral	go to state 173
    block	go to state 39



state 227

    msgsend  ->  expr '.' name blocklist .   (rule 52)

    $default	reduce using rule 52 (msgsend)



state 228

    arglist1  ->  arglist1 ',' . exprseq   (rule 85)
    optkeyarglist  ->  ',' . keyarglist1   (rule 90)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 203
    keyarglist1	go to state 257
    keyarg	go to state 177
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57
    keybinop	go to state 178



state 229

    msgsend  ->  name '(' arglist1 optkeyarglist . ')' blocklist   (rule 47)
    expr  ->  name '(' arglist1 optkeyarglist . ')' '=' expr   (rule 75)

    ')' 	shift, and go to state 258



state 230

    expr1  ->  classname '[' arglistc ']' .   (rule 64)

    $default	reduce using rule 64 (expr1)



state 231

    expr1  ->  classname '(' arglist1 optkeyarglist . ')'   (rule 63)

    ')' 	shift, and go to state 259



state 232

    keyarglist1  ->  keyarglist1 ',' . keyarg   (rule 87)

    KEYBINOP	shift, and go to state 76

    keyarg	go to state 260
    keybinop	go to state 178



state 233

    expr1  ->  classname '(' keyarglist1 ')' .   (rule 62)

    $default	reduce using rule 62 (expr1)



state 234

    keyarg  ->  keybinop exprseq .   (rule 88)

    $default	reduce using rule 88 (keyarg)



state 235

    methoddef  ->  '*' . name '{' argdecls funcvardecls primitive methbody '}'   (rule 22)
    methoddef  ->  '*' . binop '{' argdecls funcvardecls primitive methbody '}'   (rule 24)
    binop  ->  '*' .   (rule 196)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 93
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101

    $default	reduce using rule 196 (binop)

    name	go to state 261
    binop	go to state 262



state 236

    classextension  ->  '+' classname '{' methods '}' .   (rule 10)

    $default	reduce using rule 10 (classextension)



state 237

    methods  ->  methods methoddef .   (rule 20)

    $default	reduce using rule 20 (methods)



state 238

    methoddef  ->  name . '{' argdecls funcvardecls primitive methbody '}'   (rule 21)

    '{' 	shift, and go to state 263



state 239

    methoddef  ->  binop . '{' argdecls funcvardecls primitive methbody '}'   (rule 23)

    '{' 	shift, and go to state 264



state 240

    classdef  ->  classname '[' optname ']' . superclass '{' classvardecls methods '}'   (rule 9)

    ':' 	shift, and go to state 121

    $default	reduce using rule 13 (superclass)

    superclass	go to state 265



state 241

    classdef  ->  classname superclass '{' classvardecls . methods '}'   (rule 8)
    classvardecls  ->  classvardecls . classvardecl   (rule 16)

    VAR 	shift, and go to state 266
    CLASSVAR	shift, and go to state 267

    $default	reduce using rule 19 (methods)

    classvardecl	go to state 268
    methods	go to state 269



state 242

    argdecls  ->  ARG slotdeflist0 ELLIPSIS name . ';'   (rule 136)

    ';' 	shift, and go to state 270



state 243

    argdecls  ->  '|' slotdeflist0 ELLIPSIS name . '|'   (rule 138)

    '|' 	shift, and go to state 271



state 244

    block  ->  '{' argdecls funcvardecls funcbody '}' .   (rule 127)

    $default	reduce using rule 127 (block)



state 245

    block  ->  '#' '{' argdecls funcvardecls funcbody . '}'   (rule 128)

    '}' 	shift, and go to state 272



state 246

    listlit2  ->  '[' literallistc ']' .   (rule 157)

    $default	reduce using rule 157 (listlit2)



state 247

    literallist1  ->  literallist1 ',' listliteral .   (rule 162)

    $default	reduce using rule 162 (literallist1)



state 248

    listlit2  ->  classname '[' literallistc . ']'   (rule 158)

    ']' 	shift, and go to state 273



state 249

    listlit  ->  '#' classname '[' literallistc ']' .   (rule 156)

    $default	reduce using rule 156 (listlit)



state 250

    expr  ->  expr1 '[' arglist1 ']' '=' . expr   (rule 77)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 274
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 251

    expr  ->  expr '.' '[' arglist1 ']' .   (rule 67)
    expr  ->  expr '.' '[' arglist1 ']' . '=' expr   (rule 78)

    '=' 	shift, and go to state 275

    $default	reduce using rule 67 (expr)



state 252

    msgsend  ->  expr '.' '(' arglist1 optkeyarglist . ')' blocklist   (rule 50)

    ')' 	shift, and go to state 276



state 253

    msgsend  ->  expr '.' '(' keyarglist1 ')' . blocklist   (rule 48)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 226
    blocklist	go to state 277
    blockliteral	go to state 116
    block	go to state 39



state 254

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr '.' name '=' expr .   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 74 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 255

    msgsend  ->  expr '.' name '(' arglist1 . optkeyarglist ')' blocklist   (rule 51)
    arglist1  ->  arglist1 . ',' exprseq   (rule 85)

    ',' 	shift, and go to state 228

    $default	reduce using rule 89 (optkeyarglist)

    optkeyarglist	go to state 278



state 256

    msgsend  ->  expr '.' name '(' keyarglist1 . ')' blocklist   (rule 49)
    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 87)

    ',' 	shift, and go to state 232
    ')' 	shift, and go to state 279



state 257

    keyarglist1  ->  keyarglist1 . ',' keyarg   (rule 87)
    optkeyarglist  ->  ',' keyarglist1 .   (rule 90)

    ',' 	shift, and go to state 232

    $default	reduce using rule 90 (optkeyarglist)



state 258

    msgsend  ->  name '(' arglist1 optkeyarglist ')' . blocklist   (rule 47)
    expr  ->  name '(' arglist1 optkeyarglist ')' . '=' expr   (rule 75)

    '=' 	shift, and go to state 280
    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 226
    blocklist	go to state 281
    blockliteral	go to state 116
    block	go to state 39



state 259

    expr1  ->  classname '(' arglist1 optkeyarglist ')' .   (rule 63)

    $default	reduce using rule 63 (expr1)



state 260

    keyarglist1  ->  keyarglist1 ',' keyarg .   (rule 87)

    $default	reduce using rule 87 (keyarglist1)



state 261

    methoddef  ->  '*' name . '{' argdecls funcvardecls primitive methbody '}'   (rule 22)

    '{' 	shift, and go to state 282



state 262

    methoddef  ->  '*' binop . '{' argdecls funcvardecls primitive methbody '}'   (rule 24)

    '{' 	shift, and go to state 283



state 263

    methoddef  ->  name '{' . argdecls funcvardecls primitive methbody '}'   (rule 21)

    ARG 	shift, and go to state 70
    '|' 	shift, and go to state 71

    $default	reduce using rule 134 (argdecls)

    argdecls	go to state 284



state 264

    methoddef  ->  binop '{' . argdecls funcvardecls primitive methbody '}'   (rule 23)

    ARG 	shift, and go to state 70
    '|' 	shift, and go to state 71

    $default	reduce using rule 134 (argdecls)

    argdecls	go to state 285



state 265

    classdef  ->  classname '[' optname ']' superclass . '{' classvardecls methods '}'   (rule 9)

    '{' 	shift, and go to state 286



state 266

    classvardecl  ->  VAR . rwslotdeflist ';'   (rule 18)

    '<' 	shift, and go to state 287
    '>' 	shift, and go to state 288
    READWRITEVAR	shift, and go to state 289

    $default	reduce using rule 163 (rwspec)

    rwslotdeflist	go to state 290
    rwslotdef	go to state 291
    rwspec	go to state 292



state 267

    classvardecl  ->  CLASSVAR . rwslotdeflist ';'   (rule 17)

    '<' 	shift, and go to state 287
    '>' 	shift, and go to state 288
    READWRITEVAR	shift, and go to state 289

    $default	reduce using rule 163 (rwspec)

    rwslotdeflist	go to state 293
    rwslotdef	go to state 291
    rwspec	go to state 292



state 268

    classvardecls  ->  classvardecls classvardecl .   (rule 16)

    $default	reduce using rule 16 (classvardecls)



state 269

    classdef  ->  classname superclass '{' classvardecls methods . '}'   (rule 8)
    methods  ->  methods . methoddef   (rule 20)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 93
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 235
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '}' 	shift, and go to state 294

    methoddef	go to state 237
    name	go to state 238
    binop	go to state 239



state 270

    argdecls  ->  ARG slotdeflist0 ELLIPSIS name ';' .   (rule 136)

    $default	reduce using rule 136 (argdecls)



state 271

    argdecls  ->  '|' slotdeflist0 ELLIPSIS name '|' .   (rule 138)

    $default	reduce using rule 138 (argdecls)



state 272

    block  ->  '#' '{' argdecls funcvardecls funcbody '}' .   (rule 128)

    $default	reduce using rule 128 (block)



state 273

    listlit2  ->  classname '[' literallistc ']' .   (rule 158)

    $default	reduce using rule 158 (listlit2)



state 274

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr1 '[' arglist1 ']' '=' expr .   (rule 77)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 77 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 275

    expr  ->  expr '.' '[' arglist1 ']' '=' . expr   (rule 78)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 295
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 276

    msgsend  ->  expr '.' '(' arglist1 optkeyarglist ')' . blocklist   (rule 50)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 226
    blocklist	go to state 296
    blockliteral	go to state 116
    block	go to state 39



state 277

    msgsend  ->  expr '.' '(' keyarglist1 ')' blocklist .   (rule 48)

    $default	reduce using rule 48 (msgsend)



state 278

    msgsend  ->  expr '.' name '(' arglist1 optkeyarglist . ')' blocklist   (rule 51)

    ')' 	shift, and go to state 297



state 279

    msgsend  ->  expr '.' name '(' keyarglist1 ')' . blocklist   (rule 49)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 226
    blocklist	go to state 298
    blockliteral	go to state 116
    block	go to state 39



state 280

    expr  ->  name '(' arglist1 optkeyarglist ')' '=' . expr   (rule 75)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 299
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 281

    msgsend  ->  name '(' arglist1 optkeyarglist ')' blocklist .   (rule 47)

    $default	reduce using rule 47 (msgsend)



state 282

    methoddef  ->  '*' name '{' . argdecls funcvardecls primitive methbody '}'   (rule 22)

    ARG 	shift, and go to state 70
    '|' 	shift, and go to state 71

    $default	reduce using rule 134 (argdecls)

    argdecls	go to state 300



state 283

    methoddef  ->  '*' binop '{' . argdecls funcvardecls primitive methbody '}'   (rule 24)

    ARG 	shift, and go to state 70
    '|' 	shift, and go to state 71

    $default	reduce using rule 134 (argdecls)

    argdecls	go to state 301



state 284

    methoddef  ->  name '{' argdecls . funcvardecls primitive methbody '}'   (rule 21)

    $default	reduce using rule 129 (funcvardecls)

    funcvardecls	go to state 302



state 285

    methoddef  ->  binop '{' argdecls . funcvardecls primitive methbody '}'   (rule 23)

    $default	reduce using rule 129 (funcvardecls)

    funcvardecls	go to state 303



state 286

    classdef  ->  classname '[' optname ']' superclass '{' . classvardecls methods '}'   (rule 9)

    $default	reduce using rule 15 (classvardecls)

    classvardecls	go to state 304



state 287

    rwspec  ->  '<' .   (rule 164)

    $default	reduce using rule 164 (rwspec)



state 288

    rwspec  ->  '>' .   (rule 166)

    $default	reduce using rule 166 (rwspec)



state 289

    rwspec  ->  READWRITEVAR .   (rule 165)

    $default	reduce using rule 165 (rwspec)



state 290

    classvardecl  ->  VAR rwslotdeflist . ';'   (rule 18)
    rwslotdeflist  ->  rwslotdeflist . ',' rwslotdef   (rule 152)

    ';' 	shift, and go to state 305
    ',' 	shift, and go to state 306



state 291

    rwslotdeflist  ->  rwslotdef .   (rule 151)

    $default	reduce using rule 151 (rwslotdeflist)



state 292

    rwslotdef  ->  rwspec . name   (rule 153)
    rwslotdef  ->  rwspec . name '=' slotliteral   (rule 154)

    NAME	shift, and go to state 6

    name	go to state 307



state 293

    classvardecl  ->  CLASSVAR rwslotdeflist . ';'   (rule 17)
    rwslotdeflist  ->  rwslotdeflist . ',' rwslotdef   (rule 152)

    ';' 	shift, and go to state 308
    ',' 	shift, and go to state 306



state 294

    classdef  ->  classname superclass '{' classvardecls methods '}' .   (rule 8)

    $default	reduce using rule 8 (classdef)



state 295

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)
    expr  ->  expr '.' '[' arglist1 ']' '=' expr .   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 78 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 296

    msgsend  ->  expr '.' '(' arglist1 optkeyarglist ')' blocklist .   (rule 50)

    $default	reduce using rule 50 (msgsend)



state 297

    msgsend  ->  expr '.' name '(' arglist1 optkeyarglist ')' . blocklist   (rule 51)

    '{' 	shift, and go to state 22
    '#' 	shift, and go to state 114

    $default	reduce using rule 44 (blocklist)

    blocklist1	go to state 226
    blocklist	go to state 309
    blockliteral	go to state 116
    block	go to state 39



state 298

    msgsend  ->  expr '.' name '(' keyarglist1 ')' blocklist .   (rule 49)

    $default	reduce using rule 49 (msgsend)



state 299

    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  name '(' arglist1 optkeyarglist ')' '=' expr .   (rule 75)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102

    $default	reduce using rule 75 (expr)

    binop	go to state 103
    keybinop	go to state 104



state 300

    methoddef  ->  '*' name '{' argdecls . funcvardecls primitive methbody '}'   (rule 22)

    $default	reduce using rule 129 (funcvardecls)

    funcvardecls	go to state 310



state 301

    methoddef  ->  '*' binop '{' argdecls . funcvardecls primitive methbody '}'   (rule 24)

    $default	reduce using rule 129 (funcvardecls)

    funcvardecls	go to state 311



state 302

    methoddef  ->  name '{' argdecls funcvardecls . primitive methbody '}'   (rule 21)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 130)

    PRIMITIVENAME	shift, and go to state 312
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 313
    funcvardecl	go to state 202
    primname	go to state 314



state 303

    methoddef  ->  binop '{' argdecls funcvardecls . primitive methbody '}'   (rule 23)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 130)

    PRIMITIVENAME	shift, and go to state 312
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 315
    funcvardecl	go to state 202
    primname	go to state 314



state 304

    classdef  ->  classname '[' optname ']' superclass '{' classvardecls . methods '}'   (rule 9)
    classvardecls  ->  classvardecls . classvardecl   (rule 16)

    VAR 	shift, and go to state 266
    CLASSVAR	shift, and go to state 267

    $default	reduce using rule 19 (methods)

    classvardecl	go to state 268
    methods	go to state 316



state 305

    classvardecl  ->  VAR rwslotdeflist ';' .   (rule 18)

    $default	reduce using rule 18 (classvardecl)



state 306

    rwslotdeflist  ->  rwslotdeflist ',' . rwslotdef   (rule 152)

    '<' 	shift, and go to state 287
    '>' 	shift, and go to state 288
    READWRITEVAR	shift, and go to state 289

    $default	reduce using rule 163 (rwspec)

    rwslotdef	go to state 317
    rwspec	go to state 292



state 307

    rwslotdef  ->  rwspec name .   (rule 153)
    rwslotdef  ->  rwspec name . '=' slotliteral   (rule 154)

    '=' 	shift, and go to state 318

    $default	reduce using rule 153 (rwslotdef)



state 308

    classvardecl  ->  CLASSVAR rwslotdeflist ';' .   (rule 17)

    $default	reduce using rule 17 (classvardecl)



state 309

    msgsend  ->  expr '.' name '(' arglist1 optkeyarglist ')' blocklist .   (rule 51)

    $default	reduce using rule 51 (msgsend)



state 310

    methoddef  ->  '*' name '{' argdecls funcvardecls . primitive methbody '}'   (rule 22)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 130)

    PRIMITIVENAME	shift, and go to state 312
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 319
    funcvardecl	go to state 202
    primname	go to state 314



state 311

    methoddef  ->  '*' binop '{' argdecls funcvardecls . primitive methbody '}'   (rule 24)
    funcvardecls  ->  funcvardecls . funcvardecl   (rule 130)

    PRIMITIVENAME	shift, and go to state 312
    VAR 	shift, and go to state 13

    $default	reduce using rule 36 (primitive)

    primitive	go to state 320
    funcvardecl	go to state 202
    primname	go to state 314



state 312

    primname  ->  PRIMITIVENAME .   (rule 179)

    $default	reduce using rule 179 (primname)



state 313

    methoddef  ->  name '{' argdecls funcvardecls primitive . methbody '}'   (rule 21)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 321
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 322
    retval	go to state 323
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 324
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 314

    primitive  ->  primname . optsemi   (rule 37)

    ';' 	shift, and go to state 141

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 325



state 315

    methoddef  ->  binop '{' argdecls funcvardecls primitive . methbody '}'   (rule 23)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 321
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 326
    retval	go to state 323
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 324
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 316

    classdef  ->  classname '[' optname ']' superclass '{' classvardecls methods . '}'   (rule 9)
    methods  ->  methods . methoddef   (rule 20)

    NAME	shift, and go to state 6
    BINOP	shift, and go to state 93
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 235
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '}' 	shift, and go to state 327

    methoddef	go to state 237
    name	go to state 238
    binop	go to state 239



state 317

    rwslotdeflist  ->  rwslotdeflist ',' rwslotdef .   (rule 152)

    $default	reduce using rule 152 (rwslotdeflist)



state 318

    rwslotdef  ->  rwspec name '=' . slotliteral   (rule 154)

    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '#' 	shift, and go to state 185

    slotliteral	go to state 328
    listlit	go to state 187
    integer	go to state 188
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 189
    trueobj	go to state 190
    falseobj	go to state 191
    nilobj	go to state 192
    infobj	go to state 193
    ascii	go to state 194
    symbol	go to state 195
    string	go to state 196
    string1	go to state 56



state 319

    methoddef  ->  '*' name '{' argdecls funcvardecls primitive . methbody '}'   (rule 22)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 321
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 329
    retval	go to state 323
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 324
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 320

    methoddef  ->  '*' binop '{' argdecls funcvardecls primitive . methbody '}'   (rule 24)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '^' 	shift, and go to state 321
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    $default	reduce using rule 38 (retval)

    methbody	go to state 330
    retval	go to state 323
    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 33
    exprn	go to state 34
    exprseq	go to state 324
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 321

    retval  ->  '^' . expr optsemi   (rule 39)

    NAME	shift, and go to state 6
    INTEGER	shift, and go to state 7
    FLOAT	shift, and go to state 8
    SYMBOL	shift, and go to state 9
    STRING	shift, and go to state 10
    ASCII	shift, and go to state 11
    CLASSNAME	shift, and go to state 12
    NILOBJ	shift, and go to state 14
    TRUEOBJ	shift, and go to state 15
    FALSEOBJ	shift, and go to state 16
    INFINITUMOBJ	shift, and go to state 17
    PSEUDOVAR	shift, and go to state 18
    PIE 	shift, and go to state 19
    '-' 	shift, and go to state 20
    '`' 	shift, and go to state 21
    '{' 	shift, and go to state 22
    '[' 	shift, and go to state 23
    '(' 	shift, and go to state 68
    '~' 	shift, and go to state 26
    '#' 	shift, and go to state 27

    msgsend	go to state 31
    expr1	go to state 32
    expr	go to state 331
    blockliteral	go to state 36
    pushname	go to state 37
    pushliteral	go to state 38
    block	go to state 39
    listlit	go to state 42
    integer	go to state 43
    floatr	go to state 44
    pie 	go to state 45
    floatp	go to state 46
    name	go to state 47
    classname	go to state 48
    trueobj	go to state 49
    falseobj	go to state 50
    nilobj	go to state 51
    infobj	go to state 52
    ascii	go to state 53
    symbol	go to state 54
    string	go to state 55
    string1	go to state 56
    pseudovar	go to state 57



state 322

    methoddef  ->  name '{' argdecls funcvardecls primitive methbody . '}'   (rule 21)

    '}' 	shift, and go to state 332



state 323

    methbody  ->  retval .   (rule 34)

    $default	reduce using rule 34 (methbody)



state 324

    methbody  ->  exprseq . retval   (rule 35)

    '^' 	shift, and go to state 321

    $default	reduce using rule 38 (retval)

    retval	go to state 333



state 325

    primitive  ->  primname optsemi .   (rule 37)

    $default	reduce using rule 37 (primitive)



state 326

    methoddef  ->  binop '{' argdecls funcvardecls primitive methbody . '}'   (rule 23)

    '}' 	shift, and go to state 334



state 327

    classdef  ->  classname '[' optname ']' superclass '{' classvardecls methods '}' .   (rule 9)

    $default	reduce using rule 9 (classdef)



state 328

    rwslotdef  ->  rwspec name '=' slotliteral .   (rule 154)

    $default	reduce using rule 154 (rwslotdef)



state 329

    methoddef  ->  '*' name '{' argdecls funcvardecls primitive methbody . '}'   (rule 22)

    '}' 	shift, and go to state 335



state 330

    methoddef  ->  '*' binop '{' argdecls funcvardecls primitive methbody . '}'   (rule 24)

    '}' 	shift, and go to state 336



state 331

    retval  ->  '^' expr . optsemi   (rule 39)
    msgsend  ->  expr . '.' '(' keyarglist1 ')' blocklist   (rule 48)
    msgsend  ->  expr . '.' name '(' keyarglist1 ')' blocklist   (rule 49)
    msgsend  ->  expr . '.' '(' arglist1 optkeyarglist ')' blocklist   (rule 50)
    msgsend  ->  expr . '.' name '(' arglist1 optkeyarglist ')' blocklist   (rule 51)
    msgsend  ->  expr . '.' name blocklist   (rule 52)
    expr  ->  expr . '.' '[' arglist1 ']'   (rule 67)
    expr  ->  expr . binop expr   (rule 70)
    expr  ->  expr . keybinop expr   (rule 71)
    expr  ->  expr . '.' name '=' expr   (rule 74)
    expr  ->  expr . '.' '[' arglist1 ']' '=' expr   (rule 78)

    BINOP	shift, and go to state 93
    KEYBINOP	shift, and go to state 76
    '-' 	shift, and go to state 94
    '<' 	shift, and go to state 95
    '>' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '+' 	shift, and go to state 98
    '|' 	shift, and go to state 99
    READWRITEVAR	shift, and go to state 100
    DOUBLEEQUAL	shift, and go to state 101
    '.' 	shift, and go to state 102
    ';' 	shift, and go to state 141

    $default	reduce using rule 25 (optsemi)

    optsemi	go to state 337
    binop	go to state 103
    keybinop	go to state 104



state 332

    methoddef  ->  name '{' argdecls funcvardecls primitive methbody '}' .   (rule 21)

    $default	reduce using rule 21 (methoddef)



state 333

    methbody  ->  exprseq retval .   (rule 35)

    $default	reduce using rule 35 (methbody)



state 334

    methoddef  ->  binop '{' argdecls funcvardecls primitive methbody '}' .   (rule 23)

    $default	reduce using rule 23 (methoddef)



state 335

    methoddef  ->  '*' name '{' argdecls funcvardecls primitive methbody '}' .   (rule 22)

    $default	reduce using rule 22 (methoddef)



state 336

    methoddef  ->  '*' binop '{' argdecls funcvardecls primitive methbody '}' .   (rule 24)

    $default	reduce using rule 24 (methoddef)



state 337

    retval  ->  '^' expr optsemi .   (rule 39)

    $default	reduce using rule 39 (retval)



state 338

    $   	go to state 339



state 339

    $   	go to state 340



state 340

    $default	accept
