{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 BufWr				
\fs26 buffer writing oscillator
\fs36 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 write to a buffer at an index\
see also 
\f0\b BufRd
\f2\b0 \
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 BufWr.ar(input, bufnum, phase, loop)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
	
\f0\b input
\f2\b0  		input ugens (channelArray) \
	\
	
\f0\b bufnum
\f2\b0 		the index of the buffer to use\
	
\f0\b phase
\f2\b0    		modulateable index into the buffer (has to be audio rate).\
	
\f0\b loop
\f2\b0       		1 means true, 0 means false.  this is modulateable.
\f1\fs18 \
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 Note: 
\f2\b0 BufWr (in difference to BufRd) does not do multichannel expansion, because input is an array.
\f1\fs18 \
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 (\
\cf3 // allocate a buffer for writinig into\cf2 \
s = \cf4 Server\cf2 .local;\
s.sendMsg(\cf5 "/b_alloc"\cf2 , 0, 44100 * 2);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf3 //write into the buffer with a BufWr\cf2 \
(\
y = \{ \cf4 arg\cf2  rate=1; \
	\cf4 var\cf2  in;\
	in = \cf4 SinOsc\cf2 .ar(\cf4 LFNoise1\cf2 .kr(2, 300, 400), 0, 0.1);\
	\cf4 BufWr\cf2 .ar(in, 0, \cf4 Phasor\cf2 .ar(0, \cf4 BufRateScale\cf2 .kr(0) * rate, 0, \cf4 BufFrames\cf2 .kr(0)));\
	0.0 \cf3 //quiet\cf2 \
\}.play;\
)\
\
\cf3 //read it with a BufRd\cf2 \
(\
x = \{ \cf4 arg\cf2  rate=1; \
	\cf4 BufRd\cf2 .ar(1, 0, \cf4 Phasor\cf2 .ar(0, \cf4 BufRateScale\cf2 .kr(0) * rate, 0, \cf4 BufFrames\cf2 .kr(0))) \
\}.play(s);\
)\
\
\
\
x.set(\cf6 \\rate\cf2 , 5);\
y.set(\cf6 \\rate\cf2 , 2.0.rand);\
x.set(\cf6 \\rate\cf2 , 2);\
\
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
\
}