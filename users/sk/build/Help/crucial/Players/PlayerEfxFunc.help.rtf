{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PlayerEfxFunc
\f1\b0\fs24 \
\

\f0\b a Player and an effect\

\f1\b0 \

\f0\b 	PlayerEfxFunc(player,aHasPatchIns,inputIndex)\

\f1\b0 		
\f0\b player
\f1\b0  		- any player\
		
\f0\b aHasPatchIns
\f1\b0  	- subclass of HasPatchIns, most commonly Patch\
		
\f0\b inputIndex
\f1\b0  	- which PatchIn to plug the player into.\
					its easiest to write effect Patches with an 'audio' input\
					in the first slot, and the Patch can be saved with a PlayerInputProxy\
					as the input.\
				this is a deepIndex, a depth first traversal going down any subpatches.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
(\
\cf2 Instr\cf0 ([\cf3 \\metal\cf0 ,\cf3 \\cowboy\cf0 ],\{ \cf2 arg\cf0  trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;\
		\cf2 var\cf0  z;\
		\cf4 // cowboy horse\cf0 \
	z = 	[ `(#[ [ 1529.7, 1483.76, 1535.99, 1484.43, 1505.93, 1489.52, 1520.41, \
			1488.2, 1485.2, 1484.89, 1531.32, 1523.36, 1499.86, 1515.78 ], \
		  \cf2 nil\cf0 , [ 0.113974, 0.0999759, 0.240025, 0.0511734, 0.22413, 0.0680363,\
		  		 0.228308, 0.0525205, 0.0169197, 0.131742, \
		  0.18775, 0.0991267, 0.119733, 0.0575907 ] ]), \
		  `(#[ [ 1530.7, 1498.63, 1501.59, 1526.8, 1513.55, 1502.9, 1524.68, \
		  	1515.48, 1523.02, 1513.11, 1484.01, 1535.29, 1496.4, 1513.86 ], \
		  \cf2 nil\cf0 , \
		  [ 0.212696, 0.0171297, 0.0768345, 0.0789025, 0.323539, 0.0921697, \
		  	0.0149089, 0.102342, 0.117676, 0.058209,  0.0735961, 0.0207109, 0.385993, 0.04467 ] \
		  ]) ];\
\
		\cf2 Klank\cf0 .ar(z, \
			\cf2 Decay\cf0 .ar(\cf2 Impulsar\cf0 .ar(trig), decay, \cf2 WhiteNoise\cf0 .ar(noise)),\
			freqScale,\
			0.0,\
			timeScale);\
\});\
\
p = 	\cf2 Patch\cf0 ([\cf3 \\metal\cf0 ,\cf3 \\cowboy\cf0 ],[\
		 \cf2 Stream2Trig\cf0 (\cf2 Pseq\cf0 (#[ 0, 0, 0, 0.305556, 0, 0, 0, 0, 0, 0,  0, 0.1, 0, 0, 0, 0 ],\cf2 inf\cf0 ))\
  	]);\
\
e =  \cf2 Patch\cf0 (\{	\cf2 arg\cf0  audio,decay=1,maxDelay=0.3,qnty=4,chanDiff=0.1;\
			 \
			(qnty.asInteger).do(\{\
			 		\cf2 var\cf0  x; \
			 		audio = \
	 				\cf2 AllpassL\cf0 .ar(audio, maxDelay, 	\
		 				[rrand(0.01,maxDelay),rrand(0.01,maxDelay)],\
		 				decay)\
		 		 \});\
			audio\
	\},[\
		\cf2 PlayerInputProxy\cf0 .new\
	]);\
\
\cf2 PlayerEfxFunc\cf0 ( p, e ).gui \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 )\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 e.patchIns.insp\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
p.bus.insp\
e.bus.insp\
\
\
look for first patchIn of same rate\
\
p.synth.insp\
e.synth.insp\
\
\
player input proxy\
	in bus 6 2\
	out bus 5 1\
	\
	spec and  channels right\
\
\
\
\
p.rate\
  	\
  	\
  }