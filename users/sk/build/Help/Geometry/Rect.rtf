{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Rect			rectangle\

\f1\b0\fs24 \

\f0\b \ul Class methods:\

\f1\b0 \ulnone \

\f0\b new(inLeft, inTop, inWidth, inHeight)\

\f1\b0 \
return a new Rect with the given upper left corner and dimensions.\

\f0\b \
newSides(inLeft, inTop, inRight, inBottom)\

\f1\b0 \
return a new Rect with the given boundaries.\
\

\f0\b fromPoints(inPoint1, inPoint2)\

\f1\b0 \
return a new Rect defined by the given Points.\
\

\f0\b \ul Instance methods:\

\f1\b0 \ulnone \

\f0\b left\
top\
right\
bottom\

\f1\b0 \
Get the value of the boundary.\
\

\f0\b left_(aValue)\
top_(aValue)\
right_(aValue)\
bottom_(aValue)\

\f1\b0 \
Set the value of the boundary.\
\

\f0\b set(inLeft, inTop, inRight, inBottom)\

\f1\b0 \
set the boundaries to the given values.\
\

\f0\b setBy(inLeft, inTop, inWidth, inHeight)\

\f1\b0 \
set the upper left corner and dimensions.\
\

\f0\b setExtent(inWidth, inHeight)\

\f1\b0 \
set the dimensions.\
\

\f0\b width
\f1\b0 \
\
return the width.\
\

\f0\b height
\f1\b0 \
\
return the height,\
\

\f0\b width_(aValue)\

\f1\b0 \
set the width.\
\

\f0\b height_(aValue)\

\f1\b0 \
set the height.\
\

\f0\b origin
\f1\b0 \
\
return the upper left corner as a Point.\
\

\f0\b corner
\f1\b0 \
\
return the lower right corner as a Point.\
\

\f0\b extent
\f1\b0 \
\
return a Point whose x value is the height and whose y value is the width.\
\

\f0\b leftTop
\f1\b0 \
\
return the upper left corner as a Point.\
\

\f0\b rightTop
\f1\b0 \
\
return the upper right corner as a Point.\
\

\f0\b leftBottom
\f1\b0 \
\
return the lower left corner as a Point.\
\

\f0\b rightBottom
\f1\b0 \
\
return the lower right corner as a Point.\
\

\f0\b moveBy(x, y)\

\f1\b0 \
returns a new Rect which is offset by x and y.\
\

\f0\b moveTo(x, y)\

\f1\b0 \
returns a new Rect whose upper left corner is moved to (x, y).\
\

\f0\b moveToPoint(aPoint)\

\f1\b0 \
returns a new Rect whose upper left corner is moved to aPoint.\
\

\f0\b resizeBy(x, y)\

\f1\b0 \
returns a new Rect whose dimensions have been changed by (x, y).\
\

\f0\b resizeTo(x, y)\

\f1\b0 \
returns a new Rect whose dimensions are (x, y).\
\

\f0\b insetBy(x, y)\

\f1\b0 \
returns a new Rect whose boundaries have been inset by (x, y).\
\

\f0\b insetAll(insetLeft, insetTop, insetRight, insetBottom)\

\f1\b0 \
returns a new Rect whose boundaries have been inset by the given amounts.\
\

\f0\b contains(aPoint)\

\f1\b0 \
answers whether aPoint is in the receiver.\
\

\f0\b union(aRect)\
| aRect\

\f1\b0 \
returns a new Rect which contains the receiver and aRect.\
\

\f0\b sect(aRect)\
& aRect\

\f1\b0 \
returns a new Rect which is the intersection of the receiver and aRect.\
\
\
}