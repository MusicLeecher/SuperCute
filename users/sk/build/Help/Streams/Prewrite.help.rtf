{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Prewrite
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 superclass: FilterPattern
\f1\b0 \
\
Lindenmayer system pattern for selfsimilar structures.\
Its 
\f0\b dictionary
\f1\b0  maps one element to an array of child elements.\
The algorithm replaces iteratively (
\f0\b levels
\f1\b0  deep) elements by\
arrays of elements starting with the values in the 
\f0\b pattern.
\f1\b0 \
\
\

\f0\b Prewrite(pattern, dictionary, levels)
\f1\b0 \
\

\f0\b dict:
\f1\b0 \
	IdentityDictionary[\
		elem1 -> [ otherElements ],\
		elem2 -> [ otherElements ],\
		elem2 -> [ otherElements ]\
	]\
the examples use  the shortcut for IdentityDictionary.\
 _________________________________________________\
 \
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
a = \cf2 Prewrite\cf0 (0, \cf3 //start with 0\
\cf0  		\cf2 (\cf0 	0: #[2,0],\
 			1: #[0,0,1],\
 			2: #[1,0,1]\
 		), 4);\
x = a.asStream;\
30.do(\{ x.next.postln \});\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
Prewrite used as a sequence of pitches:\
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf4 "help-sinegrain"\cf0 , \
	\{ \cf2 arg\cf0  out=0, freq=440, sustain=0.05;\
		\cf2 var\cf0  env;\
		env = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.01, sustain, 0.2), doneAction:2);\
		\cf2 Out\cf0 .ar(out, \cf2 SinOsc\cf0 .ar(freq, 0, env))\
	\}).send(s);\
)\
\
\
(\
a = \cf2 Prewrite\cf0 (0,\cf3 	\cf2 (\cf0 	0: #[2,0],\
 					1: #[0,0,1],\
 					2: #[1,0,1]\
 				), \
 			4).asStream;\
\cf2 Routine\cf0 (\{\
	loop(\{\
	\cf2 Synth\cf0 (\cf4 "help-sinegrain"\cf0 , [\cf5 \\freq\cf0 , (a.next * 5 + 70).midicps]);\
	0.1.wait;\
	\})\
\}).play;\
)\
\
}