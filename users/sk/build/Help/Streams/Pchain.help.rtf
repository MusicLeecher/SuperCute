{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
\f3\fswiss\fcharset77 Helvetica-Oblique;\f4\fswiss\fcharset77 Helvetica-BoldOblique;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Pchain     		
\fs24 pass values from stream to  stream
\f1\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs24 \cf0 superclass: Pattern\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Pchain(pattern1, pattern2, ... patternN) 
\f3\i\b0 		pattern1 <- pattern2 <- ...patternN
\f0\i0\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
\
	
\f0\b pattern1, pattern2..
\f2\b0 		the patterns to be chained up. \
						\
	\
	values that the stream of 
\f0\b pattern2
\f2\b0  produces are used as inval to the stream of 
\f0\b pattern1
\f2\b0 .\
	Therefore pattern1 overrides (or filters) the output of pattern2, and so forth. \
	This is an equivalent to the composite pattern:  
\f3\i pattern1 <> pattern2 <> ... patternN\
	\

\f2\i0 \
			
\f1\fs18 \
\
	
\f0\b\fs24 <> pattern	
\f2\b0 		add another pattern to the chain\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // examples\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Pchain\cf0  (\
	\cf3 Pbind\cf0 (\cf4 \\detune\cf0 , \cf3 Pseq\cf0 ([-30, 0, 40], \cf3 inf\cf0 ), \cf4 \\dur\cf0 , \cf3 Prand\cf0 ([0.2, 0.4], \cf3 inf\cf0 )),\
	\cf3 Pbind\cf0 (\cf4 \\degree\cf0 , \cf3 Pseq\cf0 ([1, 2, 3], \cf3 inf\cf0 ), \cf4 \\dur\cf0 , 1)\
).trace.play;\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // also events can be used directly:\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Pchain\cf0  (\
	\cf3 Pbind\cf0 (\cf4 \\degree\cf0 , \cf3 Pseq\cf0 ([1, 2, 3], \cf3 inf\cf0 )),\
	(detune: [0, 4])\
).trace.play;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 // compose some more complicated patterns:\cf6 \
(\
\cf7 var\cf6  a, b;\
a = \cf7 Prand\cf6 ([ \
	\cf7 Pbind\cf6 (\cf8 \\degree\cf6 , \cf7 Pseq\cf6 ([0, 1, 3, 5, 6])), \
	\cf7 Pbind\cf6 (\cf8 \\dur\cf6 , \cf7 Pshuf\cf6 ([0.4, 0.3, 0.3]), \cf8 \\degree\cf6 , \cf7 Pseq\cf6 ([3, -1])) \
], \cf7 inf\cf6 );\
b = \cf7 Prand\cf6 ([\
	\cf7 Pbind\cf6 (\cf8 \\ctranspose\cf6 , \cf7 Pn\cf6 (1, 4)),\
	\cf7 Pbind\cf6 (\cf8 \\mtranspose\cf6 , \cf7 Pn\cf6 (2, 7))\
	], \cf7 inf\cf6 );\
c = \cf7 Prand\cf6 ([\
	\cf7 Pbind\cf6 (\cf8 \\detune\cf6 , \cf7 Pfuncn\cf6 ( \{ [0, 10.0].rand \}, 5), \cf8 \\legato\cf6 , 0.2, \cf8 \\dur\cf6 , 0.2),\
	\cf7 Pbind\cf6 (\cf8 \\legato\cf6 , \cf7 Pseq\cf6 ([0.2, 0.5, 1.5], 2), \cf8 \\dur\cf6 , 0.3)\
], \cf7 inf\cf6 );\
\cf7 Pchain\cf6 (a, b, c).trace.play;\
)\
\cf0 \
\

\f0\b\fs24 \
pattern composition: 	
\f4\i pattern <> pattern <> pattern 
\f1\i0\b0\fs18 \
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // implicitly, the composition operator <> returns a Pchain when applied to a pattern.\
// so that a <> b creates a Pchain (a, b).\
// as seen above, in Pchain(a, b), a specifies (and overrides) b: b is the input to a. \
\
// the above example is equivalent to:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 (Pbind\cf0 (\cf4 \\degree\cf0 , \cf3 Pseq\cf0 ([1, 2, 3], \cf3 inf\cf0 )) <> (detune: [0, 4])).trace.play;\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
(\
a = \cf3 Pbind\cf0 (\cf4 \\degree\cf0 , \cf3 Pseq\cf0 ([1, 2, 3], \cf3 inf\cf0 ), \cf4 \\dur\cf0 , \cf3 Prand\cf0 ([0.2, 0.4], \cf3 inf\cf0 ));\
b = \cf3 Pbind\cf0 (\cf4 \\detune\cf0 , \cf3 Pseq\cf0 ([-30, 0, [0, 40]], \cf3 inf\cf0 ), \cf4 \\dur\cf0 , 0.1);\
c = b <> a;\
c.play; \cf2 // see that the \\dur key of a is overridden by b\cf0 \
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // also value streams can be composed\cf0 \
(\
a = \cf3 Pfunc\cf0  \{ \cf3 |x|\cf0  x + 1.33 \};\
b = \cf3 Pfunc\cf0  \{ \cf3 |x|\cf0  x * 3 \};\
c = \cf3 Pseries\cf0 (1, 2, \cf3 inf\cf0 );\
)\
\
\cf2 // post some values from the composite streams:\cf0 \
\
t = (a <> b).asStream;\
10.do \{ t.value(10).postln \};\
\
t = (a <> b <> c).asStream;\
10.do \{ t.value(10).postln \};\
\
t = (b <> c <> a).asStream;\
10.do \{ t.value(10).postln \};\
\
\
\
}