{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 PlazyEnvirN
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 superclass: PlazyEnvir
\f1\b0 \
\
\
Evaluates a function that returns a pattern and embeds it in a stream.\
In difference to [\ul Plazy\ulnone ], the function is evaluated using the environment passed in by the stream.\
In difference to [\ul PlazyEnvir\ulnone ], PlayzEnvirN expands to 
\f0\b multiple parallel patterns
\f1\b0  if the function arguments\
receive multiple channels. In difference to PlazyEnvir, this works only with event streams.\
\
\
\

\f0\b PlazyEnvirN(func)
\f1\b0 \
\
\
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 // example\cf3 \
\
(\
\cf4 SynthDef\cf3 (\cf5 "help-sinegrain"\cf3 , \
	\{ \cf4 arg\cf3  out=0, freq=440, sustain=0.05, pan=0;\
		\cf4 var\cf3  env;\
		env = \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(0.01, sustain, 0.2), doneAction:2);\
		\cf4 Out\cf3 .ar(out, \cf4 Pan2\cf3 .ar(\cf4 SinOsc\cf3 .ar(freq, 0, env), pan))\
	\}).store;\
\
a = \cf4 PlazyEnvirN\cf3 (\{ \cf4 arg\cf3  g=0, h=0, dur=1;\
	\cf0 postf(\cf6 "g: %, h: %, dur: %\\n"\cf0 , g, h, dur);\
\cf3 \
	\cf4 Pbind\cf3 (\
		\cf7 \\instrument\cf3 , \cf7 'help-sinegrain'\cf3 ,\
		\cf7 \\dur\cf3 , dur,\
		\cf7 \\degree\cf3 , \cf4 Pseq\cf3 ([g, g, h, g, h], 2)\
	)\
\});\
);\
\
\
\cf2 // different variants\cf3 \
(a <> (g: 0, h: 3, dur:0.2)).play; \cf2 // single stream\cf3 \
(a <> (g: [0, 4], h: [3, -1], dur:0.2)).play; \cf2 // same durations, two streams\cf3 \
(a <> (g: [0, 4], h: [3, -1], dur: [0.2, 0.3])).play; \cf2 // different durations, two streams\cf3 \
\
\cf2 // for more about the composition operator <> see: Pchain\cf3 \
}