{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 MIDIOut
\f1\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 MIDIout 
\f2\b0 objects interface MIDI output ports defined by the operating system to the language.\
  from the operating system to a set of user defined functions.\
  \
  
\f0\b methods
\f2\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0    noteOn ( chan, note, veloc )\
   noteOff ( chan, note, veloc )\
   polyTouch ( chan, note, val )\
   control ( chan, ctlNum, val )\
   program ( chan, num )\
   touch ( chan, val )\
   bend ( chan, val )\
   allNotesOff ( chan )\
   smpte ( frames, seconds, minutes, hours, frameRate )\
   songPtr ( songPtr )\
   songSelect ( song )\
   midiClock (  )\
   startClock (  )\
   continueClock (  )\
   stopClock (  )\
   reset (  )\
   sysex ( uid, Int8Array )\
   send ( outport, uid, len, hiStatus, loStatus, a, b, latency )\
\
\
MIDIClient.init;\
\
m = MIDIOut(0, MIDIClient.destinations.at(0).uid);\
m.noteOn(16, 60, 60);\
\
MIDIIn.connect;\
MIDIIn.sysex = \{ arg uid, packet; [uid,packet].postln \};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 MIDIIn\cf0 .sysrt = \{ \cf2 arg\cf0  src, chan, val; 	[src, chan, val].postln; \};\
\cf2 MIDIIn\cf0 .smpte = \{ \cf2 arg\cf0  src, chan, val; 	[src, chan, val].postln; \};\
\
m.sysex(MIDIClient.destinations.at(0).uid, Int8Array[ 16rf0, 0, 0, 27, 11, 0,16rf7])\
\
   m.smpte (24,16) \
   m.midiClock \
   m.start \
   m.continue \
   m.stop \
 }