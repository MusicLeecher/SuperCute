{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Pipe
\fs24 \
\
superclass: UnixFILE\
\

\f1\b0 Pipe stdin to, or stdout from, a unix shell command. Pipe treats the shell command as if it were a 
\f0\b UnixFILE
\f1\b0 , and returns nil when done. See 
\f0\b UnixFILE 
\f1\b0 for details of the access methods. Pipe must be explicitly closed. Do not rely on the garbage collector to do this for you!\
\
\

\f0\b Note: 
\f1\b0 due to a bug in the current os x (10.3) , unix commands like pipe do not work when the server is booted.\
for now one has to quit the server, otherwise sc crashes.\
\

\f0\b \
\
*new(commandLine, mode)\
\
	commandLine
\f1\b0  - A String representing a valid shell command.\
	
\f0\b mode 
\f1\b0 - A string representing the mode. Valid modes are "w" (pipe to stdin) and "r" (pipe from stdout).\
	\

\f0\b close\
	
\f1\b0 Closes the pipe. You must do this explicitly before the Pipe object is garbage collected.\
	\

\f0\b \ul Examples
\f1\b0 \ulnone \
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 // quit the server\cf0 \
s.quit;\
\
\cf2 // this pipes in stdout from ls\cf0 \
(\
\cf3 var\cf0  p, l;\
p = \cf3 Pipe\cf0 .new(\cf4 "ls -l"\cf0 , \cf4 "r"\cf0 );						\cf2 // list directory contents in long format\cf0 \
l = p.getLine;								\cf2 // get the first line\cf0 \
while(\{l.notNil\}, \{l.postln; l = p.getLine; \});	\cf2 // post until l = nil\cf0 \
p.close;										\cf2 // close the pipe to avoid that nasty buildup\cf0 \
)\
\
\
A more time-intensive request:\
(\
\cf3 var\cf0  p, l;\
p = \cf3 Pipe\cf0 .new(\cf4 "ping -c10 sourceforge.net"\cf0 , \cf4 "r"\cf0 );						\cf2 // list directory contents in long format\cf0 \
l = p.getLine;								\cf2 // get the first line\cf0 \
while(\{l.notNil\}, \{l.postln; l = p.getLine; \});	\cf2 // post until l = nil\cf0 \
p.close;										\cf2 // close the pipe to avoid that nasty buildup\cf0 \
)\
\
\
}