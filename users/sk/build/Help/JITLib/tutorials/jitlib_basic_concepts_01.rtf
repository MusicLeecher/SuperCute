{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Georgia-Bold;\f2\fnil\fcharset77 Monaco;
\f3\fswiss\fcharset77 Helvetica;\f4\fswiss\fcharset77 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs30 \cf0 some placeholders in supercollider  		
\f1\fs72 1
\f2\b0\fs18 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs24 \cf0 this helpfile explains some basic concepts of interactive programming \
with supercollider and proxy space.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs24 \cf0 previous: [\ul JITLib\ulnone ]  			next: [\ul jitlib_basic_concepts_02\ulnone ]
\f2\fs18 \
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 a) What is a proxy?
\f3\b0 \
\
A proxy is a place holder that is often used  to operate on something that does not yet exist.\
For example, an 
\f4\i OutputProxy 
\f3\i0 is used to represent multiple outputs of a ugen, even if only\
one ugen is created eventually. \
Any object can have proxy behaviour (it may delegate function calls to different objects for example) \
but specially functions and references can be used as operands while they keep their \
referential quality.\
\
see also:     [\ul OutputProxy\ulnone ] [\ul Function\ulnone ] [\ul Ref\ulnone ] \
\
\
\

\f0\b using a Ref as a proxy:
\f3\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 // reference example\cf0 \
\
\cf2 // create a new Ref object\cf0 \
y = `(nil); \
\
\cf2 // you can start to calcuate with y, even if its value is not yet given:\cf0 \
z = y + 10; \cf2 // returns a function\cf0 \
\
\cf2 // now the source can be set:\cf0 \
y.value = 34;\
\
\cf2 // the function z can be evaluated now.\cf0 \
z.value\
\
\
\cf2 // the same without a reference does not work:\cf0 \
\
y = \cf3 nil\cf0 ; \cf2 // empty y first\cf0 \
\
z = y + 10; \cf2 // this fails.\cf0 \
\
\cf2 // also an array does not provide this referentiality:\cf0 \
\
y = [\cf3 nil\cf0 ]; \cf2 // array with nil as element\cf0 \
\
z = y + 10; \cf2 // this fails.\
\
// an environment without sufficient defaults has the same problem:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 currentEnvironment.postln; \cf2 // anEnvironment\cf0 \
~x; \cf2 // access the enironment: there is nothing stored: nil\cf0 \
~x = 9; \cf2 // store something\cf0 \
~x; 	\cf2 // now 9 is stored\cf0 \
~x + 100; \cf2 // calculate with it\cf0 \
\
currentEnvironment.postln; \cf2 // the value is stored in the environment\cf0 \
\
~y + ~x; \cf2 // cause an error: ~y is nil.\cf0 \
~y = -90; \cf2 // set ~y\cf0 \
\
~y + ~x; \cf2 // this works.\cf0 \
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 using a Function as a proxy:
\f2\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // a function can serve the same purpose\cf0 \
\
y = \cf3 nil\cf0 ; \cf2 // empty y first\cf0 \
z = \{ y \} + 10; \cf2 // this does not fail, instead it creates a new function, which \
			// does not fail when evaluating it after y is set to 34.\cf0 \
\
y = 34;\
z.value;\
\
\
see also client side proxies like [\ul Tdef\ulnone ][\ul Pdefn\ulnone ][\ul Pdef\ulnone ]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 \
\
\
\
b) NodeProxy
\f2\b0\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs24 \cf0 \
For interactive programming it can be useful to be able to use something before it is there - it makes evaluation order more flexible and allows to postpone decisions to a later moment. Some preparations have to be done usually - like above, a reference has to be created. In other situations this sort of preparation is not enough, for example if one wants to do maths with running processes on the server. \
\
Audio output on the server has mainly two properties - a 
\f4\i calculation rate
\f3\i0  (audio or control) and a certain 
\f4\i number of channels
\f3\i0 . These are the main static properties of a node proxy, which cannot be changed while it is in use.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 // boot the server\cf0 \
s.boot;\cf2 \
\
// two proxies on a server. calculation rate is audio rate, number of channels is 2\cf0 \
y = \cf3 NodeProxy\cf0 .audio(s, 2);\
z = \cf3 NodeProxy\cf0 .audio(s, 2);\
\
\cf2 // use them in calculation\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 z.play;\
z.source = y.sin * 0.2;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // set its source now.\cf0 \
y.source = \{\'ca\cf3 Saw\cf0 .ar([300, 301], 4*pi) \};\
\
\cf2 // the source can be of various type, one of them would be a number:\cf0 \
y.source = 0.0;\
\
\cf2 // post the source\cf0 \
y.source;\
\
\cf2 // end them, free their bus number\cf0 \
y.clear;\
z.clear;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs24 \cf0 In order to provide a simple way of creating node proxies, a proxy space can be used.\
So the above reads like this:
\f2\fs18 \
\
\
p = \cf3 ProxySpace\cf0 .push(s.boot); \cf2 // store proxy space in p so it can be accessed easily.
\f3\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 ~z.play;\
\
\
~z = ~y.sin * 0.2;\
\
\
~y = \{\'ca\cf3 Saw\cf0 .ar([300, 301], 4*pi) \};\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // clear the space (all proxies)\cf0 \
p.clear;\
\
\cf2 // move out of the proxyspace.\cf0 \
p.pop;\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs24 \cf0 further readings:  [\ul NodeProxy\ulnone ] [\ul ProxySpace\ulnone ] [\ul Ndef\ulnone ]
\f2\fs18 \
\
\
\

\f3\fs24 next: [\ul jitlib_basic_concepts_02\ulnone ]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
}