{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 CocoaDialog
\f1\b0\fs18 \
\

\f0\b\fs24 File dialogs that utilize OS X Cocoa services.\

\f1\b0\fs18 \

\f2\fs24 Due to Cocoa/Application kit limitations with multi-threading, the AppClock will be blocked from ticking while you are in a dialog.  The SystemClock will continue to tick and fire events.\

\f1\fs18 \
\

\f0\b\fs24 *getPaths(okFunc,cancelFunc)\

\f1\b0\fs18 \
(\
\
\cf2 CocoaDialog\cf0 .getPaths(\{ \cf2 arg\cf0  paths;\
	paths.do(\{ \cf2 arg\cf0  p;\
		p.postln;\
	\})\
\},\{\
	\cf3 "cancelled"\cf0 .postln;\
\});\
\
)\
\
\
\
\
\
\
(\cf4 // test that sched is uninterrupted\
\cf0 i = 0;\
\cf2 AppClock\cf0 .sched(1.0,\{\
	i = i + 1;\
	i.postln;\
	1.0\
\});\
\
\
i = 0;\
\cf2 SystemClock\cf0 .sched(1.0,\{\
	i = i + 1;\
	i.postln;\
	1.0\
\});\
\
)}