{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \

\f1\b\fs36 ModelGroup\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs26 \cf0 superclass: AbstractEnsemble / Group
\fs36 \
\

\f2\b0\fs26 a representation of a group that keeps any mappings or control settings\
for all synths that get moved or created within this group.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs26 \cf0 specific interface:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b\fs26 \cf0 ModelGroup.new(updateFunc, target, addAction)
\f0\b0\fs18 \
\

\f1\b\fs26 updateFunc_(aFunction)
\f0\b0\fs18 \
	
\f2\fs26 this function gets called when a node is moved into this\
	group or a node is created inside this group.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //evaluate a function when a node is moved into the model\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
g = \cf3 ModelGroup\cf0 (\{ \cf3 arg\cf0  cmdList, node; node.nodeID.post; \cf4 " says: hi! I was changed"\cf0 .postln \});\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Synth\cf0 .tail(g, \cf4 "sine"\cf0 );\
a = \cf3 Synth\cf0 (\cf4 "sine"\cf0 );\
a.moveToHead(g);\
\
g.free;\
\
\cf2 //add something to the commandlist that should be sent to the server\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
g = \cf3 ModelGroup\cf0 (\{ \cf3 arg\cf0  cmdList, node; \
			cmdList.add([\cf4 "/n_set"\cf0 , node.nodeID, \cf5 \\freq\cf0 , 1000]);\
		 \});\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Synth\cf0 .tail(g, \cf4 "sine"\cf0 );\
a = \cf3 Synth\cf0 (\cf4 "sine"\cf0 );\
a.moveToHead(g);\
\
g.free;\
\
\cf2 //you can also use the bundledCommand scheme to add command to the list: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
g = \cf3 ModelGroup\cf0 (\{ \cf3 arg\cf0  cmdList, node; \
			node.addCommand(cmdList, \cf4 "/n_set"\cf0 , [\cf5 \\freq\cf0 , 500]);\
		 \});\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Synth\cf0 .tail(g, \cf4 "csine"\cf0 );\
a = \cf3 Synth\cf0 (\cf4 "csine"\cf0 );\
g.moveNodeToHead(a);\
\
g.free;\
\
\
\
}