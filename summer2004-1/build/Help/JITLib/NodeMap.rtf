{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 NodeMap
\f1\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs26 \cf0 object to store control values and bus mappings independant of of a specific node.
\f1\fs18 \
\

\f2\fs26 	
\f0\b\fs24 set(key1, value1, ...)
\f2\b0  			set arguments of a node\
	
\f0\b map(key1, busindex1, ...)
\f2\b0  		set bus mappings of a node\
	
\f0\b unset(key1, key2, ...)	
\f2\b0 		remove settings\
	
\f0\b unmap(key1, key2, ...)
\f2\b0 			remove mappings\
	
\f0\b setn(key1, valueArray1, ...) 
\f2\b0 		set ranges of controls\
	\
	
\f0\b sendToNode(aTarget, latency)
\f2\b0 	apply a setting to a node by sending a bundle\
	
\f0\b send(server, nodeID, latency)
\f2\b0 	apply a setting to a node by sending a bundle
\fs26 \
	
\f0\b\fs24 addToBundle(aBundle)			
\f2\b0 add all my messages to the bundle
\fs26 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf2 \
\cf3 //todo: mapn\cf0 \
\
s.boot;\
\
(\
\cf4 SynthDef\cf0 (\cf5 "modsine"\cf0 , \
	\{ \cf4 arg\cf0  freq=320, amp=0.2;\
		\cf4 Out\cf0 .ar(0, \cf4 SinOsc\cf0 .ar(freq, 0, amp));\
	\}).send(s);\
\cf4 SynthDef\cf0 (\cf5 "lfo"\cf0 , \
	\{ \cf4 arg\cf0  rate=2, busNum=0;\
		\cf4 Out\cf0 .kr(busNum, \cf4 LFPulse\cf0 .kr(rate, 0, 0.1, 0.2)) \
	\}).send(s);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 //start nodes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 (\
b = \cf4 Bus\cf0 .control(s,1);\
x = \cf4 Synth\cf0 (\cf5 "modsine"\cf0 );\
y = \cf4 Synth\cf0 .before(x, \cf5 "lfo"\cf0 , [\cf7 \\busNum\cf0 , b.index]);\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 //create some node maps\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 (\
h = \cf4 NodeMap\cf0 .new;\
h.set(\cf7 \\freq\cf0 , 800);\
h.map(\cf7 \\amp\cf0 , b.index);\
\
k = \cf4 NodeMap\cf0 .new;\
k.set(\cf7 \\freq\cf0 , 400);\
k.unmap(\cf7 \\amp\cf0 );\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 //apply the maps\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
h.sendToNode(x); //the first time a new bundle is made\
k.sendToNode(x);\
\
h.sendToNode(x); //the second time the cache is used\
k.sendToNode(x);\
\
h.set(\cf7 \\freq\cf0 , 600);\
\
h.sendToNode(x); //when a value was changed, a new bundle is made\
\
\cf3 //free all\cf2 \
x.free; b.free; y.free;\
\cf0 \
\
\
}