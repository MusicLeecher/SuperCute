{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Point		Cartesian point\
\

\fs24 Superclass: Object
\f1\b0 \
\
Defines a point on the Cartesian plane.\
\
\

\f0\b\fs28 \ul Creation
\fs24 \ul \

\f1\b0 \ulnone \

\f0\b new(inX, inY)\

\f1\b0 \
defines a new point.\
\
\

\f0\b\fs28 \ul Accessing
\fs24 \ul \

\f1\b0 \ulnone \

\f0\b x
\f1\b0 \
\
get the x coordinate value.\
\

\f0\b y
\f1\b0 \
\
get the y coordinate value.\
\

\f0\b x_(aValue)
\f1\b0 \
\
set the x coordinate value.\
\

\f0\b y_(aValue)
\f1\b0 \
\
set the y coordinate value.\
\

\f0\b set(inX, inY)\
\

\f1\b0 Sets the point x and y values.\
\
\

\f0\b\fs28 \ul Testing
\f1\b0\fs24 \ulnone \
\

\f0\b == aPoint\

\f1\b0 \
answers a Boolean whether the receiver equals the argument.\
\

\f0\b hash
\f1\b0 \
\
returns a hash value for the receiver.\
\
\

\f0\b\fs28 \ul Math
\f1\b0\fs24 \ulnone \
\

\f0\b + aPointOrScalar\

\f1\b0 \
Addition.\
\

\f0\b - aPointOrScalar\

\f1\b0 \
Subtraction.\
\

\f0\b * aPointOrScalar\

\f1\b0 \
Multiplication.\
\

\f0\b / aPointOrScalar\

\f1\b0 \
Division.\
\

\f0\b translate(aPoint)\

\f1\b0 \
Addition by a Point.\
\

\f0\b scale(aPoint)\

\f1\b0 \
Multiplication by a Point.\
\

\f0\b rotate(angle)\

\f1\b0 \
Rotation about the origin by the angle given in radians.\
\

\f0\b abs
\f1\b0 \
\
Absolute value of the point.\
\

\f0\b rho
\f1\b0 \
\
return the polar coordinate radius of the receiver.\
\

\f0\b theta
\f1\b0 \
\
return the polar coordinate angle of the receiver.\
\

\f0\b dist(aPoint)\

\f1\b0 \
return the distance from the receiver to aPoint.\
\

\f0\b transpose
\f1\b0 \
\
return a Point whose x and y coordinates are swapped.\
\

\f0\b round(quantum)\

\f1\b0 \
round the coordinate values to a multiple of quantum.\
\

\f0\b trunc(quantum)\

\f1\b0 \
truncate the coordinate values to a multiple of quantum.\
\
\

\f0\b\fs28 \ul Conversion
\f1\b0\fs24 \ulnone \
\

\f0\b asPoint
\f1\b0 \
\
returns the receiver.\
\

\f0\b asComplex
\f1\b0 \
\
returns a complex number with x as the real part and y as the imaginary part.\
\

\f0\b asString
\f1\b0 \
\
return a string representing the receiver.\
\

\f0\b asShortString
\f1\b0 \
\
return a short string representing the receiver.\
\

\f0\b paramsCompileString
\f1\b0 \
\
represent parameters to 'new' as compileable strings. (See Object::asCompileString)\
\
}