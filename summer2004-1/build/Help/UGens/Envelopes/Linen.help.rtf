{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Linen
\f1\b0\fs18       
\f0\b\fs28 simple linear envelope generator
\f1\b0\fs18 \
\

\f0\b\fs24 Linen.kr(  gate = 1.0, attackTime = 0.01, susLevel = 1.0, releaseTime = 1.0, doneAction = 0 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 \
\
\cf2 // trigged\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "help-Linen"\cf3 ,\{ \cf4 arg\cf3  out = 0;\
	\cf4 Out\cf3 .ar(out,\
		\cf4 Linen\cf3 .kr(\cf4 Impulse\cf3 .kr(2), 0.01, 0.6, 1.0, doneAction: 0) * \cf6 SinOsc\cf0 .ar(440, 0, 0.1)\cf3 \
	)\
\}).play;\
)\
\
\cf2 // play once and end the synth\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "help-Linen"\cf3 ,\{ \cf4 arg\cf3  out=0;\
	\cf4 Out\cf3 .ar(out,\
		\cf4 Linen\cf3 .kr(\cf4 Impulse\cf3 .kr(0), 0.01, 0.6, 1.0, doneAction: 2) * \cf4 SinOsc\cf3 .ar(440, 0, 0.1)\
	)\
\}).play;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf7 // play once and sustain\cf0 \
(\cf3 \
x = \cf4 SynthDef\cf3 (\cf5 "help-Linen"\cf3 ,\{ \cf4 arg\cf3  gate = 1, out = 0; \cf2 // use gate arg for release\cf3 \
	\cf4 Out\cf3 .ar(out,\
		\cf4 Linen\cf3 .kr(gate, 0.01, 0.6, 1.0, doneAction: 2) * \cf6 SinOsc\cf0 .ar(440, 0, 0.1)\cf3 \
	)\
\}).play;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 )\cf3 \
x.release(4); \cf2 // change the release time\cf3 \
\
\cf2 // longer gate, can pass in duration\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "help-Linen"\cf3 ,\{ \cf4 arg\cf3  out = 0, dur = 0.1;\
	\cf4 var\cf3  gate;\
	gate = \cf4 Trig\cf3 .kr(1.0, dur);\
	\cf4 Out\cf3 .ar(out,\
		\cf4 Linen\cf3 .kr(gate, 0.01, 0.6, 1.0, doneAction: 2) * \cf6 SinOsc\cf0 .ar(440, 0, 0.1)\cf3 \
	)\
\}).play(\cf4 nil\cf3 , [\cf8 \\out\cf3 , 0, \cf8 \\dur\cf3 , 2.0]);\
)\
\
\
\
\cf2 // used below in a Routine varying the releaseTime\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "help-Linen"\cf3 ,\{ \cf4 arg\cf3  out=0,freq=440,attackTime=0.01,susLevel=0.6,releaseTime=0.1;\
	\cf4 Out\cf3 .ar(out,\
		\cf4 Linen\cf3 .kr(\cf4 Impulse\cf3 .kr(0), attackTime, susLevel, releaseTime, doneAction: 2)\
			* \cf4 SinOsc\cf3 .ar(freq, 0, 0.1)\
	)\
\}).send(s);\
)\
\
(\
\cf2 // debussey sleeping through math class\cf3 \
x = \cf4 Pbrown\cf3 (0.01, 2.0, 0.2, \cf4 inf\cf3 ).asStream;\
\cf4 Routine\cf3 (\{\
	loop(\{\
		\cf4 Synth\cf3 .grain(\cf5 "help-Linen"\cf3 ,[\cf8 \\freq\cf3 , (rrand(20, 50) * 2).midicps, \cf8 \\releaseTime\cf3 , x.next]);\
		0.25.wait;\
	\})\
\}).play(\cf4 TempoClock\cf3 .default)\
)\
\
\
\
\
\
(\
\cf4 SynthDef\cf3 (\cf5 "help-Linen"\cf3 ,\{ \cf4 arg\cf3  out = 0;\
	\cf4 Out\cf3 .ar(out,\
	\
		\cf4 Linen\cf3 .kr(\cf4 Impulse\cf3 .kr(2),\
			0.01,\
			\cf2 // sustain level is polled at time of trigger\cf3 \
			\cf4 FSinOsc\cf3 .kr(0.1).range(0, 1),\
			1.0,\
			doneAction: 0)\
			\
			* \cf4 SinOsc\cf3 .ar(440, 0, 0.1)\
	)\
\}).play;\
)\cf0 \
\
}