{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f0\b\fs40 \cf0 Ppatlace : Pseq : ListPattern 
\f1\b0\fs24 \
\
Similar to 
\f0\b [Place]
\f1\b0 , but the list is an array of streams or patterns. The results of each stream will be output in turn.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 p = \cf2 Ppatlace\cf0 ([\cf2 Pwhite\cf0 (1, 5, 5), \cf2 Pgeom\cf0 (10, 1.01, 10)], \cf2 inf\cf0 );\
x = p.asStream;\
\{ (y = x.next).notNil \}.while(\{ y.postln \});
\f1\fs24 \
\

\f2\fs18 5		\cf3 // from Pwhite\cf0 \
10		\cf3 // from Pgeom\cf0 \
4		\cf3 // from Pwhite\cf0 \
10.1		\cf3 // etc....\cf0 \
5\
10.201\
4\
10.30301\
2\
10.4060401\
10.510100501\
10.61520150601\
10.72135352107\
10.828567056281\
10.936852726844\
\cf2 nil\cf0 \

\f1\fs24 \
\
Note that the Ppatlace has an infinite number of repeats, but the resulting stream is finite because the member streams are all finite. When the first stream (Pwhite) comes to an end, it is skipped and you see only the second stream until it stops.\
\
If even one member stream is infinite and Ppatlace has infinite repeats, the Ppatlace stream will also be infinite.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Ppatlace as a sequence of pitches:
\f1\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\cf2 SynthDef\cf0 (\cf4 "help-sinegrain"\cf0 , \
	\{ \cf2 arg\cf0  out=0, freq=440, dur=0.05;\
		\cf2 var\cf0  env;\
		env = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.01, dur, 0.2), doneAction:2);\
		\cf2 Out\cf0 .ar(out, \cf2 SinOsc\cf0 .ar(freq, 0, env))\
	\}).send(s);\
)\
\
\
(\
c = \cf2 Ppatlace\cf0 ([\
	\cf2 Pxrand\cf0 ([\cf2 Pseq\cf0 (#[0, -2, -3, -5, -7], 1), \cf2 Pwhite\cf0 (-12, 4, 3), \cf2 Pshuf\cf0 (#[0, -2, -3, -5, -7], 1)], \cf2 inf\cf0 ),\
	\cf2 Pxrand\cf0 ([\cf2 Pseq\cf0 (#[0, 2, 4, 5, 7], 1), \cf2 Pwhite\cf0 (-4, 12, 3), \cf2 Pshuf\cf0 (#[0, 2, 4, 5, 7], 1)], \cf2 inf\cf0 )\
], \cf2 inf\cf0 ) + 67;\
x = c.asStream;\
\cf2 Routine\cf0 (\{\
	loop(\{\
			\cf2 Synth\cf0 (\cf4 "help-sinegrain"\cf0 , [\cf5 \\freq\cf0 , x.next.midicps, \cf5 \\dur\cf0 , 0.2]);\
			0.17.wait;\
	\})\
\}).play;\
)\
}