{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 ControlPrototypes		
\fs32 procure controls for inputs
\fs36 \

\f1\b0\fs24 \
This is a registery of controls, cataloged by the Spec of their output.  It is used by Patch, and potentially\
by others, to procure suitable control objects to satisfy an argument to a function.\
\

\f0\b In other words:  you give it a Spec, it gives you some suitable Player object to use as an input.\

\f1\b0 \
Patch uses this registery when an argument was not supplied.   See the discussion in 
\f0\b Patch
\f1\b0  help.\
\
\
\
In this distribution, no special controls are registered for specific specs.  You could use this\
to customise your "auto input creation" in any number of ways.\
\
In your Main-startUp method:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 		\cf3 ControlPrototypes\cf2 .define(\
				\
			\cf4 \\trig\cf2  -> \{[\
						\cf3 StreamKrDur\cf2 (\cf3 Pseq\cf2 (\cf3 Array\cf2 .fill(\
					]\},\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 //			\\freq -> \{[\cf2 \
\cf5 //					ModalFreq(StreamKrDur(Pseq(Array.fill(16,\{ rrand(0,11).round \}),0.25)\cf2 \
\cf5 //							.. etc...\cf2 \
\cf5 //				]\},\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 			\cf3 EnvSpec\cf2  -> \{[\
						\cf3 EnvEditor\cf2 .new(\cf3 Env\cf2 .adsr)\
					]\}\cf0 \
		);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 		\

\f0\b *define( associations...)\

\f1\b0 \
Keys are either symbols or classes, the values are functions that return arrays of prototypes.  Patch simply selects the first in the list.  Other methods of ControlPrototypes use the full list.\
\
The function is valued each time so that the control is a unique instance.\
\
You may freely change or redefine control protypes while working/composing without recompiling.\
\
This class also serves to decouple Spec from knowing of the various controls, gadgets and widgets.\
\
}