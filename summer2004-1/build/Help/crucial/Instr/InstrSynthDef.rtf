{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 InstrSynthDef
\f1\b0\fs24 \cf3 \
\
this is how Patch performs its magic.\
\
how it works :\
\

\f0\b\fs28 \cf2 InstrSynthDef\cf3 .build( instr, objects, outClass )\

\f1\b0\fs24 	\
	each object is asked to initForSynthDef(synthDef,argIndex)\
		\cf2 BufferProxy\cf3  classes use the argument index to build a unique key\
		so they dont conflict with other \cf2 BufferProxies\cf3 .\
		all other classes need do nothing.\
\
	each object is asked to addToSynthDef(synthDef,argName)\
		depending on the objects rate it asks the synthDef to\
			addKr(argName,value,lag)\
			addIr(argName,value)\
			addInstrOnlyArg(argName,value)\
			\
		the object may choose which initial value to pass.  if a \cf2 Player\cf3  does not yet\
		know its bus assignment, it can safely pass a 0 as it will be asked what bus\
		it is playing on when the actual synth is being started.\
		objects such as \cf2 Env\cf3  or \cf2 Float\cf3  or \cf2 Array\cf3  will pass themselves as an instrOnly \cf2 arg\cf3 , \
			thus fixing them in the synthDef\
		objects such as \cf2 Sample\cf3  can be used in the course of the ugenGraph evaluation\
			to add \cf4 'secret'\cf3  additional inputs. (see below)\
			\
	the synthDef builds \cf2 Control\cf3  objects from the kr and ir inputs.\
	\
	each object is asked to return an instrArgFromControl(control,argIndex)\
		\cf2 Players\cf3  return \cf2 In\cf3 .ar(control, \cf2 this\cf3 .numChannels) or \cf2 In\cf3 .kr\
			the control is a kr \cf2 OutputProxy\cf3  that indicates the bus that input \
			should listen to.\
		\cf2 KrNumberEditors\cf3  return either the raw control or wrap it in a \cf2 Lag\cf3 \
		\cf2 Stream2Trig\cf3  returns an \cf2 InTrig\cf3 .kr(control,1)\
		\cf2 Object\cf3  returns itself\
			so a \cf2 Sample\cf3  or an \cf2 Env\cf3  is passed into the instr function, and in \
			fact the control it was passed is \cf2 nil\cf3  since it would have used\
			addInstrOnlyArg\
			\
	the instr function is valued with those objects.\
		during the course of the ugenFunc evaluation,\
		\cf2 BufferProxy\cf3  objects (\cf2 Sample\cf3  etc.) may request to addSecretIr or addSecretKr\
		arguments.  \cf2 this\cf3  is to request additional inputs to the synth that do not\
		have arguments in the instr function.  thus a \cf2 Sample\cf3  can pass itself to the\
		instr function as an object, and then request a synth input that will be used\
		to get the bufnum dynamically passed in when the synth actually plays.\
		\
		\cf2 this\cf3  can also be used to request a tempo bus input (not yet implemented)\
		\
	the \cf2 Out\cf3 .ar and a kr control of the name \cf4 \\out\cf3  are added bassed on the rate and numChannels\
		of the result of the ugenFunc.\
		\
	the unique synthDef name is calculated.  the name should represent the instr name\
		and the fixed inputs that were used to evaluate it.  any \cf2 Patch\cf3  that uses the\
		same fixed inputs (\cf2 SimpleNumbers\cf3 ) should be able to share the synthDef,\
		and all the variable inputs should be of compatible rate and numChannels.\
	\
	}