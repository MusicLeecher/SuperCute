{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Scoping and Closure \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
SuperCollider has nested scoping of variables. A function can refer not only to its own arguments and variables, but also to those declared in any enclosing (defining) contexts.\
\
For example :\
\
The function defined below within 
\f2 makeCounter
\f1  can access all of the arguments and variables declared in 
\f2 makeCounter
\f1 . Other code can call the returned function at some later time and it can access and update the values contained in 
\f2 makeCounter
\f1  at the time when the inner function was instantiated. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  makeCounter;\
makeCounter = \{ \cf2 arg\cf0  curVal=0, stepVal=1; \
	 \cf3 // return a function :\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	\{\
		\cf2 var\cf0  temp;\
		\cf3 // temp is local to this function, curVal & stepVal in the\
\cf0 		\cf3 // enclosing function are referred to here within.\
\cf0 		temp = curVal;\
		curVal = curVal + stepVal;\
		temp 				\cf3 // return result\
\cf0 	\}\
\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // each invocation of makeCounter creates a new set of variables curVal and stepVal\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
x = makeCounter.value(10, 1);\
z = makeCounter.value(99, 100); \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // x and z are functions which refer to different instances of the variables curVal and stepVal\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
x.value.postln; \cf3 // posts 10\
\cf0 x.value.postln; \cf3 // posts 11\
\cf0 z.value.postln; \cf3 // posts 99\
\cf0 z.value.postln; \cf3 // posts 199\
\cf0 x.value.postln; \cf3 // posts 12\
\cf0 x.value.postln; \cf3 // posts 13\
\cf0 z.value.postln; \cf3 // posts 299\
\cf0 z.value.postln; \cf3 // posts 399\
\cf0 \
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 Note that even though the function which defines curVal and stepVal has completed execution, its variables are still accessible to those functions that were defined within its context. This is known as 
\f0\b lexical closure
\f1\b0 , the capturing and availability of variables defined in outer contexts by inner contexts even when the outer contexts may have completed execution.\
\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 \
\
}