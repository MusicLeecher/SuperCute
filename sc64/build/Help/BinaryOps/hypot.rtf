{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 hypot		hypotenuse
\fs24 \
\
BinaryOperator\
\
hypot(x, y)\
x hypot: y\
x.hypot(y)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Returns the square root of the sum of the squares of a and b. Or equivalently, the distance from the origin\
to the point (x, y). \
See also 
\f0\b atan2
\f1\b0 .\

\f2 \

\f1 In this example, hypot is used to calculate a doppler shift pitch and amplitude based on distance.\

\f2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 (\
\{\
	\cf2 var\cf0  x, y, distance, velocity, pitchRatio, amplitude;\
	\cf3 // object travels 200 meters in 6 secs (=120kph) passing 10 meters \
\cf0 	\cf3 // from the listener\
\cf0 	x = 10;\
	y = \cf2 LFSaw\cf0 .kr(1/6, 0, 100);\
	distance = hypot(x, y);\
	velocity = \cf2 Slope\cf0 .kr(distance);\
	pitchRatio = (344 - velocity) / 344;  \cf3 // speed of sound is 344 meters/sec\
\cf0 	amplitude = 10 / distance.squared;\
	\cf2 FSinOsc\cf0 .ar(1000 * pitchRatio, 0, amplitude)\
\}.play)
\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 The next example uses the distance to modulate a delay line.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (\
\{\
	\cf2 var\cf0  x, y, distance, velocity, pitchRatio, amplitude, motorSound;\
	\cf3 // object travels 200 meters in 6 secs (=120kph) passing 10 meters \cf0 \
	\cf3 // from the listener\cf0 \
	x = 10;\
	y = \cf2 LFSaw\cf0 .kr(1/6, 0, 100);\
	distance = hypot(x, y);\
	amplitude = 40 / distance.squared;\
	motorSound = \cf2 RLPF\cf0 .ar(\cf2 FSinOsc\cf0 .ar(200, 0, \cf2 LFPulse\cf0 .ar(31.3, 0, 0.4)), 400, 0.3);\
	\cf2 DelayL\cf0 .ar(motorSound, 110/344, distance/344, amplitude)\
\}.play)
\fs24 \
}