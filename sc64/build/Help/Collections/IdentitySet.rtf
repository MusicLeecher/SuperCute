{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-BoldOblique;
\f3\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 IdentitySet\

\f1\b0\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Superclass: Set\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
An IdentitySet is collection of objects, no two of which are the same object (aka. "identical").\
Most of its methods are inherited. Look in the Collection class for the most of the relevant methods.\
The contents of an IdentitySet are 
\f0\b unordered
\f1\b0 . You must not depend on the order of items in an IdentitySet.\
\
IdentitySets are faster than Sets because testing for identity is much faster than testing for\
equality. Different classes may implement equality in different ways, but identity can be determined\
just by comparing the object addresses. This allows some methods of IdentitySet to be implemented\
by fast primitives.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\i\b\fs26 \cf0 \
\
Adding and Removing:
\fs28 \ul \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\i0\b0\fs24 \cf0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 add(anObject)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
	Add anObject to the IdentitySet. \
	An object which is equal to an object already in the IdentitySet will not be added.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf2 \
	IdentitySet\cf0 [1, 2, 3].add(4);\
	\
	\cf2 IdentitySet\cf0 [1, 2, 3].add(3);\
	\
	\cf3 // the two strings are equal but not identical\cf0 \
	\cf2 IdentitySet\cf0 [\cf4 "abc"\cf0 , \cf4 "def"\cf0 , \cf4 "ghi"\cf0 ].add(\cf4 "def"\cf0 );  \
	\
	\cf3 // symbols are guaranteed to be identical if they are equal\cf0 \
	\cf2 IdentitySet\cf0 [\cf5 'abc'\cf0 , \cf5 'def'\cf0 , \cf5 'ghi'\cf0 ].add(\cf5 'def'\cf0 );  \
	\
	\cf2 IdentitySet\cf0 [\cf5 'abc'\cf0 , \cf5 'def'\cf0 , \cf5 'ghi'\cf0 ].add(\cf5 'jkl'\cf0 );
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 remove(anObject)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
	Remove anObject from the IdentitySet.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf0 	\cf2 IdentitySet\cf0 [1, 2, 3].remove(3);
\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 \ul \ulc0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\i\fs26 \cf0 \ulnone Iteration:
\f0\i0\fs28 \ul \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 do(function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
	Evaluates function for each item in the IdentitySet.\
	The function is passed two arguments, the item and an integer index.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf2 	IdentitySet\cf0 [1, 2, 3, 300].do(\{ \cf2 arg\cf0  item, i; item.postln \});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\i\b\fs26 \cf0 \
Finding an element:
\f1\i0\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 scanFor(elem)
\f1\b0 \
	\
	Finds an element in the collection, otherwise returns nil.\
	\
	
\f3\fs18 \cf2 IdentitySet\cf0 [1, 2, 3, 300].do(\{ \cf2 arg\cf0  item, i; item.postln \});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
This is fairly efficient. compare the following benchmarks:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f3\fs18 \cf3 // comparison of array indexing and identity set lookup\cf0 \
(\
f = \{|n=4|\
	var x, y, i;\
	x = (0..n);\
	y = x.as(\cf2 IdentitySet\cf0 );\
	i = x.choose;\
	bench \{ 100.do \{ x[i] \} \};\
	bench \{ 100.do \{ y.scanFor(i) \} \};\
\}\
);\
\
f.(4)\
f.(8)\
f.(100)\
f.(10000)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
}