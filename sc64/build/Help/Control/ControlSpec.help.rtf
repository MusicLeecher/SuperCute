{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red0\green0\blue0;\red191\green0\blue0;\red0\green115\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs38 \cf0 ControlSpec			
\fs26 specification for a control input
\fs28 \
\
superclass: Spec\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 The original, and most common spec.  (see [\ul Spec\ulnone ] )\
\

\f0\b ControlSpec.new( minval, maxval, warp, step, default,units);\

\f1\b0 \
The most common way to create one is by \
\
	anObject.asSpec\cf2 \
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // nil becomes a default ControlSpec\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf3 nil\cf0 .asSpec.dump\
\cf3 Instance\cf0  of \cf3 ControlSpec\cf0  \{    (0313\cf3 FF18\cf0 , gc=00, fmt=00, flg=00, set=03)\
  instance variables [6]\
    minval : \cf3 Float\cf0  0\
    maxval : \cf3 Float\cf0  1\
    warp : \cf3 Symbol\cf0  \cf4 'linear'\cf0 \
    step : \cf3 Float\cf0  0\
    default : \cf3 Float\cf0  0\
\}\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf2 // array is used as arguments to ControlSpec.new( minval, maxval, warp, step, default)
\f2\fs18 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 [300,3000,\cf4 \\exponential\cf0 ,100].asSpec.dump\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Instance\cf0  of \cf3 ControlSpec\cf0  \{    (0313\cf3 FC08\cf0 , gc=00, fmt=00, flg=00, set=03)\
  instance variables [6]\
    minval : \cf3 Integer\cf0  300\
    maxval : \cf3 Integer\cf0  3000\
    warp : \cf3 Symbol\cf0  \cf4 'exponential'\cf0 \
    step : \cf3 Integer\cf0  100\
    default : \cf3 Integer\cf0  300\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf2 // partially specified ...\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 [-48,48].asSpec.dump\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Instance\cf0  of \cf3 ControlSpec\cf0  \{    (0313\cf3 FF18\cf0 , gc=00, fmt=00, flg=00, set=03)\
  instance variables [6]\
    minval : \cf3 Integer\cf0  -48\
    maxval : \cf3 Integer\cf0  48\
    warp : \cf3 Symbol\cf0  \cf4 'linear'\cf0 \
    step : \cf3 Float\cf0  0\
    default : \cf3 Integer\cf0  -48\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\

\f0\b constrain
\f1\b0  (value)\
	clips and rounds the value to within the spec\
	
\f2\fs18 \cf5 \
	
\f1\fs24 \cf0 \

\f0\b map
\f1\b0  (value)\
	maps a value from [0..1] to spec range\
	\
	\
		\

\f0\b unmap
\f1\b0  (value)\
	maps a value from the spec range to [0..1]\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 	// example\
	\
	\cf6 // make a frquency spec with an exponential range from 20 to 20000, \cf5 \
	\cf6 // give it a rounding of 30 (Hz)\cf5 \
	a = \cf7 \\freq\cf5 .asSpec;\
	a.step = 100;\
	\
	\cf6 // equivalent:\cf5 \
	a = [20, 20000, \cf7 'exp'\cf5 , 100, 440].asSpec;\
	a.dump;\
	\
	a.constrain(800); \cf6 // make sure it is in range and round it.\cf5 \
	a.constrain(803); \cf6 // make sure it is in range and round it.\cf0 	\
\
	\cf5 a.map(0.5);\
	a.map(0.0); \cf6 // returns min\cf5 \
	a.map(1.5); \cf6 // exceeds the area: clip, returns max\cf5 \
	\
	a.unmap(4000);\
	a.unmap(22.0);\cf0 	\
			\
	\cf6 // using spec for sliders:\cf5 \
	(\
	\cf8 var\cf5  w, c, d;\
	w = \cf8 SCWindow\cf5 (\cf9 "control"\cf5 , \cf8 Rect\cf5 (128, 64, 340, 160));\
	w.front;\
	c = \cf8 SCSlider\cf5 (w, \cf8 Rect\cf5 (10, 10, 300, 30));\
	d = \cf8 SCStaticText\cf5 (w, \cf8 Rect\cf5 (10, 40, 300, 30));\
	c.action = \{\'ca\
		d.string = \cf9 "unmapped value"\
		\cf5  + c.value.round(0.01) \
		 + \cf9 "......"\cf5  \
		 + \cf9 "mapped value"\cf5  \
		 + a.map(c.value)\
	\};\
	)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	\
	\
	\
	\
	}