{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green0\blue191;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 StreamClutch
\f1\b0\fs18           \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 superclass: Stream
\f1\b0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs26 \cf0 buffers a streamed value
\f1\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 StreamClutch.new(pattern, connected)
\f1\b0\fs18 \
\

\f0\b\fs24 pattern
\f2\b0  		a pattern or stream to be buffered\

\f0\b connected
\f2\b0  \
			if true it wil call the next stream value for each time next is called\
			if false it returns the last value
\f1\fs18 \
		\
		\
		\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //example:\
\cf3 \
\cf4 SynthDescLib\cf3 .read;\
\
a = \cf4 Pseq\cf3 ([1, 2, 3], \cf5 inf\cf0 );\
b = \cf5 StreamClutch\cf0 (a);\
\
6.do(\{ b.next.postln \});\
b.connected = \cf5 false\cf0 ;\
6.do(\{ b.next.postln \});\
\
\
\cf2 //statistical clutch\cf0 \
a = \cf5 Pseq\cf0 ([1, 2, 3], \cf5 inf\cf0 );\
b = \cf5 StreamClutch\cf0 (a, \{ 0.5.coin \});\
\
12.do(\{ b.next.postln \});\
\
\
\cf2 //sound example:\cf0 \
(\
\cf5 var\cf0  clutch, pat, decicion;\
decicion = \cf5 Pseq\cf0 ([\cf5 Pn\cf0 (\cf5 true\cf0 ,10), \cf5 Prand\cf0 ([\cf5 true\cf0 , \cf5 false\cf0 ], 10)], \cf5 inf\cf0 ).asStream;\
pat = \cf5 Pbind\cf0 (\cf6 \\freq\cf0 , \cf5 Pseq\cf0 ([200, [300, 302], 400, 450], \cf5 inf\cf0 ), \cf6 \\dur\cf0 , 0.3);\
clutch = \cf5 StreamClutch\cf0 (pat, decicion);\
clutch.asEventStreamPlayer.play;\
)\
\
\cf2 // independant stepping\cf0 \
(\
\cf5 var\cf0  clutch, pat, decicion;\
pat = \cf5 Pbind\cf0 (\cf6 \\freq\cf0 , \cf5 Pseq\cf0 ([200, [300, 302], 400, 450], \cf5 inf\cf0 ), \cf6 \\dur\cf0 , 0.3);\
b = \cf5 StreamClutch\cf0 (pat);\
b.connected = \cf5 false\cf0 ;\
b.asEventStreamPlayer.play;\
)\
\
b.step;\
\
\
\
\
}