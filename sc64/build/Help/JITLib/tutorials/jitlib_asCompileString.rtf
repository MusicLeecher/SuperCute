{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\
\{ 10 + 6 * ~harry \}.asCompileString;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 many objects understand 
\f2\b .storeOn
\f1\b0 , which a way to post their string that is needed\
to reproduce them by compilation.\
sometimes one wants to store a certain configuration of a proxy space, which can be done\
if all functions used are closed functions.
\f0\fs18 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // an example how ProxySpace can document its current state:\cf0 \
\
p = \cf3 ProxySpace\cf0 .push(s);\
\
\
(\
~ctl1 = \{\
	\cf3 var\cf0  z = 1;\
	4.do \{ \cf3 |i|\cf0  z = z * \cf3 SinOsc\cf0 .kr(i.sqrt, i+[0,0.2]) \};\
	z\
\};\
\
~ctl2[0] = \{ \cf3 LFNoise2\cf0 .kr([20,20],20) \};\
~ctl2[1] = \{\'ca\
	\cf3 LFNoise2\cf0 .kr([20,20],20) * \cf3 LFNoise0\cf0 .kr([20,20],20)\
\};\
\
~out = \{\
	\cf3 SinOsc\cf0 .ar(~freq.kr, 0, 0.1)\
\};\
\
~freq[0] = \{ ~ctl1.kr(2) + ~ctl2.kr(2) + 400 \};\
~freq[5] = ~ctl1.wrap2(~ctl2) * ~ctl1 / (~ctl2 + ~ctl1);\
\
~pat = Pbind(\\freq, Pfunc(\{ 1.2.rand \}));\
~z = 9;\
~out.set(\\freq, 760, \\ffreq, 20);\
)\
\
p.asCompileString;\
\
\cf2 // the document message creates a new document which it posts the code into\cf0 \
\
p.document;			\cf2 // document everything\cf0 \
p.document([\cf4 \\out\cf0 ]); 	\cf2 // document all dependants of ~out\cf0 \
p.document([\cf4 \\ctl1\cf0 ]);	\cf2 // document all dependants of ~ctl1\cf0 \
\
\
\
}