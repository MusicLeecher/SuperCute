{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Monitor
\f1\b0\fs24 		
\f0\b  link between busses
\f1\b0 \
\
superclass: Object\
\
	\
	
\f0\b play(fromIndex, fromNumChannels, toIndex, toNumChannels, target, multi, volume, fadeTime)
\f1\b0 \
				plays from a bus index with a number of channels to another index with a number\
				of channels, within a target group, or a server.\
				
\f0\b multi
\f1\b0 : keep old links and add new one\
				
\f0\b volume
\f1\b0 : volume at which to monitor\
				
\f0\b fadeTime
\f1\b0 : fade in fade out time\
				\
	
\f0\b isPlaying
\f1\b0 		returns true if the group is still playing\
	\
	\
	
\f0\b stop(fadeTime)\
				stops within the fadeTime
\f1\b0 \
	\
	
\f0\b vol_
\f1\b0 			set the volume\
	
\f0\b out_
\f1\b0 			set the output index. doesn't work right now.
\f2\fs18 \
	\
	
\f0\b\fs24 playToBundle(bundle, ... (same as .play))
\f2\b0\fs18 \
				
\f1\fs24 adds all playing osc messages to the bundle. the bundle should support the message
\f0\b  .add
\f2\b0\fs18 \
	\
	\
	\
	\cf2 //example\cf0 \
	\
	Server.default = s = Server.internal;\
	s.boot;\
	s.scope(16);\
\
	\{ \cf3 Out\cf0 .ar(87, \cf3 SinOsc\cf0 .ar(\cf3 MouseX\cf0 .kr(40, 10000, 1) * [1, 2, 3], 0, 0.2)) \}.play;\
	x = \cf3 Monitor\cf0 .new;\
	x.play(87, 3, 1, 2);\
	x.out = 0;\
	x.stop(3.0);\
	x.play(87, 1, 0, 1); \cf2 // in > out : now mixes down (wrapping)\cf0 \
	x.play(89, 1, 0, 2); \cf2 // in < out : now distributes to 2 channels\
	\cf0 x.stop;\
	\
	\cf2 // multiple play\cf0 \
	x.play(87, 1, 0, 2, multi:\cf3 true\cf0 );	\
	x.play(88, 1, 0, 2, multi:\cf3 true\cf0 );	\
	x.play(89, 1, 0, 2, multi:\cf3 true\cf0 );	\
	x.stop;\
\
\
	\cf2 // experimental, might change:\cf0 \
	\cf2 // multichannel method\cf0 \
	\cf2 // playN(outs, amps, ins, mastervol, fadeTime, group)\
	// outs, amps can be nested arrays\cf0 \
	\
	x.playN([0, 1, 4], [0.1, 0.4, 0.3], [87, 88, 89]); \cf2 // play: 87 -> 0,  88 -> 1, 89 -> 4\cf0 \
	x.playN([0, [1, 3, 2], 4], [0.1, [0.4, 0.2, 0.1], 0.3], [87, 88, 89]); \
		\cf2 // play: 87 -> 0,  88 -> [1, 3, 2],  89 -> 4\cf0 \
		\cf2 // volumes 0.1, [0.4, 0.2, 0.1], and 0.3\
	\cf0 x.playN(vol:0.0, fadeTime:4);\cf2 	\cf0 \
	\
\
	}