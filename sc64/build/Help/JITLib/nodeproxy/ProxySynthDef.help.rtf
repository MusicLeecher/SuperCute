{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green0\blue0;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 ProxySynthDef
\f1\b0\fs18 			
\f0\b\fs24 synth def that wraps ugen graph
\f1\b0\fs18 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 superclass: SynthDef\
\
\
*new(name, func, rates, prependArgs, makeFadeEnv, channelOffset=0, chanConstraint)\
	
\f2\b0 name, func,  rates, prependArgs: like in SynthDef.new\
	todo: add variants.\
	\
	
\f0\b makeFadeEnv
\f2\b0 \
		if true it constructs a fader envelope and adds controls for gate and fadeTime\
	
\f0\b channelOffset
\f2\b0 \
		a constant offset that is added to the out number\
	
\f0\b chanConstraint
\f2\b0 \
		max numChannels for the synthdef. If ugenfunc returns a larger array, it wraps\

\f0\b \
*sampleAccurate_\

\f2\b0 	use OfsetOut, if set to true (default: false)\

\f0\b \
\

\f2\b0 for inner workings see [
\f0\b jitlib_fading
\f2\b0 ]
\f1\fs18 \
\
\
// example\
\
\
a = \cf2 ProxySynthDef\cf0 (\cf3 "xtest"\cf0 , \{\'ca\cf2 SinOsc\cf0 .ar(400) * 0.1 \});\
\
a.send(s);\
\
x = \cf2 Synth\cf0 (\cf3 "xtest"\cf0 );\
x.release;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 \
\cf5 /*\
\
	if the resulting number of channels is larger than a given channelConstraint,\
	it behaves according to the rate: audio rate signals are wrapped around\
	a smaller channel size, control rate signals are not (the exceeding channels are left out)\
	\
	\
*/\cf4 \
}