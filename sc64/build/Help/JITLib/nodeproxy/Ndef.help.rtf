{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Ndef	
\f1\b0\fs18 			 
\f0\b\fs24 node proxy definition
\f1\b0\fs18 \
\

\f2\fs24 superclass: NodeProxy\
\
\
\
reference to a proxy, forms an alternative to ProxySpace\
\
Ndef(key) returns the instance, Ndef(key, obj) stores the object and returns the instance, like Tdef and Pdef.\
see also 
\f0\b ProxySpace
\f2\b0 , 
\f0\b NodeProxy
\f2\b0 \
\
\
	
\f0\b *new(key, object)
\f2\b0 \
			craete a new node proxy and store it in a global dictionary under key.\
			if there is already an Ndef there, replace its object with the new one.\
			The object can be any supported class, see NodeProxy help.\
			if key is an association, it is interpreted as 
\f0\b server -> key.
\f2\b0 \
	\

\f1\fs18 	
\f0\b\fs24 *clear 
\f2\b0 \
			clear all proxies
\f1\fs18 \
\
	
\f0\b\fs24 *at(server, key)\
			
\f2\b0 return an instance at that key for that server
\f1\fs18 \
			\
	
\f0\b\fs24 defaultServer_(a server)\
			
\f2\b0 set the default server (default: Server.local)
\f1\fs18 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // examples\cf0 \
\
s = \cf3 Server\cf0 .local.boot;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 ).play;\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 ).fadeTime = 1;\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 , \{ \cf3 SinOsc\cf0 .ar([600, 635], 0, \cf3 SinOsc\cf0 .kr(2).max(0) * 0.2) \});\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 , \{ \cf3 SinOsc\cf0 .ar([600, 635] * 3, 0, \cf3 SinOsc\cf0 .kr(2 * 3).max(0) * 0.2) \});\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 , \{ \cf3 SinOsc\cf0 .ar([600, 635] * 2, 0, \cf3 SinOsc\cf0 .kr(2 * 3).max(0) * 0.2) \});\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 , \cf3 Pbind\cf0 (\cf4 \\dur\cf0 , 0.17, \cf4 \\freq\cf0 , \cf3 Pfunc\cf0 (\{ rrand(300, 700) \})) );\
\
\cf3 Ndef\cf0 (\cf4 \\lfo\cf0 , \{ \cf3 LFNoise1\cf0 .kr(3, 400, 800) \});\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 ).map(\cf4 \\freq\cf0 , \cf3 Ndef\cf0 (\cf4 \\lfo\cf0 ));\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 , \{ \cf3 arg\cf0  freq; \cf3 SinOsc\cf0 .ar([600, 635] + freq, 0, \cf3 SinOsc\cf0 .kr(2 * 3).max(0) * 0.2) \});\
\cf3 Ndef\cf0 (\cf4 \\lfo\cf0 , \{ \cf3 LFNoise1\cf0 .kr(300, 400, 800) \});\
\
\cf3 Ndef\cf0 .clear; \cf2 //clear all\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 recursion:\
\

\f2\b0 Ndefs can be used recursively.\
a structure like the following works:\
\

\f1\fs18 \cf3 \
Ndef\cf0 (\cf4 \\sound\cf0 , \{ \cf3 SinOsc\cf0 .ar([600, 635], \cf3 Ndef\cf0 (\cf4 \\sound\cf0 ).ar * 10, \cf3 LFNoise1\cf0 .kr(2).max(0) * 0.2) \});\
\cf3 Ndef\cf0 (\cf4 \\sound\cf0 ).play;\

\f2\fs24 \
this is due to the fact that there is a feedback delay (the server's block size), usually 64 samples,\
so that calculation can reiterate over its own outputs.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf2 \
}