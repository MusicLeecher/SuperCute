{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs36 \cf0 Prorate
\f1\b0\fs18 		
\f2\fs24 		
\f0\b divide stream proportionally
\f2\b0 \
\
superclass: FilterPattern\
\
\

\f0\b *new(proportions, pattern)
\f2\b0 \
	\
	
\f0\b proportions
\f2\b0 : 	a pattern that returns either numbers (divides the pattern into pairs)\
				or arrays of size n which are used to split up the input into n parts.\
	
\f0\b pattern
\f2\b0 :		a numerical pattern\
	\

\f1\fs18 \
\
\cf2 \
\
// examples:\cf0 \
\
\cf2 \
// divide 1 into various proportions\cf0 \
(\
a = \cf3 Prorate\cf0 (\cf3 Pseq\cf0 ([0.35, 0.5, 0.8]), 1);\
\
x = a.asStream;\
\
x.nextN(8)\
)\
\
\cf2 // divide a pattern into various proportions\cf0 \
(\
a = \cf3 Prorate\cf0 (\cf3 Pseq\cf0 ([0.35, 0.5, 0.8]), \cf3 Prand\cf0 ([20, 1], \cf3 inf\cf0 ));\
\
x = a.asStream;\
\
x.nextN(8)\
)\
\
\
\cf2 // divide 1 into several parts\cf0 \
(\
a = \cf3 Prorate\cf0 (\cf3 Pseq\cf0 ([[1, 2], [5, 7], [4, 8, 9]]).collect(\cf3 _\cf0 .normalizeSum), 1);\
\
x = a.asStream;\
\
x.nextN(8)\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // sound example\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "help-sinegrain"\cf0 , \
	\{ \cf3 arg\cf0  out=0, freq=440, sustain=0.05;\
		\cf3 var\cf0  env;\
		env = \cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 .perc(0.01, sustain, 0.2), doneAction:2);\
		\cf3 Out\cf0 .ar(out, \cf3 SinOsc\cf0 .ar(freq, 0, env))\
	\}).send(s);\
)\
\
\
(\cf5 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 var\cf5  a, x;\
a = \cf6 Prorate\cf5 (\
		\cf6 Prand\cf5 ([2/3, 1/3, [0.3, 0.3, 0.4], [0.6, 0.4]], \cf6 inf\cf5 ),\
		\cf6 Pseq\cf5 ([1, 2, 1, 3, 12], \cf6 inf\cf5 )\
);\
\
3.do \{\
	\{\
	\cf6 var\cf5  x = a.asStream;\
	\cf6 var\cf5  freq = rrand(72, 84).midicps;\
		loop \{\
			\cf6 Synth\cf5 (\cf7 "help-sinegrain"\cf5 , [\cf8 \\freq\cf5 , freq]);\
			(0.25 * x.next).wait;\
		\}\
	\}.fork;\
\};\
\cf0 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\
\
\
\
}