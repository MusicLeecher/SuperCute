{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Stream2Trig			
\fs28 generate a trigger signal from a stream
\fs36 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 superclass: StreamKrDur\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 Stream2Trig(levels,deltas)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Take a pattern and use it as a stream of values for a trigger.  This plays the pattern in real time on the client, and sends messages to the server.
\f0\b \

\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 levels
\f1\b0  - A stream of values for the level of each trigger \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 	1.0\
	\cf2 Prand\cf0 ([1,0],\cf2 inf\cf0 )\
	\{ 1.0.rand \}
\f1\fs24 \

\f2\fs18 	`[ 1,0,1,0,] // Ref converted into Pseq([1,0,1,0],inf)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 	\
	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 deltas
\f1\b0  - A stream of values for the delta in beats between each trigger. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 	0.25\
	\cf2 Prand\cf0 ([0.25,0.5],\cf2 inf\cf0 )\
	\cf2 FuncStream\cf0 (\{ rrand(0.125,16.0) \})
\f1\fs24 \

\f2\fs18 	`[1.0,0.25,0.5] // Ref\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\cf3 \
(\
\cf4 Instr\cf3 (\cf5 \\Stream2Trig\cf3 , \{\cf4 arg\cf3  gate=0.0,freq=440,env;\
	p = \cf4 Pulse\cf3 .ar(freq,\cf4 LFNoise1\cf3 .kr(0.1).abs,0.5);\
	\cf4 Enveloper2\cf3 .ar(p,gate,env,2,2);\
\},[\
	\cf4 nil\cf3 ,\
	\cf4 nil\cf3 ,\
	\cf5 \\envperc\cf3 \
]);\
\
\cf4 Patch\cf3 .new(\cf5 \\Stream2Trig\cf3 ,\
[\
	\cf4 Stream2Trig\cf3 (\
		\cf4 Pseq\cf3 ([\
			\cf4 Prand\cf3 ([1,1,1,1,1,0,0,0,0],2)],\cf4 inf\cf3 ),\
		\cf4 Pseq\cf3 ([0.25,0.25,0.25,0.125,0.125],\cf4 inf\cf3 )\
	),\
	\cf4 StreamKrDur\cf3 (\cf4 Pseq\cf3 ( \cf4 Array\cf3 .rand(16,30,50).midicps,\cf4 inf\cf3  ), 0.25,0.1 )\
]).gui\
\
)\
\
\
\
(\
\
\cf4 Patch\cf3 .new(\cf5 \\Stream2Trig\cf3 ,\
[\
	\cf4 Stream2Trig\cf3 (\
		\cf4 Pseq\cf3 ([\
			\cf4 Pn\cf3 (\cf4 Pshuf\cf3 ([1,0,1,0],4),3),\
			\cf4 Pshuf\cf3 ([0.2,0,0.2,0],4)],\cf4 inf\cf3 ),\
		\cf4 Pseq\cf3 ([0.25,0.25,0.25,0.125,0.125],\cf4 inf\cf3 )\
	),\
	84\
]).gui\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
A nice sequel would be to make a class that also takes a gate duration stream\
(in beats or legato), so that the gate will stay open for that long.\
\
}