{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 BeatSched
\f1\b0\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 A beat capable function scheduler  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Functions can be scheduled for precise execution using relative seconds, relative beats, absolute seconds or absolute beats.  This class uses TempoClock for scheduling, and has some overlap of capabilities with that.\
\
The TempoClock class is used to specify what the tempo is, and is used for all beat <-> second calculations. The default global TempoClock object is used, or you can use a specific TempoClock instance.\
\
There is a default global BeatSched that can be addressed through class methods.  It uses the SystemClock and the default global TempoClock.  You may also create individual instances that maintain their own scheduling queues, tempii, and time epochs.\
\
If using BeatSched instances you can clear the queue, only affecting your own events.  If using the global BeatSched class, clearing the queue will affect everybody.  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 All of these methods exist as both \
	class (the default global scheduler) \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 		\cf2 BeatSched\cf0 .tsched(seconds,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 	and instance methods (a specific scheduler). \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 		beatSched = \cf2 BeatSched\cf0 .new;\
		beatSched.tsched(seconds,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 The default clock used is the SystemClock, but you may also specify to use the AppClock.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 \
		
\f1\b0 \

\f0\b tsched(seconds,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0        time based scheduling\
        delta specified in seconds\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 xtsched( seconds,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	exclusive time based schedule\
	any previous messages scheduling using xtsched, xsched or xqsched will \
	be cancelled. this is incredibly useful in situations where several messages \
	might be sent and you only want the last one to be used as the final answer.\
	example:  a monkey is hitting many buttons, changing his mind about which \
	sound to play next. this would result in many messages being stacked up all \
	at the same time, and the server would choke trying to execute them all.  \
	this is a kind of enforced monophony.\
	another example:  a sequence plays successive notes, all using xsched,  \
	you then switch to a different sequence.  	you don't want the note that was \
	scheduled from the previous sequence to happen.  	using one of the x-methods, \
	you don't have to worry about it, the old notes will be cleared when new ones\
	are scheduled.\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 sched(beats,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         delta specified in beats\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 xsched(beats,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	exclusive beat based scheduling\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 	\
qsched(quantize,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         will happen at the next even division ( 4.0 means on the downbeat of a 4/4 bar ),\
        or immediately if you happen to be exactly on a division.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 xqsched(quantize,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	exclusive quantized beat based scheduling\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 	\
tschedAbs(time,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         will happen at the time specified in seconds\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 schedAbs(beat,function)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         will happen at the beat specified.\
        \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 xblock\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 	blocks any and all pending x-scheduled messages.\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 time\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         get the scheduler's time\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 time_(seconds)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         set the scheduler's time        \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 beat\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         get the scheduler's current beat\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 beat_(beat)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         set the scheduler's current beat.\
        this is also used to start a "song":  zero the beat, and all absolute times\
        previously scheduled events will be unpredictable\
 
\f0\b deltaTillNext(quantizeDivision)\

\f1\b0  	returns the number of seconds untiil the next quantizeDivision.\
 	4.0 means the next even bar\
 	16.0 means the next 4 bar cycle\
 	0.25 means the next 16th note\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0  	
\f1\b0 \
        \

\f0\b clear\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0         clear all scheduled events. \
        \
 \
 \
In the examples, remember to execute groups of code lines together.\
 \
	
\f2\fs18 b = \cf2 BeatSched\cf0 .new;\
	 \
	b.qsched(4.0,\{ \cf3 "hello"\cf0 .postln; \});\
	 \
	b.qsched(4.0,\{ \cf3 "hello"\cf0 .postln; \});\
\
\
	b.time; // since the app started\
\
	b.time = 0.0; // reset the time\
\
	b.time;\
	 \
	b.beat;\
\
	TempoClock.default.tempo = 2;\
	b.beat.postln;\
	TempoClock.default.tempo = 1;\
	b.beat.postln;\
\
\
	b.time = 0.0;\
	b.tschedAbs(4.0,\{ \cf3 "4 seconds absolute time"\cf0 .postln; \});\
	b.tschedAbs(2.0,\{ \cf3 "2 seconds absolute time"\cf0 .postln; \});\

\f1\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 	b.xsched(4.0, \{ \cf3 "4 beats later"\cf0 .postln \});\
	// cancels previous xsched\
	b.xsched(2.0, \{ \cf3 "2 beats later"\cf0 .postln \});\
\
	\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 A little rounding error\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs18 \cf0 (\
\cf2 TempoClock.default\cf0 .tempo = 120 / 60.0;\
d = \cf2 Routine\cf0 (\{\
                20.do(\{\
                	var t;\
                   t = \cf2 BeatSched\cf0 .global.tdeltaTillNext(4.0);\
                   t.postln;\
				t.wait;\
                \});\
        \});\
        \cf2 SystemClock\cf0 .play(d);\
)\
\
\
at 5206.432346276  we ask for deltaTillNext 4\
[ 5204, 4, 5206.432346276 ]\
1.5676537239997\
\
that would be\
5206.432346276 + 1.5676537239997\
// at 5208\
5208\
\
\
// but when the scheded event comes due:\
[ 5204, 4, 5207.999072862 ]\
0.00092713799949706\
\
its appears to be slightly ahead of schedule, due\
to rounding errors in the several math ops that have happened.\
\
so the right answer is 0.00092713799949706\
as far as BeatSched is concerned.\
\
but if you try to loop like this, you will suffer from rounding errors.\
\
mostly you would never set up a loop like this, mostly\
you just want to know when the next even beat is so you can get your groove on.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\cf2 Tempo\cf0 .bpm_(120);\
d = \cf2 Routine\cf0 (\{\
	\cf3 "wait for the downbeat..."\cf0 .postln; \
	\cf2 OSCSched\cf0 .global.tdeltaTillNext(4.0).wait;\
\
      32.do(\{ arg i;\
           [i,BeatSched.beat].postln;				\
           Tempo.beats2secs(1.0).wait;\
      \});\
 \});\
\cf2 SystemClock\cf0 .play(d);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
  }