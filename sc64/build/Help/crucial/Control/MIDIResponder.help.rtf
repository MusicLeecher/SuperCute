{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 MIDIResponder\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 Register multiple functions to be evaluated when MIDI events occur.\
\

\f1\b0 MIDIResponder is an abstract class. These subclasses should be used for specific midi work.\
\

\f0\b CCResponder			
\f1\b0 Respond to control messages
\f0\b \
NoteOnResponder		
\f1\b0 Respond to note-on messages
\f0\b \
NoteOffResponder		
\f1\b0 Respond to note-off messages
\f0\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 BendResponder		
\f1\b0 \cf0 Respond to pitch bend messages
\f0\b \cf0 \
TouchResponder		
\f1\b0 \cf0 Respond to aftertouch messages
\f0\b \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Creation and initialization:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 \

\f0\b CCResponder(function, src, chan, num, value, install = true)\
NoteOnResponder(function, src, chan, num, veloc, install = true)\
NoteOffResponder(function, src, chan, num, veloc, install = true)\
BendResponder(function, src, chan, value, install = true)\
TouchResponder(function, src, chan, value, install = true)\

\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li580\fi-580\ql\qnatural

\f0\b \cf0 function
\f1\b0 : The function to execute when the incoming MIDI event matches the responder. The function takes the arguments \cf0 src, chan, A, B (or for Bend and Touch, src, chan, value).\cf0 \

\f0\b src
\f1\b0 : If a number is given, the responder will fire only for messages coming in from this port. The number may be the system UID (obtained from MIDIClient.sources[index].uid) or the index itself. If nil, the responder will match any port.\

\f0\b chan
\f1\b0 : The MIDI channel(s) to match.\

\f0\b num
\f1\b0 : The control or note number(s) to match.\

\f0\b value
\f1\b0 : The value(s) to match.\

\f0\b veloc
\f1\b0 : The velocities to match.\

\f0\b install
\f1\b0 : If true, install the responder automatically. If false, return the responder but don't install it (it will be inactive).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
Any of the matching values may be one of the following:\
\

\f0\b Nil
\f1\b0 :		Match anything.\

\f0\b Integer
\f1\b0 :	Match only this specific number.\

\f0\b Array
\f1\b0 :	Match any item in the array. Any kind of Collection will work here.\

\f0\b Function
\f1\b0 :	Evaluate the function with the incoming value as the argument. The function should return true or false.\
\
For instance, this would respond to note on messages from any port, channels 2 and 7 only, even numbered note numbers only, and only velocity values greater than 50. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 NoteOnResponder\cf3 (\{ \cf2 |src, chan, num, vel|\cf3  [src, chan, num, vel].postln \}, \
	\cf2 nil\cf3 , \
	[2, 7], \
	(0, 2..126),		\cf4 // could also be \{ |num| num.even \} or _.even\cf3 \
	\{ \cf2 |vel|\cf3  vel > 50 \});
\f1\fs24 \cf0 \
\
MIDIResponders automatically initialize the MIDIClient with 1 standard device.  If you have more devices, simply initialize the MIDIClient yourself before using any MIDIResponders.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs28 \cf0 Removal:
\f1\b0\fs24 \
\
Just call .remove on the responder.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf3 c = \cf2 CCResponder\cf3 (\{ ... \}, num: 1);	\cf4 // respond to any modwheel\cf3 \
\
c.remove;		\cf4 // stop this responder\cf3 \
}