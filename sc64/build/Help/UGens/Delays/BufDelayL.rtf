{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 BufDelayL	buffer based simple delay line with linear interpolation\
\

\fs24 BufDelayL.ar(buf, in, delaytime, mul, add)\
BufDelayL.kr(buf, in, delaytime, mul, add)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
Simple delay line with linear interpolation which uses a buffer for its internal memory. See also 
\f0\b [\ul BufDelayN\ulnone ]
\f1\b0  which uses no interpolation, and 
\f0\b [\ul BufDelayC\ulnone ]
\f1\b0  which uses cubic interpolation. Cubic interpolation is more computationally expensive than linear, but more accurate.\
\
See also 
\f0\b [\ul DelayL\ulnone ]
\f1\b0 .\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 buf
\f1\b0  - buffer number.\

\f0\b in
\f1\b0  - the input signal.\

\f0\b delaytime
\f1\b0  - delay time in seconds.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\cf2 // allocate buffer\
\cf0 b = \cf3 Buffer\cf0 .alloc(s,44100,1);\cf2 \
\
\cf0 (\
\cf2 // Dust randomly triggers Decay to create an exponential \cf0 \
\cf2 // decay envelope for the WhiteNoise input source\cf0 \
\{\
z = \cf3 Decay\cf0 .ar(\cf3 Dust\cf0 .ar(1,0.5), 0.3, \cf3 WhiteNoise\cf0 .ar);
\fs30 \

\fs18 \cf3 BufDelayL\cf0 .ar(b.bufnum, z, 0.2, 1, z); \cf2 // input is mixed with delay via the add input\cf0 \
\}.play\
)\
\
}