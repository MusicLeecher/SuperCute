{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
\f3\fswiss\fcharset77 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs44 \cf0 PV_HainsworthFoote
\f1\b0\fs24 \
\
FFT onset detector based on work described in \
\
Hainsworth, S. (2003) Techniques for the Automated Analysis of Musical Audio. PhD, University of Cambridge engineering dept. See especially p128. The Hainsworth metric is a modification of the Kullback Liebler distance. \
\
The onset detector has general ability to spot spectral change, so may have some ability to track chord changes  aside from obvious transient jolts, but there's no guarantee it won't be confused by frequency modulation artifacts.   \
\
Hainsworth metric on it's own gives good results but Foote might be useful in some situations: experimental. 
\f2\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\

\f0\b *ar(buffer, proph=0.0, propf=0.0, threshold=1.0, waittime=0.04)\

\f1\b0 \

\f0\b buffer-
\f1\b0  FFT buffer to read from\
\

\f0\b proph-
\f1\b0  What strength of detection signal from Hainsworth metric to use.\
\

\f0\b propf-
\f1\b0  What strength of detection signal from Foote metric to use. The Foote metric is normalised to [0.0,1.0]\
\

\f0\b threshold-
\f1\b0  Threshold hold level for allowing a detection\
\

\f0\b waittime-
\f1\b0  If triggered, minimum wait until a further frame can cause another spot (useful to stop multiple detects on heavy signals)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 See also 
\f0\b [\ul FFT Overview\ulnone ]
\f1\b0 .\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\i \cf0 Examples\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\i0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //just Hainsworth metric with low threshold		\cf0 \
(\
b=\cf3 Buffer\cf0 .alloc(s,2048,1);\
	\
\cf3 SynthDef\cf0 (\cf4 \\fftod\cf0 ,\
\{\
 \cf3 var\cf0  source1, detect;\
	\
	source1= \cf3 AudioIn\cf0 .ar(1); \
	\
	detect= \cf3 PV_HainsworthFoote\cf0 .ar(\cf3 FFT\cf0 (b.bufnum,source1), 1.0, 0.0);\
	\
	\cf3 Out\cf0 .ar(0,\cf3 SinOsc\cf0 .ar([440,445],0,\cf3 Decay\cf0 .ar(0.1*detect,0.1)));\
\}).play(s);	\
)	\
	\
\
\cf2 //spot note transitions		\cf0 \
(\
b=\cf3 Buffer\cf0 .alloc(s,2048,1);\
	\
\cf3 SynthDef\cf0 (\cf4 \\fftod\cf0 ,\
\{\
 \cf3 var\cf0  source1, detect;\
	\
	source1= \cf3 LFSaw\cf0 .ar(\cf3 LFNoise0\cf0 .kr(1,90,400),0,0.5); \
	\
	detect= \cf3 PV_HainsworthFoote\cf0 .ar(\cf3 FFT\cf0 (b.bufnum,source1), 1.0, 0.0, 0.9, 0.5);\
	\
	\cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(source1,-1.0)+ \cf3 Pan2\cf0 .ar(\cf3 SinOsc\cf0 .ar(440,0,\cf3 Decay\cf0 .ar(0.1*detect,0.1)),1.0));\
\}).play(s);	\
)	\
\
\
\
\cf2 //Foote solo- never triggers with threshold over 1.0, threshold under mouse control	\cf0 \
(\
b=\cf3 Buffer\cf0 .alloc(s,2048,1);\
	\
\cf3 SynthDef\cf0 (\cf4 \\fftod\cf0 ,\
\{\
 \cf3 var\cf0  source1, detect;\
	\
	source1= \cf3 AudioIn\cf0 .ar(1); \
	\
	detect= \cf3 PV_HainsworthFoote\cf0 .ar(\cf3 FFT\cf0 (b.bufnum,source1), 0.0, 1.0, \cf3 MouseX\cf0 .kr(0.0,1.1), 0.02);\
	\
	\cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(source1,-1.0)+ \cf3 Pan2\cf0 .ar(\cf3 SinOsc\cf0 .ar(440,0,\cf3 Decay\cf0 .ar(0.1*detect,0.1)),1.0));\
\}).play(s);	\
)\
\
\
\cf2 //compare to Amplitude UGen\cf0 \
(\
b=\cf3 Buffer\cf0 .alloc(s,2048,1);\
	\
\cf3 SynthDef\cf0 (\cf4 \\fftod\cf0 ,\
\{\
 \cf3 var\cf0  source1, detect;\
	\
	source1= \cf3 AudioIn\cf0 .ar(1); \
	\
	detect= (\cf3 Amplitude\cf0 .ar(source1)) > (\cf3 MouseX\cf0 .kr(0.0,1.1));\
	\
	\cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(source1,-1.0)+ \cf3 Pan2\cf0 .ar(\cf3 SinOsc\cf0 .ar(440,0,\cf3 Decay\cf0 .ar(0.1*detect,0.1)),1.0));\
\}).play(s);	\
)\
\
\
\
\
\
\
	\
	}