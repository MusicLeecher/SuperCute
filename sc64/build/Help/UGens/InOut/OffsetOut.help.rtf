{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green0\blue0;
\red0\green0\blue191;\red96\green96\blue96;\red96\green96\blue96;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 OffsetOut
\fs28 			write a signal to a bus with sample accurate timing		
\fs24 \
superclass: Out
\f1\b0 \
\
Output signal to a bus,  the sample offset within the bus is kept exactly; i.e. if the synth is scheduled to be started part way through a control cycle, OffsetOut will maintain the correct offset by buffering the output and delaying it until the exact time that the synth was scheduled for.\
\
This ugen is used where sample accurate output is needed.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 *ar(bus, channelsArray)  
\f1\b0 - write a signal to an audio bus.
\f0\b \
*kr(bus, channelsArray)  
\f1\b0 -
\f0\b  
\f1\b0 write a signal to a control bus.
\f2\fs18 \cf2 \
	\

\f0\b\fs24 \cf0 bus 
\f1\b0 - the index of the bus to write out to. The lowest numbers are written to the audio hardware.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li280\fi-280\ql\qnatural

\f0\b \cf0 channelsArray 
\f1\b0 - an Array of channels or single output to write out. You cannot change the size of this once a SynthDef has been built.
\f2\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 See the 
\f0\b [\ul Server-Architecture\ulnone ]
\f1\b0  and 
\f0\b [\ul Bus\ulnone ]
\f1\b0  helpfiles for more information on buses and how they are used.
\f2\fs18 \
	\

\f1\fs24 for achieving subsample accuracy see: [\ul SubsampleOffset\ulnone ]
\f2\fs18 \
	\
	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // example\cf4 \
\
	(\
	\cf5 SynthDef\cf4 (\cf6 "help-OffsetOut"\cf4 , \
		\{ \cf5 arg\cf4  out=0, freq=440, dur=0.05;\
			\cf5 var\cf4  env;\
			env = \cf5 EnvGen\cf4 .kr(\cf5 Env\cf4 .perc(0.01, dur, 0.2), doneAction:2);\
			\cf5 OffsetOut\cf4 .ar(out, \cf5 SinOsc\cf4 .ar(freq, 0, env))\
	\}).send(s);\
	\
	\cf5 SynthDef\cf4 (\cf6 "help-Out"\cf4 , \
		\{ \cf5 arg\cf4  out=0, freq=440, dur=0.05;\
			\cf5 var\cf4  env;\
			env = \cf5 EnvGen\cf4 .kr(\cf5 Env\cf4 .perc(0.01, dur, 0.2), doneAction:2);\
			\cf3 //compare to Out:\cf4 \
			\cf5 Out\cf4 .ar(out, \cf5 SinOsc\cf4 .ar(freq, 0, env))\
	\}).send(s);\
	)\
\
	\
	\cf3 // these are in sync\cf4 \
	(\
	\cf5 Routine\cf4 (\{\
		loop \{\
			s.sendBundle(0.2, [\cf6 "/s_new"\cf4 , \cf6 "help-OffsetOut"\cf4 , -1]);\
			0.01.wait;\
		\}\
	\}).play;\
	)\
	\
	\cf3 // these are less reliably in sync and are placed at multiples of blocksize.\cf4 \
	(\
	\cf5 Routine\cf4 (\{\
		loop \{\
			s.sendBundle(0.2, [\cf6 "/s_new"\cf4 , \cf6 "help-Out"\cf4 , -1]);\
			0.01.wait;\
		\}\
	\}).play;\
	)\
	\cf0 \
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 Note that if you have an input to the synth, it will be coming in and its normal\
time, then mixed in your synth, and then delayed with the output.\
So you shouldn't use OffsetOut for effects or gating.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 SynthDef\cf0 (\cf7 "trig1"\cf0 ,\{\
	\cf2 var\cf0  gate,tone;\
	gate = \cf2 Trig1\cf0 .ar(1.0,t);\
	tone = \cf2 In\cf0 .ar(10,1); \cf8 // tone comes in normally\cf0 \
	\cf8 // but is then delayed when by the OffsetOut\cf0 \
	\cf2 OffsetOut\cf0 .ar(0,\
		tone * \cf2 EnvGen\cf0 .ar(\
				\cf2 Env\cf0 ([0,0.1,0.1,0],[0.01,1.0,0.01],[-4,4],2),\
				gate,doneAction: 2\
			)\
	)\
\})\
	}