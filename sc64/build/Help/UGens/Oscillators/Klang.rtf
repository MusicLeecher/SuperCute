{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Klang		sine oscillator bank\

\fs24 \
Klang.ar(specificationsArrayRef, freqScale, freqOffset)\

\f1\b0 \
Klang is a bank of fixed frequency sine oscillators. Klang is more efficient than creating individual oscillators but offers less flexibility.\
\

\f0\b specificationsArrayRef
\f1\b0  - a Ref to an Array of three Arrays :\
	
\f0\b frequencies
\f1\b0  - an Array of filter frequencies.\
	
\f0\b amplitudes
\f1\b0  - an Array of filter amplitudes, or nil. If nil, then amplitudes default to 1.0\
	
\f0\b phases
\f1\b0  - an Array of initial phases, or nil. If nil, then phases default to 0.0\

\f0\b freqScale
\f1\b0  - a scale factor multiplied by all frequencies at initialization time.\

\f0\b freqOffset
\f1\b0  - an offset added to all frequencies at initialization time.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 play(\{ \cf3 Klang\cf2 .ar(`[ [800, 1000, 1200],[0.3, 0.3, 0.3],[pi,pi,pi]], 1, 0) * 0.4\});\

\f1 \

\f2 play(\{ \cf3 Klang\cf2 .ar(`[ [800, 1000, 1200], \cf3 nil\cf2 , \cf3 nil\cf2 ], 1, 0) * 0.25\});\
\
play(\{ \cf3 Klang\cf2 .ar(`[ \cf3 Array\cf2 .rand(12, 600.0, 1000.0), \cf3 nil\cf2 , \cf3 nil\cf2  ], 1, 0) * 0.05 \});\
\
\
\cf4 /////////////\cf2 \
s.boot;\
\
(\
\cf3 Routine\cf2 (\{\
loop(\{\
	play(\{\
		\cf3 Pan2\cf2 .ar(\cf3 Klang\cf2 .ar(`[ \cf3 Array\cf2 .rand(12, 200.0, 2000.0), \cf3 nil\cf2 , \cf3 nil\cf2  ], 1, 0), 1.0.rand) \
			* \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 .sine(4), 1, 0.02, doneAction: 2);\
	\});\
	2.wait;\
\})\
\}).play;\
)
\fs24 \
\cf0 \
}