{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Lag			exponential lag
\f1\b0\fs24 \
\

\f0\b Lag.ar(in, lagTime, mul, add)\
Lag.kr(in, lagTime, mul, add)\

\f1\b0 \
This is essentially the same as 
\f0\b OnePole
\f1\b0  except that instead of supplying the coefficient directly, it is calculated from a 60 dB lag time. This is the time required for the filter to converge to within 0.01 % of a value. This is useful for smoothing out control signals.\
\

\f0\b in
\f1\b0  - input signal\

\f0\b lagTime
\f1\b0  - 60 dB lag time in seconds.
\f2 \
\

\fs18 (\
\cf2 // used to lag pitch\cf0 \
\{\
	\cf3 SinOsc\cf0 .ar(		\cf2 // sine wave\cf0 \
		\cf3 Lag\cf0 .kr(			\cf2 // lag the modulator\cf0 \
			\cf3 LFPulse\cf0 .kr(4, 0, 0.5, 50, 400),	\cf2 // frequency modulator\cf0 \
			\cf3 Line\cf0 .kr(0, 1, 15)				\cf2 // modulate lag time\cf0 \
		), \
		0,	\cf2 // phase\cf0 \
		0.3	\cf2 // sine amplitude\cf0 \
	) \
\}.play\
)
\fs24 \
}