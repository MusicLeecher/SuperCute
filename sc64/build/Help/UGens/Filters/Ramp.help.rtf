{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 Ramp			linear lag
\f1\b0\fs24 \
\

\f0\b Ramp.ar(in, lagTime, mul, add)\
Ramp.kr(in, lagTime, mul, add)\

\f1\b0 \
This is similar to 
\f0\b Lag
\f1\b0  but with a linear rather than exponential lag. This is useful for smoothing out control signals.\
\

\f0\b in
\f1\b0  - input signal\

\f0\b lagTime
\f1\b0  - 60 dB lag time in seconds.
\f2 \
\

\fs18 \cf2 Server\cf0 .internal.boot;\
(\
\cf3 // used to lag pitch\cf0 \
\{\
	\cf2 SinOsc\cf0 .ar(		\cf3 // sine wave\cf0 \
		\cf2 Ramp\cf0 .kr(			\cf3 // lag the modulator\cf0 \
			\cf2 LFPulse\cf0 .kr(4, 0, 0.5, 50, 400),	\cf3 // frequency modulator\cf0 \
			\cf2 Line\cf0 .kr(0, 1, 15)				\cf3 // modulate lag time\cf0 \
		), \
		0,	\cf3 // phase\cf0 \
		0.3	\cf3 // sine amplitude\cf0 \
	) \
\}.scope;\
)\
\
\cf3 // Compare\cf0 \
(\
\cf2 var\cf0  pulse;\
\{\
	pulse = \cf2 LFPulse\cf0 .kr(8.772);\
	\cf2 Out\cf0 .kr(0,[\cf2 Ramp\cf0 .kr(pulse, 0.025), \cf2 Lag\cf0 .kr(pulse, 0.025), pulse]);\
\}.play(\cf2 Server\cf0 .internal);\
\cf2 Server\cf0 .internal.scope(3, bufsize: 44100, rate: \cf4 \\control\cf0 , zoom: 40);\
)\
}