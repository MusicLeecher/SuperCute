{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 SCMultiSliderView
\f1\b0\fs18 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 isFilled = true
\f1\b0\fs18 \
looks like a candlestick graph\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //use as table\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  size;\
size = 350 / 6;\
a = \cf2 SCWindow\cf0 (\cf4 "test"\cf0 , \cf2 Rect\cf0 (200 , 450, 450, 150));\
a.view.decorator =  \cf2 FlowLayout\cf0 (a.view.bounds);\
b = \cf2 SCMultiSliderView\cf0 (a, \cf2 Rect\cf0 (0, 0, 350, 100));\
\
c = \cf2 Array\cf0 .new;\
size.do(\{\cf2 arg\cf0  i;\
	c = c.add(0.01);\
	\});\
c = c.reverse;\
b.value_(c);\
\
b.isFilled_(\cf2 true\cf0 );\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // width in pixels of each stick \cf0 \
b.indexThumbSize_(2.0);\
\cf3 // spacing on the value axis\cf0 \
b.gap_(4);\
\
a.front;\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 flip by 90 degree
\f1\b0\fs18 \
(\
b.indexIsHorizontal_(\cf2 false\cf0 );\
\
a.bounds_(\cf2 Rect\cf0 (200 , 450, 150, 430));\
b.bounds_( \cf2 Rect\cf0 (10, 0, 100, 390));\
\
b.background_(\cf2 Color\cf0 .black);\
b.strokeColor_(\cf2 Color\cf0 .white);\
b.fillColor_(\cf2 Color\cf0 .white);\
\
b.gap = 1;\
\
a.front;\
)\
\
\

\f0\b\fs24 isFilled = false\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 individual squares for each point\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //use as multislider\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  size;\
size = 12;\
a = \cf2 SCWindow\cf0 (\cf4 "test"\cf0 , \cf2 Rect\cf0 (200 , 450, 10 + (size * 17), 10 + (size * 17)));\
a.view.decorator =  \cf2 FlowLayout\cf0 (a.view.bounds);\
b = \cf2 SCMultiSliderView\cf0 (a, \cf2 Rect\cf0 (0, 0, size * 17, size * 17));\
b.action = \{\cf2 arg\cf0  xb; (\cf4 "index: "\cf0  ++ xb.index ++\cf4 " value: "\cf0  ++ xb.currentvalue).postln\};\
\
c = \cf2 Array\cf0 .new;\
size.do(\{\cf2 arg\cf0  i;\
	c = c.add(i/size);\
\});\
b.value_(c);\
\
b.isFilled = false;\
\
b.xOffset_(5);\
b.thumbSize_(12.0);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // value axis size of each blip in pixels\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 b.valueThumbSize_(15.0);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // index axis size of each blip in pixels\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 b.indexThumbSize_( b.bounds.width / c.size );\
b.gap = 0;\
\
b.strokeColor_(\cf2 Color\cf0 .blue);\
b.fillColor_(\cf2 Color\cf0 .blue);\
\
a.front;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 read only mode
\f1\b0\fs18 \
(\
b.readOnly = \cf2 true\cf0 ;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 // show an area as selected, used like a cursor\cf0 \
b.showIndex = \cf2 true\cf0 ;\
\cf3 // move the selection index\cf0 \
b.index = 4;\
\cf3 // 1 item wide\cf0 \
b.selectionSize = 1;\
\
)\
\
b.index;\
b.selectionSize;\
\
(\
\cf3 //use it as sequencer\cf0 \
b.setProperty(\cf5 \\showIndex\cf0 , \cf2 true\cf0 );\
\
r = \cf2 Routine\cf0 (\{\
	\cf2 var\cf0  j = 0;\
	20.do(\{ \cf2 arg\cf0  i;\
		0.1.wait;\
		b.index_(j);\
		if (j < 11 ,\{j = j + 1\},\{j = 0\});\
	\});\
	0.1.wait;\
	20.do(\{ \cf2 arg\cf0  i;\
		[0.1,0.2].choose.wait;\
		b.index_(b.size.rand);\
	\});\
\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 AppClock\cf0 .play(r);\
\
)\
Note: this forces the entire view to redraw at each step and will spend a lot of CPU.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 drawLines
\f1\b0\fs18 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //use as multislider II with lines\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  size;\
size = 12;\
a = \cf2 SCWindow\cf0 (\cf4 "test"\cf0 , \cf2 Rect\cf0 (200 , 450, 450, 150));\
a.view.decorator =  \cf2 FlowLayout\cf0 (a.view.bounds);\
b = \cf2 SCMultiSliderView\cf0 (a, \cf2 Rect\cf0 (0, 0, size * 17, 50));\
a.view.decorator.nextLine;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //e = SCDragBoth(a , Rect(0, 0, size * 17, 50));\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 e = \cf2 SCMultiSliderView\cf0 (a, \cf2 Rect\cf0 (0, 0, size * 17, 50));\
c = \cf2 Array\cf0 .new;\
size.do(\{\cf2 arg\cf0  i;\
	c = c.add(i/size);\
\});\
b.value_(c);\
\
b.xOffset_(18);\
b.thumbSize_(1);\
b.strokeColor_(\cf2 Color\cf0 .blue);\
b.drawLines_(\cf2 true\cf0 );\
b.drawRects_(\cf2 true\cf0 );\
b.indexThumbSize_(1);\
b.valueThumbSize_(1);\
\
a.front;\
)\
c = \cf2 Array\cf0 .newClear(12);\
b.getProperty(\cf5 \\referenceValues\cf0 , \cf2 Array\cf0 .newClear(12));\
c.size;\
\
\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //press shift to extend the selection\
//use as waveView: scrubbing over the view returns index\
//if showIndex(false) the view is not refreshed (faster);\
//otherwise you can make a selection with shift - drag.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  size, file, maxval, minval;\
size = 640;\
a = \cf2 SCWindow\cf0 (\cf4 "test"\cf0 , \cf2 Rect\cf0 (200 , 140, 650, 150));\
a.view.decorator =  \cf2 FlowLayout\cf0 (a.view.bounds);\
b = \cf2 SCMultiSliderView\cf0 (a, \cf2 Rect\cf0 (0, 0, size, 50));\
b.readOnly_(\cf2 true\cf0 );\
a.view.decorator.nextLine;\
\
\
\
d = \cf2 Array\cf0 .new;\
c = \cf2 FloatArray\cf0 .newClear(65493);\
\
e = \cf2 SCSlider\cf0 ( a, \cf2 Rect\cf0 (0, 0, size, 12));\
e.action = \{\cf2 arg\cf0  ex; b.setProperty(\cf5 \\xOffset\cf0 , (ex.value * 4) + 1 )\};\
\
file = \cf2 SoundFile\cf0 .new;\
file.openRead(\cf4 "sounds/a11wlk01.wav"\cf0 );\
file.numFrames.postln;\
file.readData(c);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //file.inspect;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 file.close;\
minval = 0;\
maxval = 0;\
f = \cf2 Array\cf0 .new;\
d = \cf2 Array\cf0 .new;\
c.do(\{\cf2 arg\cf0  fi, i;\
	if(fi < minval, \{minval = fi\});\
	if(fi > maxval, \{maxval = fi\});\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 	//f.postln;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 	if(i % 256 == 0,\{\
		d = d.add((1 + maxval ) * 0.5 );\
		f = f.add((1 + minval ) * 0.5 );\
	\
		minval = 0;\
		maxval = 0;\
	\});\
\});\
\
b.reference_(d); \cf3 //this is used to draw the upper part of the table\
\cf0 b.value_(f);\
\
e = \cf2 SCSlider\cf0 ( a, \cf2 Rect\cf0 (0, 0, size, 12));\
e.action = \{\cf2 arg\cf0  ex; b.setProperty(\cf5 \\startIndex\cf0 , ex.value *f.size )\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 //b.enabled_(false);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 b.action = \{\cf2 arg\cf0  xb; (\cf4 "index: "\cf0  ++ xb.index).postln\};\
b.drawLines_(\cf2 true\cf0 );\
b.drawRects_(\cf2 false\cf0 );\
b.isFilled_(\cf2 true\cf0 );\
b.selectionSize_(10);\
b.index_(10);\
b.thumbSize_(1); \
b.gap_(0);\
b.colors_(\cf2 Color\cf0 .black, \cf2 Color\cf0 .blue(1.0,1.0));\
b.showIndex_(\cf2 true\cf0 );\
a.front;\
\
)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs24 \cf0 the "index" is also the "selection"\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs18 \cf0 setting showIndex = true will allow selections.\
shift click and drag will select an area.\
setting selectionSize will set that selection area.\
this dispay may also be used to look like an index as in the above sequencer example.\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  size;\
size = 12;\
a = \cf2 SCWindow\cf0 (\cf4 "test"\cf0 , \cf2 Rect\cf0 (200 , 450, 10 + (size * 17), 10 + (size * 17)));\
a.view.decorator =  \cf2 FlowLayout\cf0 (a.view.bounds);\
b = \cf2 SCMultiSliderView\cf0 (a, \cf2 Rect\cf0 (0, 0, size * 17, size * 17));\
b.action = \{ \cf2 arg\cf0  xb; (\cf4 "index: "\cf0  ++ xb.index ++\cf4 " value: "\cf0  ++ xb.currentvalue).postln\};\
\
c = \cf2 Array\cf0 .new;\
size.do(\{ \cf2 arg\cf0  i;\
	c = c.add(i/size);\
\});\
b.value_(c);\
\
b.xOffset_(5);\
b.thumbSize_(12.0);\
b.strokeColor_(\cf2 Color\cf0 .blue);\
b.fillColor_(\cf2 Color\cf0 .blue);\
\
b.drawLines(\cf2 false\cf0 );\
\
b.showIndex = true;\
b.index_(4);\
a.front;\
\
)\
\
// this means the x-dimension size in pixels\
b.indexThumbSize = 40\
\
// not the selection size \
\
// value pixels, the y-dimension\
b.valueThumbSize = 100\
\
}